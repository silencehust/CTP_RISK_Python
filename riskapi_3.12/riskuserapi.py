# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _riskuserapi
else:
    import _riskuserapi

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import weakref

TERT_RESTART = _riskuserapi.TERT_RESTART
TERT_RESUME = _riskuserapi.TERT_RESUME
TERT_QUICK = _riskuserapi.TERT_QUICK
SHFE_FTDC_EXP_Normal = _riskuserapi.SHFE_FTDC_EXP_Normal
SHFE_FTDC_EXP_GenOrderByTrade = _riskuserapi.SHFE_FTDC_EXP_GenOrderByTrade
SHFE_FTDC_ICT_EID = _riskuserapi.SHFE_FTDC_ICT_EID
SHFE_FTDC_ICT_IDCard = _riskuserapi.SHFE_FTDC_ICT_IDCard
SHFE_FTDC_ICT_OfficerIDCard = _riskuserapi.SHFE_FTDC_ICT_OfficerIDCard
SHFE_FTDC_ICT_PoliceIDCard = _riskuserapi.SHFE_FTDC_ICT_PoliceIDCard
SHFE_FTDC_ICT_SoldierIDCard = _riskuserapi.SHFE_FTDC_ICT_SoldierIDCard
SHFE_FTDC_ICT_HouseholdRegister = _riskuserapi.SHFE_FTDC_ICT_HouseholdRegister
SHFE_FTDC_ICT_Passport = _riskuserapi.SHFE_FTDC_ICT_Passport
SHFE_FTDC_ICT_TaiwanCompatriotIDCard = _riskuserapi.SHFE_FTDC_ICT_TaiwanCompatriotIDCard
SHFE_FTDC_ICT_HomeComingCard = _riskuserapi.SHFE_FTDC_ICT_HomeComingCard
SHFE_FTDC_ICT_LicenseNo = _riskuserapi.SHFE_FTDC_ICT_LicenseNo
SHFE_FTDC_ICT_TaxNo = _riskuserapi.SHFE_FTDC_ICT_TaxNo
SHFE_FTDC_ICT_HMMainlandTravelPermit = _riskuserapi.SHFE_FTDC_ICT_HMMainlandTravelPermit
SHFE_FTDC_ICT_TwMainlandTravelPermit = _riskuserapi.SHFE_FTDC_ICT_TwMainlandTravelPermit
SHFE_FTDC_ICT_DrivingLicense = _riskuserapi.SHFE_FTDC_ICT_DrivingLicense
SHFE_FTDC_ICT_SocialID = _riskuserapi.SHFE_FTDC_ICT_SocialID
SHFE_FTDC_ICT_LocalID = _riskuserapi.SHFE_FTDC_ICT_LocalID
SHFE_FTDC_ICT_BusinessRegistration = _riskuserapi.SHFE_FTDC_ICT_BusinessRegistration
SHFE_FTDC_ICT_HKMCIDCard = _riskuserapi.SHFE_FTDC_ICT_HKMCIDCard
SHFE_FTDC_ICT_AccountsPermits = _riskuserapi.SHFE_FTDC_ICT_AccountsPermits
SHFE_FTDC_ICT_FrgPrmtRdCard = _riskuserapi.SHFE_FTDC_ICT_FrgPrmtRdCard
SHFE_FTDC_ICT_CptMngPrdLetter = _riskuserapi.SHFE_FTDC_ICT_CptMngPrdLetter
SHFE_FTDC_ICT_HKMCTwResidencePermit = _riskuserapi.SHFE_FTDC_ICT_HKMCTwResidencePermit
SHFE_FTDC_ICT_UniformSocialCreditCode = _riskuserapi.SHFE_FTDC_ICT_UniformSocialCreditCode
SHFE_FTDC_ICT_CorporationCertNo = _riskuserapi.SHFE_FTDC_ICT_CorporationCertNo
SHFE_FTDC_ICT_OtherCard = _riskuserapi.SHFE_FTDC_ICT_OtherCard
SHFE_FTDC_IR_All = _riskuserapi.SHFE_FTDC_IR_All
SHFE_FTDC_IR_Group = _riskuserapi.SHFE_FTDC_IR_Group
SHFE_FTDC_IR_Single = _riskuserapi.SHFE_FTDC_IR_Single
SHFE_FTDC_IR_Department = _riskuserapi.SHFE_FTDC_IR_Department
SHFE_FTDC_IR_User = _riskuserapi.SHFE_FTDC_IR_User
SHFE_FTDC_DR_All = _riskuserapi.SHFE_FTDC_DR_All
SHFE_FTDC_DR_Group = _riskuserapi.SHFE_FTDC_DR_Group
SHFE_FTDC_DR_Single = _riskuserapi.SHFE_FTDC_DR_Single
SHFE_FTDC_DS_Asynchronous = _riskuserapi.SHFE_FTDC_DS_Asynchronous
SHFE_FTDC_DS_Synchronizing = _riskuserapi.SHFE_FTDC_DS_Synchronizing
SHFE_FTDC_DS_Synchronized = _riskuserapi.SHFE_FTDC_DS_Synchronized
SHFE_FTDC_BDS_Synchronized = _riskuserapi.SHFE_FTDC_BDS_Synchronized
SHFE_FTDC_BDS_Synchronizing = _riskuserapi.SHFE_FTDC_BDS_Synchronizing
SHFE_FTDC_ECS_NoConnection = _riskuserapi.SHFE_FTDC_ECS_NoConnection
SHFE_FTDC_ECS_QryInstrumentSent = _riskuserapi.SHFE_FTDC_ECS_QryInstrumentSent
SHFE_FTDC_ECS_GotInformation = _riskuserapi.SHFE_FTDC_ECS_GotInformation
SHFE_FTDC_TCS_NotConnected = _riskuserapi.SHFE_FTDC_TCS_NotConnected
SHFE_FTDC_TCS_Connected = _riskuserapi.SHFE_FTDC_TCS_Connected
SHFE_FTDC_TCS_QryInstrumentSent = _riskuserapi.SHFE_FTDC_TCS_QryInstrumentSent
SHFE_FTDC_TCS_SubPrivateFlow = _riskuserapi.SHFE_FTDC_TCS_SubPrivateFlow
SHFE_FTDC_FC_DataAsync = _riskuserapi.SHFE_FTDC_FC_DataAsync
SHFE_FTDC_FC_ForceUserLogout = _riskuserapi.SHFE_FTDC_FC_ForceUserLogout
SHFE_FTDC_FC_UserPasswordUpdate = _riskuserapi.SHFE_FTDC_FC_UserPasswordUpdate
SHFE_FTDC_FC_BrokerPasswordUpdate = _riskuserapi.SHFE_FTDC_FC_BrokerPasswordUpdate
SHFE_FTDC_FC_InvestorPasswordUpdate = _riskuserapi.SHFE_FTDC_FC_InvestorPasswordUpdate
SHFE_FTDC_FC_OrderInsert = _riskuserapi.SHFE_FTDC_FC_OrderInsert
SHFE_FTDC_FC_OrderAction = _riskuserapi.SHFE_FTDC_FC_OrderAction
SHFE_FTDC_FC_SyncSystemData = _riskuserapi.SHFE_FTDC_FC_SyncSystemData
SHFE_FTDC_FC_SyncBrokerData = _riskuserapi.SHFE_FTDC_FC_SyncBrokerData
SHFE_FTDC_FC_BachSyncBrokerData = _riskuserapi.SHFE_FTDC_FC_BachSyncBrokerData
SHFE_FTDC_FC_SuperQuery = _riskuserapi.SHFE_FTDC_FC_SuperQuery
SHFE_FTDC_FC_ParkedOrderInsert = _riskuserapi.SHFE_FTDC_FC_ParkedOrderInsert
SHFE_FTDC_FC_ParkedOrderAction = _riskuserapi.SHFE_FTDC_FC_ParkedOrderAction
SHFE_FTDC_FC_SyncOTP = _riskuserapi.SHFE_FTDC_FC_SyncOTP
SHFE_FTDC_FC_DeleteOrder = _riskuserapi.SHFE_FTDC_FC_DeleteOrder
SHFE_FTDC_FC_ExitEmergency = _riskuserapi.SHFE_FTDC_FC_ExitEmergency
SHFE_FTDC_BFC_ForceUserLogout = _riskuserapi.SHFE_FTDC_BFC_ForceUserLogout
SHFE_FTDC_BFC_UserPasswordUpdate = _riskuserapi.SHFE_FTDC_BFC_UserPasswordUpdate
SHFE_FTDC_BFC_SyncBrokerData = _riskuserapi.SHFE_FTDC_BFC_SyncBrokerData
SHFE_FTDC_BFC_BachSyncBrokerData = _riskuserapi.SHFE_FTDC_BFC_BachSyncBrokerData
SHFE_FTDC_BFC_OrderInsert = _riskuserapi.SHFE_FTDC_BFC_OrderInsert
SHFE_FTDC_BFC_OrderAction = _riskuserapi.SHFE_FTDC_BFC_OrderAction
SHFE_FTDC_BFC_AllQuery = _riskuserapi.SHFE_FTDC_BFC_AllQuery
SHFE_FTDC_BFC_log = _riskuserapi.SHFE_FTDC_BFC_log
SHFE_FTDC_BFC_BaseQry = _riskuserapi.SHFE_FTDC_BFC_BaseQry
SHFE_FTDC_BFC_TradeQry = _riskuserapi.SHFE_FTDC_BFC_TradeQry
SHFE_FTDC_BFC_Trade = _riskuserapi.SHFE_FTDC_BFC_Trade
SHFE_FTDC_BFC_Virement = _riskuserapi.SHFE_FTDC_BFC_Virement
SHFE_FTDC_BFC_Risk = _riskuserapi.SHFE_FTDC_BFC_Risk
SHFE_FTDC_BFC_Session = _riskuserapi.SHFE_FTDC_BFC_Session
SHFE_FTDC_BFC_RiskNoticeCtl = _riskuserapi.SHFE_FTDC_BFC_RiskNoticeCtl
SHFE_FTDC_BFC_RiskNotice = _riskuserapi.SHFE_FTDC_BFC_RiskNotice
SHFE_FTDC_BFC_BrokerDeposit = _riskuserapi.SHFE_FTDC_BFC_BrokerDeposit
SHFE_FTDC_BFC_QueryFund = _riskuserapi.SHFE_FTDC_BFC_QueryFund
SHFE_FTDC_BFC_QueryOrder = _riskuserapi.SHFE_FTDC_BFC_QueryOrder
SHFE_FTDC_BFC_QueryTrade = _riskuserapi.SHFE_FTDC_BFC_QueryTrade
SHFE_FTDC_BFC_QueryPosition = _riskuserapi.SHFE_FTDC_BFC_QueryPosition
SHFE_FTDC_BFC_QueryMarketData = _riskuserapi.SHFE_FTDC_BFC_QueryMarketData
SHFE_FTDC_BFC_QueryUserEvent = _riskuserapi.SHFE_FTDC_BFC_QueryUserEvent
SHFE_FTDC_BFC_QueryRiskNotify = _riskuserapi.SHFE_FTDC_BFC_QueryRiskNotify
SHFE_FTDC_BFC_QueryFundChange = _riskuserapi.SHFE_FTDC_BFC_QueryFundChange
SHFE_FTDC_BFC_QueryInvestor = _riskuserapi.SHFE_FTDC_BFC_QueryInvestor
SHFE_FTDC_BFC_QueryTradingCode = _riskuserapi.SHFE_FTDC_BFC_QueryTradingCode
SHFE_FTDC_BFC_ForceClose = _riskuserapi.SHFE_FTDC_BFC_ForceClose
SHFE_FTDC_BFC_PressTest = _riskuserapi.SHFE_FTDC_BFC_PressTest
SHFE_FTDC_BFC_RemainCalc = _riskuserapi.SHFE_FTDC_BFC_RemainCalc
SHFE_FTDC_BFC_NetPositionInd = _riskuserapi.SHFE_FTDC_BFC_NetPositionInd
SHFE_FTDC_BFC_RiskPredict = _riskuserapi.SHFE_FTDC_BFC_RiskPredict
SHFE_FTDC_BFC_DataExport = _riskuserapi.SHFE_FTDC_BFC_DataExport
SHFE_FTDC_BFC_RiskTargetSetup = _riskuserapi.SHFE_FTDC_BFC_RiskTargetSetup
SHFE_FTDC_BFC_MarketDataWarn = _riskuserapi.SHFE_FTDC_BFC_MarketDataWarn
SHFE_FTDC_BFC_QryBizNotice = _riskuserapi.SHFE_FTDC_BFC_QryBizNotice
SHFE_FTDC_BFC_CfgBizNotice = _riskuserapi.SHFE_FTDC_BFC_CfgBizNotice
SHFE_FTDC_BFC_SyncOTP = _riskuserapi.SHFE_FTDC_BFC_SyncOTP
SHFE_FTDC_BFC_SendBizNotice = _riskuserapi.SHFE_FTDC_BFC_SendBizNotice
SHFE_FTDC_BFC_CfgRiskLevelStd = _riskuserapi.SHFE_FTDC_BFC_CfgRiskLevelStd
SHFE_FTDC_BFC_TbCommand = _riskuserapi.SHFE_FTDC_BFC_TbCommand
SHFE_FTDC_BFC_DeleteOrder = _riskuserapi.SHFE_FTDC_BFC_DeleteOrder
SHFE_FTDC_BFC_ParkedOrderInsert = _riskuserapi.SHFE_FTDC_BFC_ParkedOrderInsert
SHFE_FTDC_BFC_ParkedOrderAction = _riskuserapi.SHFE_FTDC_BFC_ParkedOrderAction
SHFE_FTDC_BFC_ExecOrderNoCheck = _riskuserapi.SHFE_FTDC_BFC_ExecOrderNoCheck
SHFE_FTDC_BFC_Designate = _riskuserapi.SHFE_FTDC_BFC_Designate
SHFE_FTDC_BFC_StockDisposal = _riskuserapi.SHFE_FTDC_BFC_StockDisposal
SHFE_FTDC_BFC_BrokerDepositWarn = _riskuserapi.SHFE_FTDC_BFC_BrokerDepositWarn
SHFE_FTDC_BFC_CoverWarn = _riskuserapi.SHFE_FTDC_BFC_CoverWarn
SHFE_FTDC_BFC_PreExecOrder = _riskuserapi.SHFE_FTDC_BFC_PreExecOrder
SHFE_FTDC_BFC_ExecOrderRisk = _riskuserapi.SHFE_FTDC_BFC_ExecOrderRisk
SHFE_FTDC_BFC_PosiLimitWarn = _riskuserapi.SHFE_FTDC_BFC_PosiLimitWarn
SHFE_FTDC_BFC_QryPosiLimit = _riskuserapi.SHFE_FTDC_BFC_QryPosiLimit
SHFE_FTDC_BFC_FBSign = _riskuserapi.SHFE_FTDC_BFC_FBSign
SHFE_FTDC_BFC_FBAccount = _riskuserapi.SHFE_FTDC_BFC_FBAccount
SHFE_FTDC_BFC_OptPriceParamSetting = _riskuserapi.SHFE_FTDC_BFC_OptPriceParamSetting
SHFE_FTDC_OAS_Submitted = _riskuserapi.SHFE_FTDC_OAS_Submitted
SHFE_FTDC_OAS_Accepted = _riskuserapi.SHFE_FTDC_OAS_Accepted
SHFE_FTDC_OAS_Rejected = _riskuserapi.SHFE_FTDC_OAS_Rejected
SHFE_FTDC_OST_AllTraded = _riskuserapi.SHFE_FTDC_OST_AllTraded
SHFE_FTDC_OST_PartTradedQueueing = _riskuserapi.SHFE_FTDC_OST_PartTradedQueueing
SHFE_FTDC_OST_PartTradedNotQueueing = _riskuserapi.SHFE_FTDC_OST_PartTradedNotQueueing
SHFE_FTDC_OST_NoTradeQueueing = _riskuserapi.SHFE_FTDC_OST_NoTradeQueueing
SHFE_FTDC_OST_NoTradeNotQueueing = _riskuserapi.SHFE_FTDC_OST_NoTradeNotQueueing
SHFE_FTDC_OST_Canceled = _riskuserapi.SHFE_FTDC_OST_Canceled
SHFE_FTDC_OST_Unknown = _riskuserapi.SHFE_FTDC_OST_Unknown
SHFE_FTDC_OST_NotTouched = _riskuserapi.SHFE_FTDC_OST_NotTouched
SHFE_FTDC_OST_Touched = _riskuserapi.SHFE_FTDC_OST_Touched
SHFE_FTDC_OSS_InsertSubmitted = _riskuserapi.SHFE_FTDC_OSS_InsertSubmitted
SHFE_FTDC_OSS_CancelSubmitted = _riskuserapi.SHFE_FTDC_OSS_CancelSubmitted
SHFE_FTDC_OSS_ModifySubmitted = _riskuserapi.SHFE_FTDC_OSS_ModifySubmitted
SHFE_FTDC_OSS_Accepted = _riskuserapi.SHFE_FTDC_OSS_Accepted
SHFE_FTDC_OSS_InsertRejected = _riskuserapi.SHFE_FTDC_OSS_InsertRejected
SHFE_FTDC_OSS_CancelRejected = _riskuserapi.SHFE_FTDC_OSS_CancelRejected
SHFE_FTDC_OSS_ModifyRejected = _riskuserapi.SHFE_FTDC_OSS_ModifyRejected
SHFE_FTDC_PSD_Today = _riskuserapi.SHFE_FTDC_PSD_Today
SHFE_FTDC_PSD_History = _riskuserapi.SHFE_FTDC_PSD_History
SHFE_FTDC_PDT_UseHistory = _riskuserapi.SHFE_FTDC_PDT_UseHistory
SHFE_FTDC_PDT_NoUseHistory = _riskuserapi.SHFE_FTDC_PDT_NoUseHistory
SHFE_FTDC_ER_Broker = _riskuserapi.SHFE_FTDC_ER_Broker
SHFE_FTDC_ER_Host = _riskuserapi.SHFE_FTDC_ER_Host
SHFE_FTDC_ER_Maker = _riskuserapi.SHFE_FTDC_ER_Maker
SHFE_FTDC_PC_Futures = _riskuserapi.SHFE_FTDC_PC_Futures
SHFE_FTDC_PC_Options = _riskuserapi.SHFE_FTDC_PC_Options
SHFE_FTDC_PC_Combination = _riskuserapi.SHFE_FTDC_PC_Combination
SHFE_FTDC_PC_Spot = _riskuserapi.SHFE_FTDC_PC_Spot
SHFE_FTDC_PC_EFP = _riskuserapi.SHFE_FTDC_PC_EFP
SHFE_FTDC_PC_SpotOption = _riskuserapi.SHFE_FTDC_PC_SpotOption
SHFE_FTDC_PC_TAS = _riskuserapi.SHFE_FTDC_PC_TAS
SHFE_FTDC_PC_MI = _riskuserapi.SHFE_FTDC_PC_MI
SHFE_FTDC_PCG_Equity = _riskuserapi.SHFE_FTDC_PCG_Equity
SHFE_FTDC_PCG_Rate = _riskuserapi.SHFE_FTDC_PCG_Rate
SHFE_FTDC_APC_FutureSingle = _riskuserapi.SHFE_FTDC_APC_FutureSingle
SHFE_FTDC_APC_OptionSingle = _riskuserapi.SHFE_FTDC_APC_OptionSingle
SHFE_FTDC_APC_Futures = _riskuserapi.SHFE_FTDC_APC_Futures
SHFE_FTDC_APC_Options = _riskuserapi.SHFE_FTDC_APC_Options
SHFE_FTDC_APC_TradingComb = _riskuserapi.SHFE_FTDC_APC_TradingComb
SHFE_FTDC_APC_UnTradingComb = _riskuserapi.SHFE_FTDC_APC_UnTradingComb
SHFE_FTDC_APC_AllTrading = _riskuserapi.SHFE_FTDC_APC_AllTrading
SHFE_FTDC_APC_All = _riskuserapi.SHFE_FTDC_APC_All
SHFE_FTDC_IP_NotStart = _riskuserapi.SHFE_FTDC_IP_NotStart
SHFE_FTDC_IP_Started = _riskuserapi.SHFE_FTDC_IP_Started
SHFE_FTDC_IP_Pause = _riskuserapi.SHFE_FTDC_IP_Pause
SHFE_FTDC_IP_Expired = _riskuserapi.SHFE_FTDC_IP_Expired
SHFE_FTDC_D_Buy = _riskuserapi.SHFE_FTDC_D_Buy
SHFE_FTDC_D_Sell = _riskuserapi.SHFE_FTDC_D_Sell
SHFE_FTDC_PT_Net = _riskuserapi.SHFE_FTDC_PT_Net
SHFE_FTDC_PT_Gross = _riskuserapi.SHFE_FTDC_PT_Gross
SHFE_FTDC_PD_Net = _riskuserapi.SHFE_FTDC_PD_Net
SHFE_FTDC_PD_Long = _riskuserapi.SHFE_FTDC_PD_Long
SHFE_FTDC_PD_Short = _riskuserapi.SHFE_FTDC_PD_Short
SHFE_FTDC_SS_NonActive = _riskuserapi.SHFE_FTDC_SS_NonActive
SHFE_FTDC_SS_Startup = _riskuserapi.SHFE_FTDC_SS_Startup
SHFE_FTDC_SS_Operating = _riskuserapi.SHFE_FTDC_SS_Operating
SHFE_FTDC_SS_Settlement = _riskuserapi.SHFE_FTDC_SS_Settlement
SHFE_FTDC_SS_SettlementFinished = _riskuserapi.SHFE_FTDC_SS_SettlementFinished
SHFE_FTDC_RA_Trade = _riskuserapi.SHFE_FTDC_RA_Trade
SHFE_FTDC_RA_Settlement = _riskuserapi.SHFE_FTDC_RA_Settlement
SHFE_FTDC_HF_Speculation = _riskuserapi.SHFE_FTDC_HF_Speculation
SHFE_FTDC_HF_Arbitrage = _riskuserapi.SHFE_FTDC_HF_Arbitrage
SHFE_FTDC_HF_Hedge = _riskuserapi.SHFE_FTDC_HF_Hedge
SHFE_FTDC_HF_MarketMaker = _riskuserapi.SHFE_FTDC_HF_MarketMaker
SHFE_FTDC_HF_SpecHedge = _riskuserapi.SHFE_FTDC_HF_SpecHedge
SHFE_FTDC_HF_HedgeSpec = _riskuserapi.SHFE_FTDC_HF_HedgeSpec
SHFE_FTDC_BHF_Speculation = _riskuserapi.SHFE_FTDC_BHF_Speculation
SHFE_FTDC_BHF_Arbitrage = _riskuserapi.SHFE_FTDC_BHF_Arbitrage
SHFE_FTDC_BHF_Hedge = _riskuserapi.SHFE_FTDC_BHF_Hedge
SHFE_FTDC_CIDT_Speculation = _riskuserapi.SHFE_FTDC_CIDT_Speculation
SHFE_FTDC_CIDT_Arbitrage = _riskuserapi.SHFE_FTDC_CIDT_Arbitrage
SHFE_FTDC_CIDT_Hedge = _riskuserapi.SHFE_FTDC_CIDT_Hedge
SHFE_FTDC_CIDT_MarketMaker = _riskuserapi.SHFE_FTDC_CIDT_MarketMaker
SHFE_FTDC_OPT_AnyPrice = _riskuserapi.SHFE_FTDC_OPT_AnyPrice
SHFE_FTDC_OPT_LimitPrice = _riskuserapi.SHFE_FTDC_OPT_LimitPrice
SHFE_FTDC_OPT_BestPrice = _riskuserapi.SHFE_FTDC_OPT_BestPrice
SHFE_FTDC_OPT_LastPrice = _riskuserapi.SHFE_FTDC_OPT_LastPrice
SHFE_FTDC_OPT_LastPricePlusOneTicks = _riskuserapi.SHFE_FTDC_OPT_LastPricePlusOneTicks
SHFE_FTDC_OPT_LastPricePlusTwoTicks = _riskuserapi.SHFE_FTDC_OPT_LastPricePlusTwoTicks
SHFE_FTDC_OPT_LastPricePlusThreeTicks = _riskuserapi.SHFE_FTDC_OPT_LastPricePlusThreeTicks
SHFE_FTDC_OPT_AskPrice1 = _riskuserapi.SHFE_FTDC_OPT_AskPrice1
SHFE_FTDC_OPT_AskPrice1PlusOneTicks = _riskuserapi.SHFE_FTDC_OPT_AskPrice1PlusOneTicks
SHFE_FTDC_OPT_AskPrice1PlusTwoTicks = _riskuserapi.SHFE_FTDC_OPT_AskPrice1PlusTwoTicks
SHFE_FTDC_OPT_AskPrice1PlusThreeTicks = _riskuserapi.SHFE_FTDC_OPT_AskPrice1PlusThreeTicks
SHFE_FTDC_OPT_BidPrice1 = _riskuserapi.SHFE_FTDC_OPT_BidPrice1
SHFE_FTDC_OPT_BidPrice1PlusOneTicks = _riskuserapi.SHFE_FTDC_OPT_BidPrice1PlusOneTicks
SHFE_FTDC_OPT_BidPrice1PlusTwoTicks = _riskuserapi.SHFE_FTDC_OPT_BidPrice1PlusTwoTicks
SHFE_FTDC_OPT_BidPrice1PlusThreeTicks = _riskuserapi.SHFE_FTDC_OPT_BidPrice1PlusThreeTicks
SHFE_FTDC_OPT_FiveLevelPrice = _riskuserapi.SHFE_FTDC_OPT_FiveLevelPrice
SHFE_FTDC_OF_Open = _riskuserapi.SHFE_FTDC_OF_Open
SHFE_FTDC_OF_Close = _riskuserapi.SHFE_FTDC_OF_Close
SHFE_FTDC_OF_ForceClose = _riskuserapi.SHFE_FTDC_OF_ForceClose
SHFE_FTDC_OF_CloseToday = _riskuserapi.SHFE_FTDC_OF_CloseToday
SHFE_FTDC_OF_CloseYesterday = _riskuserapi.SHFE_FTDC_OF_CloseYesterday
SHFE_FTDC_OF_ForceOff = _riskuserapi.SHFE_FTDC_OF_ForceOff
SHFE_FTDC_OF_LocalForceClose = _riskuserapi.SHFE_FTDC_OF_LocalForceClose
SHFE_FTDC_FCC_NotForceClose = _riskuserapi.SHFE_FTDC_FCC_NotForceClose
SHFE_FTDC_FCC_LackDeposit = _riskuserapi.SHFE_FTDC_FCC_LackDeposit
SHFE_FTDC_FCC_ClientOverPositionLimit = _riskuserapi.SHFE_FTDC_FCC_ClientOverPositionLimit
SHFE_FTDC_FCC_MemberOverPositionLimit = _riskuserapi.SHFE_FTDC_FCC_MemberOverPositionLimit
SHFE_FTDC_FCC_NotMultiple = _riskuserapi.SHFE_FTDC_FCC_NotMultiple
SHFE_FTDC_FCC_Violation = _riskuserapi.SHFE_FTDC_FCC_Violation
SHFE_FTDC_FCC_Other = _riskuserapi.SHFE_FTDC_FCC_Other
SHFE_FTDC_FCC_PersonDeliv = _riskuserapi.SHFE_FTDC_FCC_PersonDeliv
SHFE_FTDC_FCC_Notverifycapital = _riskuserapi.SHFE_FTDC_FCC_Notverifycapital
SHFE_FTDC_FCC_LocalLackDeposit = _riskuserapi.SHFE_FTDC_FCC_LocalLackDeposit
SHFE_FTDC_FCC_LocalViolationNocheck = _riskuserapi.SHFE_FTDC_FCC_LocalViolationNocheck
SHFE_FTDC_FCC_LocalViolation = _riskuserapi.SHFE_FTDC_FCC_LocalViolation
SHFE_FTDC_ORDT_Normal = _riskuserapi.SHFE_FTDC_ORDT_Normal
SHFE_FTDC_ORDT_DeriveFromQuote = _riskuserapi.SHFE_FTDC_ORDT_DeriveFromQuote
SHFE_FTDC_ORDT_DeriveFromCombination = _riskuserapi.SHFE_FTDC_ORDT_DeriveFromCombination
SHFE_FTDC_ORDT_Combination = _riskuserapi.SHFE_FTDC_ORDT_Combination
SHFE_FTDC_ORDT_ConditionalOrder = _riskuserapi.SHFE_FTDC_ORDT_ConditionalOrder
SHFE_FTDC_ORDT_Swap = _riskuserapi.SHFE_FTDC_ORDT_Swap
SHFE_FTDC_ORDT_DeriveFromBlockTrade = _riskuserapi.SHFE_FTDC_ORDT_DeriveFromBlockTrade
SHFE_FTDC_ORDT_DeriveFromEFPTrade = _riskuserapi.SHFE_FTDC_ORDT_DeriveFromEFPTrade
SHFE_FTDC_TC_IOC = _riskuserapi.SHFE_FTDC_TC_IOC
SHFE_FTDC_TC_GFS = _riskuserapi.SHFE_FTDC_TC_GFS
SHFE_FTDC_TC_GFD = _riskuserapi.SHFE_FTDC_TC_GFD
SHFE_FTDC_TC_GTD = _riskuserapi.SHFE_FTDC_TC_GTD
SHFE_FTDC_TC_GTC = _riskuserapi.SHFE_FTDC_TC_GTC
SHFE_FTDC_TC_GFA = _riskuserapi.SHFE_FTDC_TC_GFA
SHFE_FTDC_VC_AV = _riskuserapi.SHFE_FTDC_VC_AV
SHFE_FTDC_VC_MV = _riskuserapi.SHFE_FTDC_VC_MV
SHFE_FTDC_VC_CV = _riskuserapi.SHFE_FTDC_VC_CV
SHFE_FTDC_CC_Immediately = _riskuserapi.SHFE_FTDC_CC_Immediately
SHFE_FTDC_CC_Touch = _riskuserapi.SHFE_FTDC_CC_Touch
SHFE_FTDC_CC_TouchProfit = _riskuserapi.SHFE_FTDC_CC_TouchProfit
SHFE_FTDC_CC_ParkedOrder = _riskuserapi.SHFE_FTDC_CC_ParkedOrder
SHFE_FTDC_CC_LastPriceGreaterThanStopPrice = _riskuserapi.SHFE_FTDC_CC_LastPriceGreaterThanStopPrice
SHFE_FTDC_CC_LastPriceGreaterEqualStopPrice = _riskuserapi.SHFE_FTDC_CC_LastPriceGreaterEqualStopPrice
SHFE_FTDC_CC_LastPriceLesserThanStopPrice = _riskuserapi.SHFE_FTDC_CC_LastPriceLesserThanStopPrice
SHFE_FTDC_CC_LastPriceLesserEqualStopPrice = _riskuserapi.SHFE_FTDC_CC_LastPriceLesserEqualStopPrice
SHFE_FTDC_CC_AskPriceGreaterThanStopPrice = _riskuserapi.SHFE_FTDC_CC_AskPriceGreaterThanStopPrice
SHFE_FTDC_CC_AskPriceGreaterEqualStopPrice = _riskuserapi.SHFE_FTDC_CC_AskPriceGreaterEqualStopPrice
SHFE_FTDC_CC_AskPriceLesserThanStopPrice = _riskuserapi.SHFE_FTDC_CC_AskPriceLesserThanStopPrice
SHFE_FTDC_CC_AskPriceLesserEqualStopPrice = _riskuserapi.SHFE_FTDC_CC_AskPriceLesserEqualStopPrice
SHFE_FTDC_CC_BidPriceGreaterThanStopPrice = _riskuserapi.SHFE_FTDC_CC_BidPriceGreaterThanStopPrice
SHFE_FTDC_CC_BidPriceGreaterEqualStopPrice = _riskuserapi.SHFE_FTDC_CC_BidPriceGreaterEqualStopPrice
SHFE_FTDC_CC_BidPriceLesserThanStopPrice = _riskuserapi.SHFE_FTDC_CC_BidPriceLesserThanStopPrice
SHFE_FTDC_CC_BidPriceLesserEqualStopPrice = _riskuserapi.SHFE_FTDC_CC_BidPriceLesserEqualStopPrice
SHFE_FTDC_AF_Delete = _riskuserapi.SHFE_FTDC_AF_Delete
SHFE_FTDC_AF_Modify = _riskuserapi.SHFE_FTDC_AF_Modify
SHFE_FTDC_TR_Allow = _riskuserapi.SHFE_FTDC_TR_Allow
SHFE_FTDC_TR_CloseOnly = _riskuserapi.SHFE_FTDC_TR_CloseOnly
SHFE_FTDC_TR_Forbidden = _riskuserapi.SHFE_FTDC_TR_Forbidden
SHFE_FTDC_OSRC_Participant = _riskuserapi.SHFE_FTDC_OSRC_Participant
SHFE_FTDC_OSRC_Administrator = _riskuserapi.SHFE_FTDC_OSRC_Administrator
SHFE_FTDC_TRDT_SplitCombination = _riskuserapi.SHFE_FTDC_TRDT_SplitCombination
SHFE_FTDC_TRDT_Common = _riskuserapi.SHFE_FTDC_TRDT_Common
SHFE_FTDC_TRDT_OptionsExecution = _riskuserapi.SHFE_FTDC_TRDT_OptionsExecution
SHFE_FTDC_TRDT_OTC = _riskuserapi.SHFE_FTDC_TRDT_OTC
SHFE_FTDC_TRDT_EFPDerived = _riskuserapi.SHFE_FTDC_TRDT_EFPDerived
SHFE_FTDC_TRDT_CombinationDerived = _riskuserapi.SHFE_FTDC_TRDT_CombinationDerived
SHFE_FTDC_TRDT_BlockTrade = _riskuserapi.SHFE_FTDC_TRDT_BlockTrade
SHFE_FTDC_SPOST_Common = _riskuserapi.SHFE_FTDC_SPOST_Common
SHFE_FTDC_SPOST_Tas = _riskuserapi.SHFE_FTDC_SPOST_Tas
SHFE_FTDC_PSRC_LastPrice = _riskuserapi.SHFE_FTDC_PSRC_LastPrice
SHFE_FTDC_PSRC_Buy = _riskuserapi.SHFE_FTDC_PSRC_Buy
SHFE_FTDC_PSRC_Sell = _riskuserapi.SHFE_FTDC_PSRC_Sell
SHFE_FTDC_PSRC_OTC = _riskuserapi.SHFE_FTDC_PSRC_OTC
SHFE_FTDC_IS_BeforeTrading = _riskuserapi.SHFE_FTDC_IS_BeforeTrading
SHFE_FTDC_IS_NoTrading = _riskuserapi.SHFE_FTDC_IS_NoTrading
SHFE_FTDC_IS_Continous = _riskuserapi.SHFE_FTDC_IS_Continous
SHFE_FTDC_IS_AuctionOrdering = _riskuserapi.SHFE_FTDC_IS_AuctionOrdering
SHFE_FTDC_IS_AuctionBalance = _riskuserapi.SHFE_FTDC_IS_AuctionBalance
SHFE_FTDC_IS_AuctionMatch = _riskuserapi.SHFE_FTDC_IS_AuctionMatch
SHFE_FTDC_IS_Closed = _riskuserapi.SHFE_FTDC_IS_Closed
SHFE_FTDC_IS_TransactionProcessing = _riskuserapi.SHFE_FTDC_IS_TransactionProcessing
SHFE_FTDC_IER_Automatic = _riskuserapi.SHFE_FTDC_IER_Automatic
SHFE_FTDC_IER_Manual = _riskuserapi.SHFE_FTDC_IER_Manual
SHFE_FTDC_IER_Fuse = _riskuserapi.SHFE_FTDC_IER_Fuse
SHFE_FTDC_BS_NoUpload = _riskuserapi.SHFE_FTDC_BS_NoUpload
SHFE_FTDC_BS_Uploaded = _riskuserapi.SHFE_FTDC_BS_Uploaded
SHFE_FTDC_BS_Failed = _riskuserapi.SHFE_FTDC_BS_Failed
SHFE_FTDC_RS_All = _riskuserapi.SHFE_FTDC_RS_All
SHFE_FTDC_RS_ByProduct = _riskuserapi.SHFE_FTDC_RS_ByProduct
SHFE_FTDC_RP_ByVolume = _riskuserapi.SHFE_FTDC_RP_ByVolume
SHFE_FTDC_RP_ByFeeOnHand = _riskuserapi.SHFE_FTDC_RP_ByFeeOnHand
SHFE_FTDC_RL_Level1 = _riskuserapi.SHFE_FTDC_RL_Level1
SHFE_FTDC_RL_Level2 = _riskuserapi.SHFE_FTDC_RL_Level2
SHFE_FTDC_RL_Level3 = _riskuserapi.SHFE_FTDC_RL_Level3
SHFE_FTDC_RL_Level4 = _riskuserapi.SHFE_FTDC_RL_Level4
SHFE_FTDC_RL_Level5 = _riskuserapi.SHFE_FTDC_RL_Level5
SHFE_FTDC_RL_Level6 = _riskuserapi.SHFE_FTDC_RL_Level6
SHFE_FTDC_RL_Level7 = _riskuserapi.SHFE_FTDC_RL_Level7
SHFE_FTDC_RL_Level8 = _riskuserapi.SHFE_FTDC_RL_Level8
SHFE_FTDC_RL_Level9 = _riskuserapi.SHFE_FTDC_RL_Level9
SHFE_FTDC_RSD_ByPeriod = _riskuserapi.SHFE_FTDC_RSD_ByPeriod
SHFE_FTDC_RSD_ByStandard = _riskuserapi.SHFE_FTDC_RSD_ByStandard
SHFE_FTDC_MT_Out = _riskuserapi.SHFE_FTDC_MT_Out
SHFE_FTDC_MT_In = _riskuserapi.SHFE_FTDC_MT_In
SHFE_FTDC_ISPI_MortgageRatio = _riskuserapi.SHFE_FTDC_ISPI_MortgageRatio
SHFE_FTDC_ISPI_MarginWay = _riskuserapi.SHFE_FTDC_ISPI_MarginWay
SHFE_FTDC_ISPI_BillDeposit = _riskuserapi.SHFE_FTDC_ISPI_BillDeposit
SHFE_FTDC_ESPI_MortgageRatio = _riskuserapi.SHFE_FTDC_ESPI_MortgageRatio
SHFE_FTDC_ESPI_OtherFundItem = _riskuserapi.SHFE_FTDC_ESPI_OtherFundItem
SHFE_FTDC_ESPI_OtherFundImport = _riskuserapi.SHFE_FTDC_ESPI_OtherFundImport
SHFE_FTDC_ESPI_CFFEXMinPrepa = _riskuserapi.SHFE_FTDC_ESPI_CFFEXMinPrepa
SHFE_FTDC_ESPI_CZCESettlementType = _riskuserapi.SHFE_FTDC_ESPI_CZCESettlementType
SHFE_FTDC_ESPI_ExchDelivFeeMode = _riskuserapi.SHFE_FTDC_ESPI_ExchDelivFeeMode
SHFE_FTDC_ESPI_DelivFeeMode = _riskuserapi.SHFE_FTDC_ESPI_DelivFeeMode
SHFE_FTDC_ESPI_CZCEComMarginType = _riskuserapi.SHFE_FTDC_ESPI_CZCEComMarginType
SHFE_FTDC_ESPI_DceComMarginType = _riskuserapi.SHFE_FTDC_ESPI_DceComMarginType
SHFE_FTDC_ESPI_OptOutDisCountRate = _riskuserapi.SHFE_FTDC_ESPI_OptOutDisCountRate
SHFE_FTDC_ESPI_OptMiniGuarantee = _riskuserapi.SHFE_FTDC_ESPI_OptMiniGuarantee
SHFE_FTDC_SPI_InvestorIDMinLength = _riskuserapi.SHFE_FTDC_SPI_InvestorIDMinLength
SHFE_FTDC_SPI_AccountIDMinLength = _riskuserapi.SHFE_FTDC_SPI_AccountIDMinLength
SHFE_FTDC_SPI_UserRightLogon = _riskuserapi.SHFE_FTDC_SPI_UserRightLogon
SHFE_FTDC_SPI_SettlementBillTrade = _riskuserapi.SHFE_FTDC_SPI_SettlementBillTrade
SHFE_FTDC_SPI_TradingCode = _riskuserapi.SHFE_FTDC_SPI_TradingCode
SHFE_FTDC_SPI_CheckFund = _riskuserapi.SHFE_FTDC_SPI_CheckFund
SHFE_FTDC_SPI_CommModelRight = _riskuserapi.SHFE_FTDC_SPI_CommModelRight
SHFE_FTDC_SPI_MarginModelRight = _riskuserapi.SHFE_FTDC_SPI_MarginModelRight
SHFE_FTDC_SPI_IsStandardActive = _riskuserapi.SHFE_FTDC_SPI_IsStandardActive
SHFE_FTDC_SPI_UploadSettlementFile = _riskuserapi.SHFE_FTDC_SPI_UploadSettlementFile
SHFE_FTDC_SPI_DownloadCSRCFile = _riskuserapi.SHFE_FTDC_SPI_DownloadCSRCFile
SHFE_FTDC_SPI_SettlementBillFile = _riskuserapi.SHFE_FTDC_SPI_SettlementBillFile
SHFE_FTDC_SPI_CSRCOthersFile = _riskuserapi.SHFE_FTDC_SPI_CSRCOthersFile
SHFE_FTDC_SPI_InvestorPhoto = _riskuserapi.SHFE_FTDC_SPI_InvestorPhoto
SHFE_FTDC_SPI_CSRCData = _riskuserapi.SHFE_FTDC_SPI_CSRCData
SHFE_FTDC_SPI_InvestorPwdModel = _riskuserapi.SHFE_FTDC_SPI_InvestorPwdModel
SHFE_FTDC_SPI_CFFEXInvestorSettleFile = _riskuserapi.SHFE_FTDC_SPI_CFFEXInvestorSettleFile
SHFE_FTDC_SPI_InvestorIDType = _riskuserapi.SHFE_FTDC_SPI_InvestorIDType
SHFE_FTDC_SPI_FreezeMaxReMain = _riskuserapi.SHFE_FTDC_SPI_FreezeMaxReMain
SHFE_FTDC_SPI_IsSync = _riskuserapi.SHFE_FTDC_SPI_IsSync
SHFE_FTDC_SPI_RelieveOpenLimit = _riskuserapi.SHFE_FTDC_SPI_RelieveOpenLimit
SHFE_FTDC_SPI_IsStandardFreeze = _riskuserapi.SHFE_FTDC_SPI_IsStandardFreeze
SHFE_FTDC_SPI_CZCENormalProductHedge = _riskuserapi.SHFE_FTDC_SPI_CZCENormalProductHedge
SHFE_FTDC_TPID_EncryptionStandard = _riskuserapi.SHFE_FTDC_TPID_EncryptionStandard
SHFE_FTDC_TPID_RiskMode = _riskuserapi.SHFE_FTDC_TPID_RiskMode
SHFE_FTDC_TPID_RiskModeGlobal = _riskuserapi.SHFE_FTDC_TPID_RiskModeGlobal
SHFE_FTDC_TPID_modeEncode = _riskuserapi.SHFE_FTDC_TPID_modeEncode
SHFE_FTDC_TPID_tickMode = _riskuserapi.SHFE_FTDC_TPID_tickMode
SHFE_FTDC_TPID_SingleUserSessionMaxNum = _riskuserapi.SHFE_FTDC_TPID_SingleUserSessionMaxNum
SHFE_FTDC_TPID_LoginFailMaxNum = _riskuserapi.SHFE_FTDC_TPID_LoginFailMaxNum
SHFE_FTDC_TPID_IsAuthForce = _riskuserapi.SHFE_FTDC_TPID_IsAuthForce
SHFE_FTDC_TPID_IsPosiFreeze = _riskuserapi.SHFE_FTDC_TPID_IsPosiFreeze
SHFE_FTDC_TPID_IsPosiLimit = _riskuserapi.SHFE_FTDC_TPID_IsPosiLimit
SHFE_FTDC_TPID_ForQuoteTimeInterval = _riskuserapi.SHFE_FTDC_TPID_ForQuoteTimeInterval
SHFE_FTDC_TPID_IsFuturePosiLimit = _riskuserapi.SHFE_FTDC_TPID_IsFuturePosiLimit
SHFE_FTDC_TPID_IsFutureOrderFreq = _riskuserapi.SHFE_FTDC_TPID_IsFutureOrderFreq
SHFE_FTDC_TPID_IsExecOrderProfit = _riskuserapi.SHFE_FTDC_TPID_IsExecOrderProfit
SHFE_FTDC_TPID_IsCheckBankAcc = _riskuserapi.SHFE_FTDC_TPID_IsCheckBankAcc
SHFE_FTDC_TPID_PasswordDeadLine = _riskuserapi.SHFE_FTDC_TPID_PasswordDeadLine
SHFE_FTDC_TPID_IsStrongPassword = _riskuserapi.SHFE_FTDC_TPID_IsStrongPassword
SHFE_FTDC_TPID_BalanceMorgage = _riskuserapi.SHFE_FTDC_TPID_BalanceMorgage
SHFE_FTDC_TPID_MinPwdLen = _riskuserapi.SHFE_FTDC_TPID_MinPwdLen
SHFE_FTDC_TPID_LoginFailMaxNumForIP = _riskuserapi.SHFE_FTDC_TPID_LoginFailMaxNumForIP
SHFE_FTDC_TPID_PasswordPeriod = _riskuserapi.SHFE_FTDC_TPID_PasswordPeriod
SHFE_FTDC_TPID_PwdHistoryCmp = _riskuserapi.SHFE_FTDC_TPID_PwdHistoryCmp
SHFE_FTDC_TPID_TranferChkProperty = _riskuserapi.SHFE_FTDC_TPID_TranferChkProperty
SHFE_FTDC_TPID_TradeChkPhase = _riskuserapi.SHFE_FTDC_TPID_TradeChkPhase
SHFE_FTDC_TPID_TradeChkPriceVol = _riskuserapi.SHFE_FTDC_TPID_TradeChkPriceVol
SHFE_FTDC_FI_SettlementFund = _riskuserapi.SHFE_FTDC_FI_SettlementFund
SHFE_FTDC_FI_Trade = _riskuserapi.SHFE_FTDC_FI_Trade
SHFE_FTDC_FI_InvestorPosition = _riskuserapi.SHFE_FTDC_FI_InvestorPosition
SHFE_FTDC_FI_SubEntryFund = _riskuserapi.SHFE_FTDC_FI_SubEntryFund
SHFE_FTDC_FI_CZCECombinationPos = _riskuserapi.SHFE_FTDC_FI_CZCECombinationPos
SHFE_FTDC_FI_CSRCData = _riskuserapi.SHFE_FTDC_FI_CSRCData
SHFE_FTDC_FI_CZCEClose = _riskuserapi.SHFE_FTDC_FI_CZCEClose
SHFE_FTDC_FI_CZCENoClose = _riskuserapi.SHFE_FTDC_FI_CZCENoClose
SHFE_FTDC_FI_PositionDtl = _riskuserapi.SHFE_FTDC_FI_PositionDtl
SHFE_FTDC_FI_OptionStrike = _riskuserapi.SHFE_FTDC_FI_OptionStrike
SHFE_FTDC_FI_SettlementPriceComparison = _riskuserapi.SHFE_FTDC_FI_SettlementPriceComparison
SHFE_FTDC_FI_NonTradePosChange = _riskuserapi.SHFE_FTDC_FI_NonTradePosChange
SHFE_FTDC_FUT_Settlement = _riskuserapi.SHFE_FTDC_FUT_Settlement
SHFE_FTDC_FUT_Check = _riskuserapi.SHFE_FTDC_FUT_Check
SHFE_FTDC_FFT_Txt = _riskuserapi.SHFE_FTDC_FFT_Txt
SHFE_FTDC_FFT_Zip = _riskuserapi.SHFE_FTDC_FFT_Zip
SHFE_FTDC_FFT_DBF = _riskuserapi.SHFE_FTDC_FFT_DBF
SHFE_FTDC_FUS_SucceedUpload = _riskuserapi.SHFE_FTDC_FUS_SucceedUpload
SHFE_FTDC_FUS_FailedUpload = _riskuserapi.SHFE_FTDC_FUS_FailedUpload
SHFE_FTDC_FUS_SucceedLoad = _riskuserapi.SHFE_FTDC_FUS_SucceedLoad
SHFE_FTDC_FUS_PartSucceedLoad = _riskuserapi.SHFE_FTDC_FUS_PartSucceedLoad
SHFE_FTDC_FUS_FailedLoad = _riskuserapi.SHFE_FTDC_FUS_FailedLoad
SHFE_FTDC_TD_Out = _riskuserapi.SHFE_FTDC_TD_Out
SHFE_FTDC_TD_In = _riskuserapi.SHFE_FTDC_TD_In
SHFE_FTDC_SC_NoSpecialRule = _riskuserapi.SHFE_FTDC_SC_NoSpecialRule
SHFE_FTDC_SC_NoSpringFestival = _riskuserapi.SHFE_FTDC_SC_NoSpringFestival
SHFE_FTDC_IPT_LastSettlement = _riskuserapi.SHFE_FTDC_IPT_LastSettlement
SHFE_FTDC_IPT_LaseClose = _riskuserapi.SHFE_FTDC_IPT_LaseClose
SHFE_FTDC_PLP_Active = _riskuserapi.SHFE_FTDC_PLP_Active
SHFE_FTDC_PLP_NonActive = _riskuserapi.SHFE_FTDC_PLP_NonActive
SHFE_FTDC_PLP_Canceled = _riskuserapi.SHFE_FTDC_PLP_Canceled
SHFE_FTDC_DM_CashDeliv = _riskuserapi.SHFE_FTDC_DM_CashDeliv
SHFE_FTDC_DM_CommodityDeliv = _riskuserapi.SHFE_FTDC_DM_CommodityDeliv
SHFE_FTDC_FIOT_FundIO = _riskuserapi.SHFE_FTDC_FIOT_FundIO
SHFE_FTDC_FIOT_Transfer = _riskuserapi.SHFE_FTDC_FIOT_Transfer
SHFE_FTDC_FIOT_SwapCurrency = _riskuserapi.SHFE_FTDC_FIOT_SwapCurrency
SHFE_FTDC_FT_Deposite = _riskuserapi.SHFE_FTDC_FT_Deposite
SHFE_FTDC_FT_ItemFund = _riskuserapi.SHFE_FTDC_FT_ItemFund
SHFE_FTDC_FT_Company = _riskuserapi.SHFE_FTDC_FT_Company
SHFE_FTDC_FT_InnerTransfer = _riskuserapi.SHFE_FTDC_FT_InnerTransfer
SHFE_FTDC_FD_In = _riskuserapi.SHFE_FTDC_FD_In
SHFE_FTDC_FD_Out = _riskuserapi.SHFE_FTDC_FD_Out
SHFE_FTDC_FS_Record = _riskuserapi.SHFE_FTDC_FS_Record
SHFE_FTDC_FS_Check = _riskuserapi.SHFE_FTDC_FS_Check
SHFE_FTDC_FS_Charge = _riskuserapi.SHFE_FTDC_FS_Charge
SHFE_FTDC_PS_None = _riskuserapi.SHFE_FTDC_PS_None
SHFE_FTDC_PS_Publishing = _riskuserapi.SHFE_FTDC_PS_Publishing
SHFE_FTDC_PS_Published = _riskuserapi.SHFE_FTDC_PS_Published
SHFE_FTDC_ES_NonActive = _riskuserapi.SHFE_FTDC_ES_NonActive
SHFE_FTDC_ES_Startup = _riskuserapi.SHFE_FTDC_ES_Startup
SHFE_FTDC_ES_Initialize = _riskuserapi.SHFE_FTDC_ES_Initialize
SHFE_FTDC_ES_Initialized = _riskuserapi.SHFE_FTDC_ES_Initialized
SHFE_FTDC_ES_Close = _riskuserapi.SHFE_FTDC_ES_Close
SHFE_FTDC_ES_Closed = _riskuserapi.SHFE_FTDC_ES_Closed
SHFE_FTDC_ES_Settlement = _riskuserapi.SHFE_FTDC_ES_Settlement
SHFE_FTDC_STS_Initialize = _riskuserapi.SHFE_FTDC_STS_Initialize
SHFE_FTDC_STS_Settlementing = _riskuserapi.SHFE_FTDC_STS_Settlementing
SHFE_FTDC_STS_Settlemented = _riskuserapi.SHFE_FTDC_STS_Settlemented
SHFE_FTDC_STS_Finished = _riskuserapi.SHFE_FTDC_STS_Finished
SHFE_FTDC_CT_Person = _riskuserapi.SHFE_FTDC_CT_Person
SHFE_FTDC_CT_Company = _riskuserapi.SHFE_FTDC_CT_Company
SHFE_FTDC_CT_Fund = _riskuserapi.SHFE_FTDC_CT_Fund
SHFE_FTDC_CT_SpecialOrgan = _riskuserapi.SHFE_FTDC_CT_SpecialOrgan
SHFE_FTDC_CT_Asset = _riskuserapi.SHFE_FTDC_CT_Asset
SHFE_FTDC_BT_Trade = _riskuserapi.SHFE_FTDC_BT_Trade
SHFE_FTDC_BT_TradeSettle = _riskuserapi.SHFE_FTDC_BT_TradeSettle
SHFE_FTDC_FAS_Low = _riskuserapi.SHFE_FTDC_FAS_Low
SHFE_FTDC_FAS_Normal = _riskuserapi.SHFE_FTDC_FAS_Normal
SHFE_FTDC_FAS_Focus = _riskuserapi.SHFE_FTDC_FAS_Focus
SHFE_FTDC_FAS_Risk = _riskuserapi.SHFE_FTDC_FAS_Risk
SHFE_FTDC_FAS_ByTrade = _riskuserapi.SHFE_FTDC_FAS_ByTrade
SHFE_FTDC_FAS_ByDeliv = _riskuserapi.SHFE_FTDC_FAS_ByDeliv
SHFE_FTDC_FAS_None = _riskuserapi.SHFE_FTDC_FAS_None
SHFE_FTDC_FAS_FixFee = _riskuserapi.SHFE_FTDC_FAS_FixFee
SHFE_FTDC_PWDT_Trade = _riskuserapi.SHFE_FTDC_PWDT_Trade
SHFE_FTDC_PWDT_Account = _riskuserapi.SHFE_FTDC_PWDT_Account
SHFE_FTDC_AG_All = _riskuserapi.SHFE_FTDC_AG_All
SHFE_FTDC_AG_OnlyLost = _riskuserapi.SHFE_FTDC_AG_OnlyLost
SHFE_FTDC_AG_OnlyGain = _riskuserapi.SHFE_FTDC_AG_OnlyGain
SHFE_FTDC_AG_None = _riskuserapi.SHFE_FTDC_AG_None
SHFE_FTDC_ICP_Include = _riskuserapi.SHFE_FTDC_ICP_Include
SHFE_FTDC_ICP_NotInclude = _riskuserapi.SHFE_FTDC_ICP_NotInclude
SHFE_FTDC_AWT_Enable = _riskuserapi.SHFE_FTDC_AWT_Enable
SHFE_FTDC_AWT_Disable = _riskuserapi.SHFE_FTDC_AWT_Disable
SHFE_FTDC_AWT_NoHoldEnable = _riskuserapi.SHFE_FTDC_AWT_NoHoldEnable
SHFE_FTDC_FPWD_UnCheck = _riskuserapi.SHFE_FTDC_FPWD_UnCheck
SHFE_FTDC_FPWD_Check = _riskuserapi.SHFE_FTDC_FPWD_Check
SHFE_FTDC_TT_BankToFuture = _riskuserapi.SHFE_FTDC_TT_BankToFuture
SHFE_FTDC_TT_FutureToBank = _riskuserapi.SHFE_FTDC_TT_FutureToBank
SHFE_FTDC_TVF_Invalid = _riskuserapi.SHFE_FTDC_TVF_Invalid
SHFE_FTDC_TVF_Valid = _riskuserapi.SHFE_FTDC_TVF_Valid
SHFE_FTDC_TVF_Reverse = _riskuserapi.SHFE_FTDC_TVF_Reverse
SHFE_FTDC_RN_CD = _riskuserapi.SHFE_FTDC_RN_CD
SHFE_FTDC_RN_ZT = _riskuserapi.SHFE_FTDC_RN_ZT
SHFE_FTDC_RN_QT = _riskuserapi.SHFE_FTDC_RN_QT
SHFE_FTDC_SEX_None = _riskuserapi.SHFE_FTDC_SEX_None
SHFE_FTDC_SEX_Man = _riskuserapi.SHFE_FTDC_SEX_Man
SHFE_FTDC_SEX_Woman = _riskuserapi.SHFE_FTDC_SEX_Woman
SHFE_FTDC_UT_Investor = _riskuserapi.SHFE_FTDC_UT_Investor
SHFE_FTDC_UT_Operator = _riskuserapi.SHFE_FTDC_UT_Operator
SHFE_FTDC_UT_SuperUser = _riskuserapi.SHFE_FTDC_UT_SuperUser
SHFE_FTDC_RATETYPE_MarginRate = _riskuserapi.SHFE_FTDC_RATETYPE_MarginRate
SHFE_FTDC_NOTETYPE_TradeSettleBill = _riskuserapi.SHFE_FTDC_NOTETYPE_TradeSettleBill
SHFE_FTDC_NOTETYPE_TradeSettleMonth = _riskuserapi.SHFE_FTDC_NOTETYPE_TradeSettleMonth
SHFE_FTDC_NOTETYPE_CallMarginNotes = _riskuserapi.SHFE_FTDC_NOTETYPE_CallMarginNotes
SHFE_FTDC_NOTETYPE_ForceCloseNotes = _riskuserapi.SHFE_FTDC_NOTETYPE_ForceCloseNotes
SHFE_FTDC_NOTETYPE_TradeNotes = _riskuserapi.SHFE_FTDC_NOTETYPE_TradeNotes
SHFE_FTDC_NOTETYPE_DelivNotes = _riskuserapi.SHFE_FTDC_NOTETYPE_DelivNotes
SHFE_FTDC_SBS_Day = _riskuserapi.SHFE_FTDC_SBS_Day
SHFE_FTDC_SBS_Volume = _riskuserapi.SHFE_FTDC_SBS_Volume
SHFE_FTDC_ST_Day = _riskuserapi.SHFE_FTDC_ST_Day
SHFE_FTDC_ST_Month = _riskuserapi.SHFE_FTDC_ST_Month
SHFE_FTDC_URT_Logon = _riskuserapi.SHFE_FTDC_URT_Logon
SHFE_FTDC_URT_Transfer = _riskuserapi.SHFE_FTDC_URT_Transfer
SHFE_FTDC_URT_EMail = _riskuserapi.SHFE_FTDC_URT_EMail
SHFE_FTDC_URT_Fax = _riskuserapi.SHFE_FTDC_URT_Fax
SHFE_FTDC_URT_ConditionOrder = _riskuserapi.SHFE_FTDC_URT_ConditionOrder
SHFE_FTDC_MPT_PreSettlementPrice = _riskuserapi.SHFE_FTDC_MPT_PreSettlementPrice
SHFE_FTDC_MPT_SettlementPrice = _riskuserapi.SHFE_FTDC_MPT_SettlementPrice
SHFE_FTDC_MPT_AveragePrice = _riskuserapi.SHFE_FTDC_MPT_AveragePrice
SHFE_FTDC_MPT_OpenPrice = _riskuserapi.SHFE_FTDC_MPT_OpenPrice
SHFE_FTDC_BGS_None = _riskuserapi.SHFE_FTDC_BGS_None
SHFE_FTDC_BGS_NoGenerated = _riskuserapi.SHFE_FTDC_BGS_NoGenerated
SHFE_FTDC_BGS_Generated = _riskuserapi.SHFE_FTDC_BGS_Generated
SHFE_FTDC_AT_HandlePositionAlgo = _riskuserapi.SHFE_FTDC_AT_HandlePositionAlgo
SHFE_FTDC_AT_FindMarginRateAlgo = _riskuserapi.SHFE_FTDC_AT_FindMarginRateAlgo
SHFE_FTDC_HPA_Base = _riskuserapi.SHFE_FTDC_HPA_Base
SHFE_FTDC_HPA_DCE = _riskuserapi.SHFE_FTDC_HPA_DCE
SHFE_FTDC_HPA_CZCE = _riskuserapi.SHFE_FTDC_HPA_CZCE
SHFE_FTDC_FMRA_Base = _riskuserapi.SHFE_FTDC_FMRA_Base
SHFE_FTDC_FMRA_DCE = _riskuserapi.SHFE_FTDC_FMRA_DCE
SHFE_FTDC_FMRA_CZCE = _riskuserapi.SHFE_FTDC_FMRA_CZCE
SHFE_FTDC_HTAA_Base = _riskuserapi.SHFE_FTDC_HTAA_Base
SHFE_FTDC_HTAA_DCE = _riskuserapi.SHFE_FTDC_HTAA_DCE
SHFE_FTDC_HTAA_CZCE = _riskuserapi.SHFE_FTDC_HTAA_CZCE
SHFE_FTDC_PST_Order = _riskuserapi.SHFE_FTDC_PST_Order
SHFE_FTDC_PST_Open = _riskuserapi.SHFE_FTDC_PST_Open
SHFE_FTDC_PST_Fund = _riskuserapi.SHFE_FTDC_PST_Fund
SHFE_FTDC_PST_Settlement = _riskuserapi.SHFE_FTDC_PST_Settlement
SHFE_FTDC_PST_Company = _riskuserapi.SHFE_FTDC_PST_Company
SHFE_FTDC_PST_Corporation = _riskuserapi.SHFE_FTDC_PST_Corporation
SHFE_FTDC_PST_LinkMan = _riskuserapi.SHFE_FTDC_PST_LinkMan
SHFE_FTDC_PST_Ledger = _riskuserapi.SHFE_FTDC_PST_Ledger
SHFE_FTDC_PST_Trustee = _riskuserapi.SHFE_FTDC_PST_Trustee
SHFE_FTDC_PST_TrusteeCorporation = _riskuserapi.SHFE_FTDC_PST_TrusteeCorporation
SHFE_FTDC_PST_TrusteeOpen = _riskuserapi.SHFE_FTDC_PST_TrusteeOpen
SHFE_FTDC_PST_TrusteeContact = _riskuserapi.SHFE_FTDC_PST_TrusteeContact
SHFE_FTDC_PST_ForeignerRefer = _riskuserapi.SHFE_FTDC_PST_ForeignerRefer
SHFE_FTDC_PST_CorporationRefer = _riskuserapi.SHFE_FTDC_PST_CorporationRefer
SHFE_FTDC_QIR_All = _riskuserapi.SHFE_FTDC_QIR_All
SHFE_FTDC_QIR_Group = _riskuserapi.SHFE_FTDC_QIR_Group
SHFE_FTDC_QIR_Single = _riskuserapi.SHFE_FTDC_QIR_Single
SHFE_FTDC_QIPNDMIR_All = _riskuserapi.SHFE_FTDC_QIPNDMIR_All
SHFE_FTDC_QIPNDMIR_User = _riskuserapi.SHFE_FTDC_QIPNDMIR_User
SHFE_FTDC_QIPNDMIR_Single = _riskuserapi.SHFE_FTDC_QIPNDMIR_Single
SHFE_FTDC_IRS_Normal = _riskuserapi.SHFE_FTDC_IRS_Normal
SHFE_FTDC_IRS_Warn = _riskuserapi.SHFE_FTDC_IRS_Warn
SHFE_FTDC_IRS_Call = _riskuserapi.SHFE_FTDC_IRS_Call
SHFE_FTDC_IRS_Force = _riskuserapi.SHFE_FTDC_IRS_Force
SHFE_FTDC_IRS_Exception = _riskuserapi.SHFE_FTDC_IRS_Exception
SHFE_FTDC_UET_Login = _riskuserapi.SHFE_FTDC_UET_Login
SHFE_FTDC_UET_Logout = _riskuserapi.SHFE_FTDC_UET_Logout
SHFE_FTDC_UET_Trading = _riskuserapi.SHFE_FTDC_UET_Trading
SHFE_FTDC_UET_TradingError = _riskuserapi.SHFE_FTDC_UET_TradingError
SHFE_FTDC_UET_UpdatePassword = _riskuserapi.SHFE_FTDC_UET_UpdatePassword
SHFE_FTDC_UET_Authenticate = _riskuserapi.SHFE_FTDC_UET_Authenticate
SHFE_FTDC_UET_SubmitSysInfo = _riskuserapi.SHFE_FTDC_UET_SubmitSysInfo
SHFE_FTDC_UET_Transfer = _riskuserapi.SHFE_FTDC_UET_Transfer
SHFE_FTDC_UET_Other = _riskuserapi.SHFE_FTDC_UET_Other
SHFE_FTDC_UET_UpdateTradingAccountPassword = _riskuserapi.SHFE_FTDC_UET_UpdateTradingAccountPassword
SHFE_FTDC_ICS_Close = _riskuserapi.SHFE_FTDC_ICS_Close
SHFE_FTDC_ICS_CloseToday = _riskuserapi.SHFE_FTDC_ICS_CloseToday
SHFE_FTDC_SM_Non = _riskuserapi.SHFE_FTDC_SM_Non
SHFE_FTDC_SM_Instrument = _riskuserapi.SHFE_FTDC_SM_Instrument
SHFE_FTDC_SM_Product = _riskuserapi.SHFE_FTDC_SM_Product
SHFE_FTDC_SM_Investor = _riskuserapi.SHFE_FTDC_SM_Investor
SHFE_FTDC_PAOS_NotSend = _riskuserapi.SHFE_FTDC_PAOS_NotSend
SHFE_FTDC_PAOS_Send = _riskuserapi.SHFE_FTDC_PAOS_Send
SHFE_FTDC_PAOS_Deleted = _riskuserapi.SHFE_FTDC_PAOS_Deleted
SHFE_FTDC_VDS_Dealing = _riskuserapi.SHFE_FTDC_VDS_Dealing
SHFE_FTDC_VDS_DeaclSucceed = _riskuserapi.SHFE_FTDC_VDS_DeaclSucceed
SHFE_FTDC_ORGS_Standard = _riskuserapi.SHFE_FTDC_ORGS_Standard
SHFE_FTDC_ORGS_ESunny = _riskuserapi.SHFE_FTDC_ORGS_ESunny
SHFE_FTDC_ORGS_KingStarV6 = _riskuserapi.SHFE_FTDC_ORGS_KingStarV6
SHFE_FTDC_VTS_NaturalDeal = _riskuserapi.SHFE_FTDC_VTS_NaturalDeal
SHFE_FTDC_VTS_SucceedEnd = _riskuserapi.SHFE_FTDC_VTS_SucceedEnd
SHFE_FTDC_VTS_FailedEND = _riskuserapi.SHFE_FTDC_VTS_FailedEND
SHFE_FTDC_VTS_Exception = _riskuserapi.SHFE_FTDC_VTS_Exception
SHFE_FTDC_VTS_ManualDeal = _riskuserapi.SHFE_FTDC_VTS_ManualDeal
SHFE_FTDC_VTS_MesException = _riskuserapi.SHFE_FTDC_VTS_MesException
SHFE_FTDC_VTS_SysException = _riskuserapi.SHFE_FTDC_VTS_SysException
SHFE_FTDC_VBAT_BankBook = _riskuserapi.SHFE_FTDC_VBAT_BankBook
SHFE_FTDC_VBAT_BankCard = _riskuserapi.SHFE_FTDC_VBAT_BankCard
SHFE_FTDC_VBAT_CreditCard = _riskuserapi.SHFE_FTDC_VBAT_CreditCard
SHFE_FTDC_VMS_Natural = _riskuserapi.SHFE_FTDC_VMS_Natural
SHFE_FTDC_VMS_Canceled = _riskuserapi.SHFE_FTDC_VMS_Canceled
SHFE_FTDC_VAA_NoAvailAbility = _riskuserapi.SHFE_FTDC_VAA_NoAvailAbility
SHFE_FTDC_VAA_AvailAbility = _riskuserapi.SHFE_FTDC_VAA_AvailAbility
SHFE_FTDC_VAA_Repeal = _riskuserapi.SHFE_FTDC_VAA_Repeal
SHFE_FTDC_CGT_NonCommodityGrp = _riskuserapi.SHFE_FTDC_CGT_NonCommodityGrp
SHFE_FTDC_CGT_FullCommodityGrp = _riskuserapi.SHFE_FTDC_CGT_FullCommodityGrp
SHFE_FTDC_CGT_PartCommodityGrp = _riskuserapi.SHFE_FTDC_CGT_PartCommodityGrp
SHFE_FTDC_GEN_Program = _riskuserapi.SHFE_FTDC_GEN_Program
SHFE_FTDC_GEN_HandWork = _riskuserapi.SHFE_FTDC_GEN_HandWork
SHFE_FTDC_CFMMCKK_REQUEST = _riskuserapi.SHFE_FTDC_CFMMCKK_REQUEST
SHFE_FTDC_CFMMCKK_AUTO = _riskuserapi.SHFE_FTDC_CFMMCKK_AUTO
SHFE_FTDC_CFMMCKK_MANUAL = _riskuserapi.SHFE_FTDC_CFMMCKK_MANUAL
SHFE_FTDC_CFT_IDCard = _riskuserapi.SHFE_FTDC_CFT_IDCard
SHFE_FTDC_CFT_Passport = _riskuserapi.SHFE_FTDC_CFT_Passport
SHFE_FTDC_CFT_OfficerIDCard = _riskuserapi.SHFE_FTDC_CFT_OfficerIDCard
SHFE_FTDC_CFT_SoldierIDCard = _riskuserapi.SHFE_FTDC_CFT_SoldierIDCard
SHFE_FTDC_CFT_HomeComingCard = _riskuserapi.SHFE_FTDC_CFT_HomeComingCard
SHFE_FTDC_CFT_HouseholdRegister = _riskuserapi.SHFE_FTDC_CFT_HouseholdRegister
SHFE_FTDC_CFT_LicenseNo = _riskuserapi.SHFE_FTDC_CFT_LicenseNo
SHFE_FTDC_CFT_InstitutionCodeCard = _riskuserapi.SHFE_FTDC_CFT_InstitutionCodeCard
SHFE_FTDC_CFT_TempLicenseNo = _riskuserapi.SHFE_FTDC_CFT_TempLicenseNo
SHFE_FTDC_CFT_NoEnterpriseLicenseNo = _riskuserapi.SHFE_FTDC_CFT_NoEnterpriseLicenseNo
SHFE_FTDC_CFT_OtherCard = _riskuserapi.SHFE_FTDC_CFT_OtherCard
SHFE_FTDC_CFT_SuperDepAgree = _riskuserapi.SHFE_FTDC_CFT_SuperDepAgree
SHFE_FTDC_FBC_Others = _riskuserapi.SHFE_FTDC_FBC_Others
SHFE_FTDC_FBC_TransferDetails = _riskuserapi.SHFE_FTDC_FBC_TransferDetails
SHFE_FTDC_FBC_CustAccStatus = _riskuserapi.SHFE_FTDC_FBC_CustAccStatus
SHFE_FTDC_FBC_AccountTradeDetails = _riskuserapi.SHFE_FTDC_FBC_AccountTradeDetails
SHFE_FTDC_FBC_FutureAccountChangeInfoDetails = _riskuserapi.SHFE_FTDC_FBC_FutureAccountChangeInfoDetails
SHFE_FTDC_FBC_CustMoneyDetail = _riskuserapi.SHFE_FTDC_FBC_CustMoneyDetail
SHFE_FTDC_FBC_CustCancelAccountInfo = _riskuserapi.SHFE_FTDC_FBC_CustCancelAccountInfo
SHFE_FTDC_FBC_CustMoneyResult = _riskuserapi.SHFE_FTDC_FBC_CustMoneyResult
SHFE_FTDC_FBC_OthersExceptionResult = _riskuserapi.SHFE_FTDC_FBC_OthersExceptionResult
SHFE_FTDC_FBC_CustInterestNetMoneyDetails = _riskuserapi.SHFE_FTDC_FBC_CustInterestNetMoneyDetails
SHFE_FTDC_FBC_CustMoneySendAndReceiveDetails = _riskuserapi.SHFE_FTDC_FBC_CustMoneySendAndReceiveDetails
SHFE_FTDC_FBC_CorporationMoneyTotal = _riskuserapi.SHFE_FTDC_FBC_CorporationMoneyTotal
SHFE_FTDC_FBC_MainbodyMoneyTotal = _riskuserapi.SHFE_FTDC_FBC_MainbodyMoneyTotal
SHFE_FTDC_FBC_MainPartMonitorData = _riskuserapi.SHFE_FTDC_FBC_MainPartMonitorData
SHFE_FTDC_FBC_PreparationMoney = _riskuserapi.SHFE_FTDC_FBC_PreparationMoney
SHFE_FTDC_FBC_BankMoneyMonitorData = _riskuserapi.SHFE_FTDC_FBC_BankMoneyMonitorData
SHFE_FTDC_CEC_Exchange = _riskuserapi.SHFE_FTDC_CEC_Exchange
SHFE_FTDC_CEC_Cash = _riskuserapi.SHFE_FTDC_CEC_Cash
SHFE_FTDC_YNI_Yes = _riskuserapi.SHFE_FTDC_YNI_Yes
SHFE_FTDC_YNI_No = _riskuserapi.SHFE_FTDC_YNI_No
SHFE_FTDC_BLT_CurrentMoney = _riskuserapi.SHFE_FTDC_BLT_CurrentMoney
SHFE_FTDC_BLT_UsableMoney = _riskuserapi.SHFE_FTDC_BLT_UsableMoney
SHFE_FTDC_BLT_FetchableMoney = _riskuserapi.SHFE_FTDC_BLT_FetchableMoney
SHFE_FTDC_BLT_FreezeMoney = _riskuserapi.SHFE_FTDC_BLT_FreezeMoney
SHFE_FTDC_GD_Unknown = _riskuserapi.SHFE_FTDC_GD_Unknown
SHFE_FTDC_GD_Male = _riskuserapi.SHFE_FTDC_GD_Male
SHFE_FTDC_GD_Female = _riskuserapi.SHFE_FTDC_GD_Female
SHFE_FTDC_FPF_BEN = _riskuserapi.SHFE_FTDC_FPF_BEN
SHFE_FTDC_FPF_OUR = _riskuserapi.SHFE_FTDC_FPF_OUR
SHFE_FTDC_FPF_SHA = _riskuserapi.SHFE_FTDC_FPF_SHA
SHFE_FTDC_PWKT_ExchangeKey = _riskuserapi.SHFE_FTDC_PWKT_ExchangeKey
SHFE_FTDC_PWKT_PassWordKey = _riskuserapi.SHFE_FTDC_PWKT_PassWordKey
SHFE_FTDC_PWKT_MACKey = _riskuserapi.SHFE_FTDC_PWKT_MACKey
SHFE_FTDC_PWKT_MessageKey = _riskuserapi.SHFE_FTDC_PWKT_MessageKey
SHFE_FTDC_PWT_Query = _riskuserapi.SHFE_FTDC_PWT_Query
SHFE_FTDC_PWT_Fetch = _riskuserapi.SHFE_FTDC_PWT_Fetch
SHFE_FTDC_PWT_Transfer = _riskuserapi.SHFE_FTDC_PWT_Transfer
SHFE_FTDC_PWT_Trade = _riskuserapi.SHFE_FTDC_PWT_Trade
SHFE_FTDC_EM_NoEncry = _riskuserapi.SHFE_FTDC_EM_NoEncry
SHFE_FTDC_EM_DES = _riskuserapi.SHFE_FTDC_EM_DES
SHFE_FTDC_EM_3DES = _riskuserapi.SHFE_FTDC_EM_3DES
SHFE_FTDC_BRF_BankNotNeedRepeal = _riskuserapi.SHFE_FTDC_BRF_BankNotNeedRepeal
SHFE_FTDC_BRF_BankWaitingRepeal = _riskuserapi.SHFE_FTDC_BRF_BankWaitingRepeal
SHFE_FTDC_BRF_BankBeenRepealed = _riskuserapi.SHFE_FTDC_BRF_BankBeenRepealed
SHFE_FTDC_BRORF_BrokerNotNeedRepeal = _riskuserapi.SHFE_FTDC_BRORF_BrokerNotNeedRepeal
SHFE_FTDC_BRORF_BrokerWaitingRepeal = _riskuserapi.SHFE_FTDC_BRORF_BrokerWaitingRepeal
SHFE_FTDC_BRORF_BrokerBeenRepealed = _riskuserapi.SHFE_FTDC_BRORF_BrokerBeenRepealed
SHFE_FTDC_TS_Bank = _riskuserapi.SHFE_FTDC_TS_Bank
SHFE_FTDC_TS_Future = _riskuserapi.SHFE_FTDC_TS_Future
SHFE_FTDC_TS_Store = _riskuserapi.SHFE_FTDC_TS_Store
SHFE_FTDC_LF_Yes = _riskuserapi.SHFE_FTDC_LF_Yes
SHFE_FTDC_LF_No = _riskuserapi.SHFE_FTDC_LF_No
SHFE_FTDC_BAS_Normal = _riskuserapi.SHFE_FTDC_BAS_Normal
SHFE_FTDC_BAS_Freeze = _riskuserapi.SHFE_FTDC_BAS_Freeze
SHFE_FTDC_BAS_ReportLoss = _riskuserapi.SHFE_FTDC_BAS_ReportLoss
SHFE_FTDC_MAS_Normal = _riskuserapi.SHFE_FTDC_MAS_Normal
SHFE_FTDC_MAS_Cancel = _riskuserapi.SHFE_FTDC_MAS_Cancel
SHFE_FTDC_MSS_Point = _riskuserapi.SHFE_FTDC_MSS_Point
SHFE_FTDC_MSS_PrePoint = _riskuserapi.SHFE_FTDC_MSS_PrePoint
SHFE_FTDC_MSS_CancelPoint = _riskuserapi.SHFE_FTDC_MSS_CancelPoint
SHFE_FTDC_SYT_FutureBankTransfer = _riskuserapi.SHFE_FTDC_SYT_FutureBankTransfer
SHFE_FTDC_SYT_StockBankTransfer = _riskuserapi.SHFE_FTDC_SYT_StockBankTransfer
SHFE_FTDC_SYT_TheThirdPartStore = _riskuserapi.SHFE_FTDC_SYT_TheThirdPartStore
SHFE_FTDC_TEF_NormalProcessing = _riskuserapi.SHFE_FTDC_TEF_NormalProcessing
SHFE_FTDC_TEF_Success = _riskuserapi.SHFE_FTDC_TEF_Success
SHFE_FTDC_TEF_Failed = _riskuserapi.SHFE_FTDC_TEF_Failed
SHFE_FTDC_TEF_Abnormal = _riskuserapi.SHFE_FTDC_TEF_Abnormal
SHFE_FTDC_TEF_ManualProcessedForException = _riskuserapi.SHFE_FTDC_TEF_ManualProcessedForException
SHFE_FTDC_TEF_CommuFailedNeedManualProcess = _riskuserapi.SHFE_FTDC_TEF_CommuFailedNeedManualProcess
SHFE_FTDC_TEF_SysErrorNeedManualProcess = _riskuserapi.SHFE_FTDC_TEF_SysErrorNeedManualProcess
SHFE_FTDC_PSS_NotProcess = _riskuserapi.SHFE_FTDC_PSS_NotProcess
SHFE_FTDC_PSS_StartProcess = _riskuserapi.SHFE_FTDC_PSS_StartProcess
SHFE_FTDC_PSS_Finished = _riskuserapi.SHFE_FTDC_PSS_Finished
SHFE_FTDC_CUSTT_Person = _riskuserapi.SHFE_FTDC_CUSTT_Person
SHFE_FTDC_CUSTT_Institution = _riskuserapi.SHFE_FTDC_CUSTT_Institution
SHFE_FTDC_FBTTD_FromBankToFuture = _riskuserapi.SHFE_FTDC_FBTTD_FromBankToFuture
SHFE_FTDC_FBTTD_FromFutureToBank = _riskuserapi.SHFE_FTDC_FBTTD_FromFutureToBank
SHFE_FTDC_OOD_Open = _riskuserapi.SHFE_FTDC_OOD_Open
SHFE_FTDC_OOD_Destroy = _riskuserapi.SHFE_FTDC_OOD_Destroy
SHFE_FTDC_AVAF_Invalid = _riskuserapi.SHFE_FTDC_AVAF_Invalid
SHFE_FTDC_AVAF_Valid = _riskuserapi.SHFE_FTDC_AVAF_Valid
SHFE_FTDC_AVAF_Repeal = _riskuserapi.SHFE_FTDC_AVAF_Repeal
SHFE_FTDC_OT_Bank = _riskuserapi.SHFE_FTDC_OT_Bank
SHFE_FTDC_OT_Future = _riskuserapi.SHFE_FTDC_OT_Future
SHFE_FTDC_OT_PlateForm = _riskuserapi.SHFE_FTDC_OT_PlateForm
SHFE_FTDC_OL_HeadQuarters = _riskuserapi.SHFE_FTDC_OL_HeadQuarters
SHFE_FTDC_OL_Branch = _riskuserapi.SHFE_FTDC_OL_Branch
SHFE_FTDC_PID_FutureProtocal = _riskuserapi.SHFE_FTDC_PID_FutureProtocal
SHFE_FTDC_PID_ICBCProtocal = _riskuserapi.SHFE_FTDC_PID_ICBCProtocal
SHFE_FTDC_PID_ABCProtocal = _riskuserapi.SHFE_FTDC_PID_ABCProtocal
SHFE_FTDC_PID_CBCProtocal = _riskuserapi.SHFE_FTDC_PID_CBCProtocal
SHFE_FTDC_PID_CCBProtocal = _riskuserapi.SHFE_FTDC_PID_CCBProtocal
SHFE_FTDC_PID_BOCOMProtocal = _riskuserapi.SHFE_FTDC_PID_BOCOMProtocal
SHFE_FTDC_PID_FBTPlateFormProtocal = _riskuserapi.SHFE_FTDC_PID_FBTPlateFormProtocal
SHFE_FTDC_CM_ShortConnect = _riskuserapi.SHFE_FTDC_CM_ShortConnect
SHFE_FTDC_CM_LongConnect = _riskuserapi.SHFE_FTDC_CM_LongConnect
SHFE_FTDC_SRM_ASync = _riskuserapi.SHFE_FTDC_SRM_ASync
SHFE_FTDC_SRM_Sync = _riskuserapi.SHFE_FTDC_SRM_Sync
SHFE_FTDC_BAT_BankBook = _riskuserapi.SHFE_FTDC_BAT_BankBook
SHFE_FTDC_BAT_SavingCard = _riskuserapi.SHFE_FTDC_BAT_SavingCard
SHFE_FTDC_BAT_CreditCard = _riskuserapi.SHFE_FTDC_BAT_CreditCard
SHFE_FTDC_FAT_BankBook = _riskuserapi.SHFE_FTDC_FAT_BankBook
SHFE_FTDC_FAT_SavingCard = _riskuserapi.SHFE_FTDC_FAT_SavingCard
SHFE_FTDC_FAT_CreditCard = _riskuserapi.SHFE_FTDC_FAT_CreditCard
SHFE_FTDC_OS_Ready = _riskuserapi.SHFE_FTDC_OS_Ready
SHFE_FTDC_OS_CheckIn = _riskuserapi.SHFE_FTDC_OS_CheckIn
SHFE_FTDC_OS_CheckOut = _riskuserapi.SHFE_FTDC_OS_CheckOut
SHFE_FTDC_OS_CheckFileArrived = _riskuserapi.SHFE_FTDC_OS_CheckFileArrived
SHFE_FTDC_OS_CheckDetail = _riskuserapi.SHFE_FTDC_OS_CheckDetail
SHFE_FTDC_OS_DayEndClean = _riskuserapi.SHFE_FTDC_OS_DayEndClean
SHFE_FTDC_OS_Invalid = _riskuserapi.SHFE_FTDC_OS_Invalid
SHFE_FTDC_CCBFM_ByAmount = _riskuserapi.SHFE_FTDC_CCBFM_ByAmount
SHFE_FTDC_CCBFM_ByMonth = _riskuserapi.SHFE_FTDC_CCBFM_ByMonth
SHFE_FTDC_CAPIT_Client = _riskuserapi.SHFE_FTDC_CAPIT_Client
SHFE_FTDC_CAPIT_Server = _riskuserapi.SHFE_FTDC_CAPIT_Server
SHFE_FTDC_CAPIT_UserApi = _riskuserapi.SHFE_FTDC_CAPIT_UserApi
SHFE_FTDC_LS_Connected = _riskuserapi.SHFE_FTDC_LS_Connected
SHFE_FTDC_LS_Disconnected = _riskuserapi.SHFE_FTDC_LS_Disconnected
SHFE_FTDC_BPWDF_NoCheck = _riskuserapi.SHFE_FTDC_BPWDF_NoCheck
SHFE_FTDC_BPWDF_BlankCheck = _riskuserapi.SHFE_FTDC_BPWDF_BlankCheck
SHFE_FTDC_BPWDF_EncryptCheck = _riskuserapi.SHFE_FTDC_BPWDF_EncryptCheck
SHFE_FTDC_SAT_AccountID = _riskuserapi.SHFE_FTDC_SAT_AccountID
SHFE_FTDC_SAT_CardID = _riskuserapi.SHFE_FTDC_SAT_CardID
SHFE_FTDC_SAT_SHStockholderID = _riskuserapi.SHFE_FTDC_SAT_SHStockholderID
SHFE_FTDC_SAT_SZStockholderID = _riskuserapi.SHFE_FTDC_SAT_SZStockholderID
SHFE_FTDC_TRFS_Normal = _riskuserapi.SHFE_FTDC_TRFS_Normal
SHFE_FTDC_TRFS_Repealed = _riskuserapi.SHFE_FTDC_TRFS_Repealed
SHFE_FTDC_SPTYPE_Broker = _riskuserapi.SHFE_FTDC_SPTYPE_Broker
SHFE_FTDC_SPTYPE_Bank = _riskuserapi.SHFE_FTDC_SPTYPE_Bank
SHFE_FTDC_REQRSP_Request = _riskuserapi.SHFE_FTDC_REQRSP_Request
SHFE_FTDC_REQRSP_Response = _riskuserapi.SHFE_FTDC_REQRSP_Response
SHFE_FTDC_FBTUET_SignIn = _riskuserapi.SHFE_FTDC_FBTUET_SignIn
SHFE_FTDC_FBTUET_FromBankToFuture = _riskuserapi.SHFE_FTDC_FBTUET_FromBankToFuture
SHFE_FTDC_FBTUET_FromFutureToBank = _riskuserapi.SHFE_FTDC_FBTUET_FromFutureToBank
SHFE_FTDC_FBTUET_OpenAccount = _riskuserapi.SHFE_FTDC_FBTUET_OpenAccount
SHFE_FTDC_FBTUET_CancelAccount = _riskuserapi.SHFE_FTDC_FBTUET_CancelAccount
SHFE_FTDC_FBTUET_ChangeAccount = _riskuserapi.SHFE_FTDC_FBTUET_ChangeAccount
SHFE_FTDC_FBTUET_RepealFromBankToFuture = _riskuserapi.SHFE_FTDC_FBTUET_RepealFromBankToFuture
SHFE_FTDC_FBTUET_RepealFromFutureToBank = _riskuserapi.SHFE_FTDC_FBTUET_RepealFromFutureToBank
SHFE_FTDC_FBTUET_QueryBankAccount = _riskuserapi.SHFE_FTDC_FBTUET_QueryBankAccount
SHFE_FTDC_FBTUET_QueryFutureAccount = _riskuserapi.SHFE_FTDC_FBTUET_QueryFutureAccount
SHFE_FTDC_FBTUET_SignOut = _riskuserapi.SHFE_FTDC_FBTUET_SignOut
SHFE_FTDC_FBTUET_SyncKey = _riskuserapi.SHFE_FTDC_FBTUET_SyncKey
SHFE_FTDC_FBTUET_ReserveOpenAccount = _riskuserapi.SHFE_FTDC_FBTUET_ReserveOpenAccount
SHFE_FTDC_FBTUET_CancelReserveOpenAccount = _riskuserapi.SHFE_FTDC_FBTUET_CancelReserveOpenAccount
SHFE_FTDC_FBTUET_ReserveOpenAccountConfirm = _riskuserapi.SHFE_FTDC_FBTUET_ReserveOpenAccountConfirm
SHFE_FTDC_FBTUET_Other = _riskuserapi.SHFE_FTDC_FBTUET_Other
SHFE_FTDC_DBOP_Insert = _riskuserapi.SHFE_FTDC_DBOP_Insert
SHFE_FTDC_DBOP_Update = _riskuserapi.SHFE_FTDC_DBOP_Update
SHFE_FTDC_DBOP_Delete = _riskuserapi.SHFE_FTDC_DBOP_Delete
SHFE_FTDC_SYNF_Yes = _riskuserapi.SHFE_FTDC_SYNF_Yes
SHFE_FTDC_SYNF_No = _riskuserapi.SHFE_FTDC_SYNF_No
SHFE_FTDC_SYNT_OneOffSync = _riskuserapi.SHFE_FTDC_SYNT_OneOffSync
SHFE_FTDC_SYNT_TimerSync = _riskuserapi.SHFE_FTDC_SYNT_TimerSync
SHFE_FTDC_SYNT_TimerFullSync = _riskuserapi.SHFE_FTDC_SYNT_TimerFullSync
SHFE_FTDC_FBEDIR_Settlement = _riskuserapi.SHFE_FTDC_FBEDIR_Settlement
SHFE_FTDC_FBEDIR_Sale = _riskuserapi.SHFE_FTDC_FBEDIR_Sale
SHFE_FTDC_FBERES_Success = _riskuserapi.SHFE_FTDC_FBERES_Success
SHFE_FTDC_FBERES_InsufficientBalance = _riskuserapi.SHFE_FTDC_FBERES_InsufficientBalance
SHFE_FTDC_FBERES_UnknownTrading = _riskuserapi.SHFE_FTDC_FBERES_UnknownTrading
SHFE_FTDC_FBERES_Fail = _riskuserapi.SHFE_FTDC_FBERES_Fail
SHFE_FTDC_FBEES_Normal = _riskuserapi.SHFE_FTDC_FBEES_Normal
SHFE_FTDC_FBEES_ReExchange = _riskuserapi.SHFE_FTDC_FBEES_ReExchange
SHFE_FTDC_FBEFG_DataPackage = _riskuserapi.SHFE_FTDC_FBEFG_DataPackage
SHFE_FTDC_FBEFG_File = _riskuserapi.SHFE_FTDC_FBEFG_File
SHFE_FTDC_FBEAT_NotTrade = _riskuserapi.SHFE_FTDC_FBEAT_NotTrade
SHFE_FTDC_FBEAT_Trade = _riskuserapi.SHFE_FTDC_FBEAT_Trade
SHFE_FTDC_FBEUET_SignIn = _riskuserapi.SHFE_FTDC_FBEUET_SignIn
SHFE_FTDC_FBEUET_Exchange = _riskuserapi.SHFE_FTDC_FBEUET_Exchange
SHFE_FTDC_FBEUET_ReExchange = _riskuserapi.SHFE_FTDC_FBEUET_ReExchange
SHFE_FTDC_FBEUET_QueryBankAccount = _riskuserapi.SHFE_FTDC_FBEUET_QueryBankAccount
SHFE_FTDC_FBEUET_QueryExchDetial = _riskuserapi.SHFE_FTDC_FBEUET_QueryExchDetial
SHFE_FTDC_FBEUET_QueryExchSummary = _riskuserapi.SHFE_FTDC_FBEUET_QueryExchSummary
SHFE_FTDC_FBEUET_QueryExchRate = _riskuserapi.SHFE_FTDC_FBEUET_QueryExchRate
SHFE_FTDC_FBEUET_CheckBankAccount = _riskuserapi.SHFE_FTDC_FBEUET_CheckBankAccount
SHFE_FTDC_FBEUET_SignOut = _riskuserapi.SHFE_FTDC_FBEUET_SignOut
SHFE_FTDC_FBEUET_Other = _riskuserapi.SHFE_FTDC_FBEUET_Other
SHFE_FTDC_FBERF_UnProcessed = _riskuserapi.SHFE_FTDC_FBERF_UnProcessed
SHFE_FTDC_FBERF_WaitSend = _riskuserapi.SHFE_FTDC_FBERF_WaitSend
SHFE_FTDC_FBERF_SendSuccess = _riskuserapi.SHFE_FTDC_FBERF_SendSuccess
SHFE_FTDC_FBERF_SendFailed = _riskuserapi.SHFE_FTDC_FBERF_SendFailed
SHFE_FTDC_FBERF_WaitReSend = _riskuserapi.SHFE_FTDC_FBERF_WaitReSend
SHFE_FTDC_NC_NOERROR = _riskuserapi.SHFE_FTDC_NC_NOERROR
SHFE_FTDC_NC_Warn = _riskuserapi.SHFE_FTDC_NC_Warn
SHFE_FTDC_NC_Call = _riskuserapi.SHFE_FTDC_NC_Call
SHFE_FTDC_NC_Force = _riskuserapi.SHFE_FTDC_NC_Force
SHFE_FTDC_NC_CHUANCANG = _riskuserapi.SHFE_FTDC_NC_CHUANCANG
SHFE_FTDC_NC_Exception = _riskuserapi.SHFE_FTDC_NC_Exception
SHFE_FTDC_FCT_Manual = _riskuserapi.SHFE_FTDC_FCT_Manual
SHFE_FTDC_FCT_Single = _riskuserapi.SHFE_FTDC_FCT_Single
SHFE_FTDC_FCT_Group = _riskuserapi.SHFE_FTDC_FCT_Group
SHFE_FTDC_FCT_CancelFirst = _riskuserapi.SHFE_FTDC_FCT_CancelFirst
SHFE_FTDC_RNM_System = _riskuserapi.SHFE_FTDC_RNM_System
SHFE_FTDC_RNM_SMS = _riskuserapi.SHFE_FTDC_RNM_SMS
SHFE_FTDC_RNM_EMail = _riskuserapi.SHFE_FTDC_RNM_EMail
SHFE_FTDC_RNM_Manual = _riskuserapi.SHFE_FTDC_RNM_Manual
SHFE_FTDC_RNM_Voice = _riskuserapi.SHFE_FTDC_RNM_Voice
SHFE_FTDC_RNS_NotGen = _riskuserapi.SHFE_FTDC_RNS_NotGen
SHFE_FTDC_RNS_Generated = _riskuserapi.SHFE_FTDC_RNS_Generated
SHFE_FTDC_RNS_SendError = _riskuserapi.SHFE_FTDC_RNS_SendError
SHFE_FTDC_RNS_SendOk = _riskuserapi.SHFE_FTDC_RNS_SendOk
SHFE_FTDC_RNS_Received = _riskuserapi.SHFE_FTDC_RNS_Received
SHFE_FTDC_RNS_Confirmed = _riskuserapi.SHFE_FTDC_RNS_Confirmed
SHFE_FTDC_RUE_ExportData = _riskuserapi.SHFE_FTDC_RUE_ExportData
SHFE_FTDC_COST_LastPriceAsc = _riskuserapi.SHFE_FTDC_COST_LastPriceAsc
SHFE_FTDC_COST_LastPriceDesc = _riskuserapi.SHFE_FTDC_COST_LastPriceDesc
SHFE_FTDC_COST_AskPriceAsc = _riskuserapi.SHFE_FTDC_COST_AskPriceAsc
SHFE_FTDC_COST_AskPriceDesc = _riskuserapi.SHFE_FTDC_COST_AskPriceDesc
SHFE_FTDC_COST_BidPriceAsc = _riskuserapi.SHFE_FTDC_COST_BidPriceAsc
SHFE_FTDC_COST_BidPriceDesc = _riskuserapi.SHFE_FTDC_COST_BidPriceDesc
SHFE_FTDC_UOAST_NoSend = _riskuserapi.SHFE_FTDC_UOAST_NoSend
SHFE_FTDC_UOAST_Sended = _riskuserapi.SHFE_FTDC_UOAST_Sended
SHFE_FTDC_UOAST_Generated = _riskuserapi.SHFE_FTDC_UOAST_Generated
SHFE_FTDC_UOAST_SendFail = _riskuserapi.SHFE_FTDC_UOAST_SendFail
SHFE_FTDC_UOAST_Success = _riskuserapi.SHFE_FTDC_UOAST_Success
SHFE_FTDC_UOAST_Fail = _riskuserapi.SHFE_FTDC_UOAST_Fail
SHFE_FTDC_UOAST_Cancel = _riskuserapi.SHFE_FTDC_UOAST_Cancel
SHFE_FTDC_UOACS_NoApply = _riskuserapi.SHFE_FTDC_UOACS_NoApply
SHFE_FTDC_UOACS_Submited = _riskuserapi.SHFE_FTDC_UOACS_Submited
SHFE_FTDC_UOACS_Sended = _riskuserapi.SHFE_FTDC_UOACS_Sended
SHFE_FTDC_UOACS_Success = _riskuserapi.SHFE_FTDC_UOACS_Success
SHFE_FTDC_UOACS_Refuse = _riskuserapi.SHFE_FTDC_UOACS_Refuse
SHFE_FTDC_UOACS_Cancel = _riskuserapi.SHFE_FTDC_UOACS_Cancel
SHFE_FTDC_QT_Radio = _riskuserapi.SHFE_FTDC_QT_Radio
SHFE_FTDC_QT_Option = _riskuserapi.SHFE_FTDC_QT_Option
SHFE_FTDC_QT_Blank = _riskuserapi.SHFE_FTDC_QT_Blank
SHFE_FTDC_BT_Request = _riskuserapi.SHFE_FTDC_BT_Request
SHFE_FTDC_BT_Response = _riskuserapi.SHFE_FTDC_BT_Response
SHFE_FTDC_BT_Notice = _riskuserapi.SHFE_FTDC_BT_Notice
SHFE_FTDC_CRC_Success = _riskuserapi.SHFE_FTDC_CRC_Success
SHFE_FTDC_CRC_Working = _riskuserapi.SHFE_FTDC_CRC_Working
SHFE_FTDC_CRC_InfoFail = _riskuserapi.SHFE_FTDC_CRC_InfoFail
SHFE_FTDC_CRC_IDCardFail = _riskuserapi.SHFE_FTDC_CRC_IDCardFail
SHFE_FTDC_CRC_OtherFail = _riskuserapi.SHFE_FTDC_CRC_OtherFail
SHFE_FTDC_CfMMCCT_All = _riskuserapi.SHFE_FTDC_CfMMCCT_All
SHFE_FTDC_CfMMCCT_Person = _riskuserapi.SHFE_FTDC_CfMMCCT_Person
SHFE_FTDC_CfMMCCT_Company = _riskuserapi.SHFE_FTDC_CfMMCCT_Company
SHFE_FTDC_CfMMCCT_Other = _riskuserapi.SHFE_FTDC_CfMMCCT_Other
SHFE_FTDC_CfMMCCT_SpecialOrgan = _riskuserapi.SHFE_FTDC_CfMMCCT_SpecialOrgan
SHFE_FTDC_CfMMCCT_Asset = _riskuserapi.SHFE_FTDC_CfMMCCT_Asset
SHFE_FTDC_EIDT_SHFE = _riskuserapi.SHFE_FTDC_EIDT_SHFE
SHFE_FTDC_EIDT_CZCE = _riskuserapi.SHFE_FTDC_EIDT_CZCE
SHFE_FTDC_EIDT_DCE = _riskuserapi.SHFE_FTDC_EIDT_DCE
SHFE_FTDC_EIDT_CFFEX = _riskuserapi.SHFE_FTDC_EIDT_CFFEX
SHFE_FTDC_EIDT_INE = _riskuserapi.SHFE_FTDC_EIDT_INE
SHFE_FTDC_ECIDT_Hedge = _riskuserapi.SHFE_FTDC_ECIDT_Hedge
SHFE_FTDC_ECIDT_Arbitrage = _riskuserapi.SHFE_FTDC_ECIDT_Arbitrage
SHFE_FTDC_ECIDT_Speculation = _riskuserapi.SHFE_FTDC_ECIDT_Speculation
SHFE_FTDC_UF_NoUpdate = _riskuserapi.SHFE_FTDC_UF_NoUpdate
SHFE_FTDC_UF_Success = _riskuserapi.SHFE_FTDC_UF_Success
SHFE_FTDC_UF_Fail = _riskuserapi.SHFE_FTDC_UF_Fail
SHFE_FTDC_UF_TCSuccess = _riskuserapi.SHFE_FTDC_UF_TCSuccess
SHFE_FTDC_UF_TCFail = _riskuserapi.SHFE_FTDC_UF_TCFail
SHFE_FTDC_UF_Cancel = _riskuserapi.SHFE_FTDC_UF_Cancel
SHFE_FTDC_AOID_OpenInvestor = _riskuserapi.SHFE_FTDC_AOID_OpenInvestor
SHFE_FTDC_AOID_ModifyIDCard = _riskuserapi.SHFE_FTDC_AOID_ModifyIDCard
SHFE_FTDC_AOID_ModifyNoIDCard = _riskuserapi.SHFE_FTDC_AOID_ModifyNoIDCard
SHFE_FTDC_AOID_ApplyTradingCode = _riskuserapi.SHFE_FTDC_AOID_ApplyTradingCode
SHFE_FTDC_AOID_CancelTradingCode = _riskuserapi.SHFE_FTDC_AOID_CancelTradingCode
SHFE_FTDC_AOID_CancelInvestor = _riskuserapi.SHFE_FTDC_AOID_CancelInvestor
SHFE_FTDC_AOID_FreezeAccount = _riskuserapi.SHFE_FTDC_AOID_FreezeAccount
SHFE_FTDC_AOID_ActiveFreezeAccount = _riskuserapi.SHFE_FTDC_AOID_ActiveFreezeAccount
SHFE_FTDC_ASID_NoComplete = _riskuserapi.SHFE_FTDC_ASID_NoComplete
SHFE_FTDC_ASID_Submited = _riskuserapi.SHFE_FTDC_ASID_Submited
SHFE_FTDC_ASID_Checked = _riskuserapi.SHFE_FTDC_ASID_Checked
SHFE_FTDC_ASID_Refused = _riskuserapi.SHFE_FTDC_ASID_Refused
SHFE_FTDC_ASID_Deleted = _riskuserapi.SHFE_FTDC_ASID_Deleted
SHFE_FTDC_UOASM_ByAPI = _riskuserapi.SHFE_FTDC_UOASM_ByAPI
SHFE_FTDC_UOASM_ByFile = _riskuserapi.SHFE_FTDC_UOASM_ByFile
SHFE_FTDC_EvM_ADD = _riskuserapi.SHFE_FTDC_EvM_ADD
SHFE_FTDC_EvM_UPDATE = _riskuserapi.SHFE_FTDC_EvM_UPDATE
SHFE_FTDC_EvM_DELETE = _riskuserapi.SHFE_FTDC_EvM_DELETE
SHFE_FTDC_EvM_CHECK = _riskuserapi.SHFE_FTDC_EvM_CHECK
SHFE_FTDC_EvM_COPY = _riskuserapi.SHFE_FTDC_EvM_COPY
SHFE_FTDC_EvM_CANCEL = _riskuserapi.SHFE_FTDC_EvM_CANCEL
SHFE_FTDC_EvM_Reverse = _riskuserapi.SHFE_FTDC_EvM_Reverse
SHFE_FTDC_UOAA_ASR = _riskuserapi.SHFE_FTDC_UOAA_ASR
SHFE_FTDC_UOAA_ASNR = _riskuserapi.SHFE_FTDC_UOAA_ASNR
SHFE_FTDC_UOAA_NSAR = _riskuserapi.SHFE_FTDC_UOAA_NSAR
SHFE_FTDC_UOAA_NSR = _riskuserapi.SHFE_FTDC_UOAA_NSR
SHFE_FTDC_EvM_InvestorGroupFlow = _riskuserapi.SHFE_FTDC_EvM_InvestorGroupFlow
SHFE_FTDC_EvM_InvestorRate = _riskuserapi.SHFE_FTDC_EvM_InvestorRate
SHFE_FTDC_EvM_InvestorCommRateModel = _riskuserapi.SHFE_FTDC_EvM_InvestorCommRateModel
SHFE_FTDC_CL_Zero = _riskuserapi.SHFE_FTDC_CL_Zero
SHFE_FTDC_CL_One = _riskuserapi.SHFE_FTDC_CL_One
SHFE_FTDC_CL_Two = _riskuserapi.SHFE_FTDC_CL_Two
SHFE_FTDC_CHS_Init = _riskuserapi.SHFE_FTDC_CHS_Init
SHFE_FTDC_CHS_Checking = _riskuserapi.SHFE_FTDC_CHS_Checking
SHFE_FTDC_CHS_Checked = _riskuserapi.SHFE_FTDC_CHS_Checked
SHFE_FTDC_CHS_Refuse = _riskuserapi.SHFE_FTDC_CHS_Refuse
SHFE_FTDC_CHS_Cancel = _riskuserapi.SHFE_FTDC_CHS_Cancel
SHFE_FTDC_CHU_Unused = _riskuserapi.SHFE_FTDC_CHU_Unused
SHFE_FTDC_CHU_Used = _riskuserapi.SHFE_FTDC_CHU_Used
SHFE_FTDC_CHU_Fail = _riskuserapi.SHFE_FTDC_CHU_Fail
SHFE_FTDC_BAO_ByAccProperty = _riskuserapi.SHFE_FTDC_BAO_ByAccProperty
SHFE_FTDC_BAO_ByFBTransfer = _riskuserapi.SHFE_FTDC_BAO_ByFBTransfer
SHFE_FTDC_MBTS_ByInstrument = _riskuserapi.SHFE_FTDC_MBTS_ByInstrument
SHFE_FTDC_MBTS_ByDayInsPrc = _riskuserapi.SHFE_FTDC_MBTS_ByDayInsPrc
SHFE_FTDC_MBTS_ByDayIns = _riskuserapi.SHFE_FTDC_MBTS_ByDayIns
SHFE_FTDC_OTP_NONE = _riskuserapi.SHFE_FTDC_OTP_NONE
SHFE_FTDC_OTP_TOTP = _riskuserapi.SHFE_FTDC_OTP_TOTP
SHFE_FTDC_OTPS_Unused = _riskuserapi.SHFE_FTDC_OTPS_Unused
SHFE_FTDC_OTPS_Used = _riskuserapi.SHFE_FTDC_OTPS_Used
SHFE_FTDC_OTPS_Disuse = _riskuserapi.SHFE_FTDC_OTPS_Disuse
SHFE_FTDC_BUT_Investor = _riskuserapi.SHFE_FTDC_BUT_Investor
SHFE_FTDC_BUT_BrokerUser = _riskuserapi.SHFE_FTDC_BUT_BrokerUser
SHFE_FTDC_FUTT_Commodity = _riskuserapi.SHFE_FTDC_FUTT_Commodity
SHFE_FTDC_FUTT_Financial = _riskuserapi.SHFE_FTDC_FUTT_Financial
SHFE_FTDC_FET_Restriction = _riskuserapi.SHFE_FTDC_FET_Restriction
SHFE_FTDC_FET_TodayRestriction = _riskuserapi.SHFE_FTDC_FET_TodayRestriction
SHFE_FTDC_FET_Transfer = _riskuserapi.SHFE_FTDC_FET_Transfer
SHFE_FTDC_FET_Credit = _riskuserapi.SHFE_FTDC_FET_Credit
SHFE_FTDC_FET_InvestorWithdrawAlm = _riskuserapi.SHFE_FTDC_FET_InvestorWithdrawAlm
SHFE_FTDC_FET_BankRestriction = _riskuserapi.SHFE_FTDC_FET_BankRestriction
SHFE_FTDC_FET_Accountregister = _riskuserapi.SHFE_FTDC_FET_Accountregister
SHFE_FTDC_FET_ExchangeFundIO = _riskuserapi.SHFE_FTDC_FET_ExchangeFundIO
SHFE_FTDC_FET_InvestorFundIO = _riskuserapi.SHFE_FTDC_FET_InvestorFundIO
SHFE_FTDC_AST_FBTransfer = _riskuserapi.SHFE_FTDC_AST_FBTransfer
SHFE_FTDC_AST_ManualEntry = _riskuserapi.SHFE_FTDC_AST_ManualEntry
SHFE_FTDC_CST_UnifyAccount = _riskuserapi.SHFE_FTDC_CST_UnifyAccount
SHFE_FTDC_CST_ManualEntry = _riskuserapi.SHFE_FTDC_CST_ManualEntry
SHFE_FTDC_UR_All = _riskuserapi.SHFE_FTDC_UR_All
SHFE_FTDC_UR_Single = _riskuserapi.SHFE_FTDC_UR_Single
SHFE_FTDC_BG_Investor = _riskuserapi.SHFE_FTDC_BG_Investor
SHFE_FTDC_BG_Group = _riskuserapi.SHFE_FTDC_BG_Group
SHFE_FTDC_TSSM_Instrument = _riskuserapi.SHFE_FTDC_TSSM_Instrument
SHFE_FTDC_TSSM_Product = _riskuserapi.SHFE_FTDC_TSSM_Product
SHFE_FTDC_TSSM_Exchange = _riskuserapi.SHFE_FTDC_TSSM_Exchange
SHFE_FTDC_ESM_Relative = _riskuserapi.SHFE_FTDC_ESM_Relative
SHFE_FTDC_ESM_Typical = _riskuserapi.SHFE_FTDC_ESM_Typical
SHFE_FTDC_RIR_All = _riskuserapi.SHFE_FTDC_RIR_All
SHFE_FTDC_RIR_Model = _riskuserapi.SHFE_FTDC_RIR_Model
SHFE_FTDC_RIR_Single = _riskuserapi.SHFE_FTDC_RIR_Single
SHFE_FTDC_RIQR_Model = _riskuserapi.SHFE_FTDC_RIQR_Model
SHFE_FTDC_RIQR_Single = _riskuserapi.SHFE_FTDC_RIQR_Single
SHFE_FTDC_RIQR_SingleAndModel = _riskuserapi.SHFE_FTDC_RIQR_SingleAndModel
SHFE_FTDC_WIR_Single = _riskuserapi.SHFE_FTDC_WIR_Single
SHFE_FTDC_WIR_User = _riskuserapi.SHFE_FTDC_WIR_User
SHFE_FTDC_WIR_Group = _riskuserapi.SHFE_FTDC_WIR_Group
SHFE_FTDC_SDS_Initialize = _riskuserapi.SHFE_FTDC_SDS_Initialize
SHFE_FTDC_SDS_Settlementing = _riskuserapi.SHFE_FTDC_SDS_Settlementing
SHFE_FTDC_SDS_Settlemented = _riskuserapi.SHFE_FTDC_SDS_Settlemented
SHFE_FTDC_TSRC_NORMAL = _riskuserapi.SHFE_FTDC_TSRC_NORMAL
SHFE_FTDC_TSRC_QUERY = _riskuserapi.SHFE_FTDC_TSRC_QUERY
SHFE_FTDC_FSM_Product = _riskuserapi.SHFE_FTDC_FSM_Product
SHFE_FTDC_FSM_Exchange = _riskuserapi.SHFE_FTDC_FSM_Exchange
SHFE_FTDC_FSM_All = _riskuserapi.SHFE_FTDC_FSM_All
SHFE_FTDC_BIR_Property = _riskuserapi.SHFE_FTDC_BIR_Property
SHFE_FTDC_BIR_All = _riskuserapi.SHFE_FTDC_BIR_All
SHFE_FTDC_PIR_All = _riskuserapi.SHFE_FTDC_PIR_All
SHFE_FTDC_PIR_Property = _riskuserapi.SHFE_FTDC_PIR_Property
SHFE_FTDC_PIR_Single = _riskuserapi.SHFE_FTDC_PIR_Single
SHFE_FTDC_FIS_NoCreate = _riskuserapi.SHFE_FTDC_FIS_NoCreate
SHFE_FTDC_FIS_Created = _riskuserapi.SHFE_FTDC_FIS_Created
SHFE_FTDC_FIS_Failed = _riskuserapi.SHFE_FTDC_FIS_Failed
SHFE_FTDC_FGS_FileTransmit = _riskuserapi.SHFE_FTDC_FGS_FileTransmit
SHFE_FTDC_FGS_FileGen = _riskuserapi.SHFE_FTDC_FGS_FileGen
SHFE_FTDC_SoM_Add = _riskuserapi.SHFE_FTDC_SoM_Add
SHFE_FTDC_SoM_Update = _riskuserapi.SHFE_FTDC_SoM_Update
SHFE_FTDC_SoM_Delete = _riskuserapi.SHFE_FTDC_SoM_Delete
SHFE_FTDC_SoM_Copy = _riskuserapi.SHFE_FTDC_SoM_Copy
SHFE_FTDC_SoM_AcTive = _riskuserapi.SHFE_FTDC_SoM_AcTive
SHFE_FTDC_SoM_CanCel = _riskuserapi.SHFE_FTDC_SoM_CanCel
SHFE_FTDC_SoM_ReSet = _riskuserapi.SHFE_FTDC_SoM_ReSet
SHFE_FTDC_SoT_UpdatePassword = _riskuserapi.SHFE_FTDC_SoT_UpdatePassword
SHFE_FTDC_SoT_UserDepartment = _riskuserapi.SHFE_FTDC_SoT_UserDepartment
SHFE_FTDC_SoT_RoleManager = _riskuserapi.SHFE_FTDC_SoT_RoleManager
SHFE_FTDC_SoT_RoleFunction = _riskuserapi.SHFE_FTDC_SoT_RoleFunction
SHFE_FTDC_SoT_BaseParam = _riskuserapi.SHFE_FTDC_SoT_BaseParam
SHFE_FTDC_SoT_SetUserID = _riskuserapi.SHFE_FTDC_SoT_SetUserID
SHFE_FTDC_SoT_SetUserRole = _riskuserapi.SHFE_FTDC_SoT_SetUserRole
SHFE_FTDC_SoT_UserIpRestriction = _riskuserapi.SHFE_FTDC_SoT_UserIpRestriction
SHFE_FTDC_SoT_DepartmentManager = _riskuserapi.SHFE_FTDC_SoT_DepartmentManager
SHFE_FTDC_SoT_DepartmentCopy = _riskuserapi.SHFE_FTDC_SoT_DepartmentCopy
SHFE_FTDC_SoT_Tradingcode = _riskuserapi.SHFE_FTDC_SoT_Tradingcode
SHFE_FTDC_SoT_InvestorStatus = _riskuserapi.SHFE_FTDC_SoT_InvestorStatus
SHFE_FTDC_SoT_InvestorAuthority = _riskuserapi.SHFE_FTDC_SoT_InvestorAuthority
SHFE_FTDC_SoT_PropertySet = _riskuserapi.SHFE_FTDC_SoT_PropertySet
SHFE_FTDC_SoT_ReSetInvestorPasswd = _riskuserapi.SHFE_FTDC_SoT_ReSetInvestorPasswd
SHFE_FTDC_SoT_InvestorPersonalityInfo = _riskuserapi.SHFE_FTDC_SoT_InvestorPersonalityInfo
SHFE_FTDC_CSRCQ_Current = _riskuserapi.SHFE_FTDC_CSRCQ_Current
SHFE_FTDC_CSRCQ_History = _riskuserapi.SHFE_FTDC_CSRCQ_History
SHFE_FTDC_FRS_Normal = _riskuserapi.SHFE_FTDC_FRS_Normal
SHFE_FTDC_FRS_Freeze = _riskuserapi.SHFE_FTDC_FRS_Freeze
SHFE_FTDC_STST_Standard = _riskuserapi.SHFE_FTDC_STST_Standard
SHFE_FTDC_STST_NonStandard = _riskuserapi.SHFE_FTDC_STST_NonStandard
SHFE_FTDC_RPT_Freeze = _riskuserapi.SHFE_FTDC_RPT_Freeze
SHFE_FTDC_RPT_FreezeActive = _riskuserapi.SHFE_FTDC_RPT_FreezeActive
SHFE_FTDC_RPT_OpenLimit = _riskuserapi.SHFE_FTDC_RPT_OpenLimit
SHFE_FTDC_RPT_RelieveOpenLimit = _riskuserapi.SHFE_FTDC_RPT_RelieveOpenLimit
SHFE_FTDC_AMLDS_Normal = _riskuserapi.SHFE_FTDC_AMLDS_Normal
SHFE_FTDC_AMLDS_Deleted = _riskuserapi.SHFE_FTDC_AMLDS_Deleted
SHFE_FTDC_AMLCHS_Init = _riskuserapi.SHFE_FTDC_AMLCHS_Init
SHFE_FTDC_AMLCHS_Checking = _riskuserapi.SHFE_FTDC_AMLCHS_Checking
SHFE_FTDC_AMLCHS_Checked = _riskuserapi.SHFE_FTDC_AMLCHS_Checked
SHFE_FTDC_AMLCHS_RefuseReport = _riskuserapi.SHFE_FTDC_AMLCHS_RefuseReport
SHFE_FTDC_AMLDT_DrawDay = _riskuserapi.SHFE_FTDC_AMLDT_DrawDay
SHFE_FTDC_AMLDT_TouchDay = _riskuserapi.SHFE_FTDC_AMLDT_TouchDay
SHFE_FTDC_AMLCL_CheckLevel0 = _riskuserapi.SHFE_FTDC_AMLCL_CheckLevel0
SHFE_FTDC_AMLCL_CheckLevel1 = _riskuserapi.SHFE_FTDC_AMLCL_CheckLevel1
SHFE_FTDC_AMLCL_CheckLevel2 = _riskuserapi.SHFE_FTDC_AMLCL_CheckLevel2
SHFE_FTDC_AMLCL_CheckLevel3 = _riskuserapi.SHFE_FTDC_AMLCL_CheckLevel3
SHFE_FTDC_EFT_CSV = _riskuserapi.SHFE_FTDC_EFT_CSV
SHFE_FTDC_EFT_EXCEL = _riskuserapi.SHFE_FTDC_EFT_EXCEL
SHFE_FTDC_EFT_DBF = _riskuserapi.SHFE_FTDC_EFT_DBF
SHFE_FTDC_SMT_Before = _riskuserapi.SHFE_FTDC_SMT_Before
SHFE_FTDC_SMT_Settlement = _riskuserapi.SHFE_FTDC_SMT_Settlement
SHFE_FTDC_SMT_After = _riskuserapi.SHFE_FTDC_SMT_After
SHFE_FTDC_SMT_Settlemented = _riskuserapi.SHFE_FTDC_SMT_Settlemented
SHFE_FTDC_SML_Must = _riskuserapi.SHFE_FTDC_SML_Must
SHFE_FTDC_SML_Alarm = _riskuserapi.SHFE_FTDC_SML_Alarm
SHFE_FTDC_SML_Prompt = _riskuserapi.SHFE_FTDC_SML_Prompt
SHFE_FTDC_SML_Ignore = _riskuserapi.SHFE_FTDC_SML_Ignore
SHFE_FTDC_SMG_Exhcange = _riskuserapi.SHFE_FTDC_SMG_Exhcange
SHFE_FTDC_SMG_ASP = _riskuserapi.SHFE_FTDC_SMG_ASP
SHFE_FTDC_SMG_CSRC = _riskuserapi.SHFE_FTDC_SMG_CSRC
SHFE_FTDC_LUT_Repeatable = _riskuserapi.SHFE_FTDC_LUT_Repeatable
SHFE_FTDC_LUT_Unrepeatable = _riskuserapi.SHFE_FTDC_LUT_Unrepeatable
SHFE_FTDC_DAR_Settle = _riskuserapi.SHFE_FTDC_DAR_Settle
SHFE_FTDC_DAR_Exchange = _riskuserapi.SHFE_FTDC_DAR_Exchange
SHFE_FTDC_DAR_CSRC = _riskuserapi.SHFE_FTDC_DAR_CSRC
SHFE_FTDC_MGT_ExchMarginRate = _riskuserapi.SHFE_FTDC_MGT_ExchMarginRate
SHFE_FTDC_MGT_InstrMarginRate = _riskuserapi.SHFE_FTDC_MGT_InstrMarginRate
SHFE_FTDC_MGT_InstrMarginRateTrade = _riskuserapi.SHFE_FTDC_MGT_InstrMarginRateTrade
SHFE_FTDC_ACT_Intraday = _riskuserapi.SHFE_FTDC_ACT_Intraday
SHFE_FTDC_ACT_Long = _riskuserapi.SHFE_FTDC_ACT_Long
SHFE_FTDC_MRT_Exchange = _riskuserapi.SHFE_FTDC_MRT_Exchange
SHFE_FTDC_MRT_Investor = _riskuserapi.SHFE_FTDC_MRT_Investor
SHFE_FTDC_MRT_InvestorTrade = _riskuserapi.SHFE_FTDC_MRT_InvestorTrade
SHFE_FTDC_BUS_UnBak = _riskuserapi.SHFE_FTDC_BUS_UnBak
SHFE_FTDC_BUS_BakUp = _riskuserapi.SHFE_FTDC_BUS_BakUp
SHFE_FTDC_BUS_BakUped = _riskuserapi.SHFE_FTDC_BUS_BakUped
SHFE_FTDC_BUS_BakFail = _riskuserapi.SHFE_FTDC_BUS_BakFail
SHFE_FTDC_SIS_UnInitialize = _riskuserapi.SHFE_FTDC_SIS_UnInitialize
SHFE_FTDC_SIS_Initialize = _riskuserapi.SHFE_FTDC_SIS_Initialize
SHFE_FTDC_SIS_Initialized = _riskuserapi.SHFE_FTDC_SIS_Initialized
SHFE_FTDC_SRS_NoCreate = _riskuserapi.SHFE_FTDC_SRS_NoCreate
SHFE_FTDC_SRS_Create = _riskuserapi.SHFE_FTDC_SRS_Create
SHFE_FTDC_SRS_Created = _riskuserapi.SHFE_FTDC_SRS_Created
SHFE_FTDC_SRS_CreateFail = _riskuserapi.SHFE_FTDC_SRS_CreateFail
SHFE_FTDC_SSS_UnSaveData = _riskuserapi.SHFE_FTDC_SSS_UnSaveData
SHFE_FTDC_SSS_SaveDatad = _riskuserapi.SHFE_FTDC_SSS_SaveDatad
SHFE_FTDC_SAS_UnArchived = _riskuserapi.SHFE_FTDC_SAS_UnArchived
SHFE_FTDC_SAS_Archiving = _riskuserapi.SHFE_FTDC_SAS_Archiving
SHFE_FTDC_SAS_Archived = _riskuserapi.SHFE_FTDC_SAS_Archived
SHFE_FTDC_SAS_ArchiveFail = _riskuserapi.SHFE_FTDC_SAS_ArchiveFail
SHFE_FTDC_CTPT_Unkown = _riskuserapi.SHFE_FTDC_CTPT_Unkown
SHFE_FTDC_CTPT_MainCenter = _riskuserapi.SHFE_FTDC_CTPT_MainCenter
SHFE_FTDC_CTPT_BackUp = _riskuserapi.SHFE_FTDC_CTPT_BackUp
SHFE_FTDC_CDT_Normal = _riskuserapi.SHFE_FTDC_CDT_Normal
SHFE_FTDC_CDT_SpecFirst = _riskuserapi.SHFE_FTDC_CDT_SpecFirst
SHFE_FTDC_MFUR_None = _riskuserapi.SHFE_FTDC_MFUR_None
SHFE_FTDC_MFUR_Margin = _riskuserapi.SHFE_FTDC_MFUR_Margin
SHFE_FTDC_MFUR_All = _riskuserapi.SHFE_FTDC_MFUR_All
SHFE_FTDC_MFUR_CNY3 = _riskuserapi.SHFE_FTDC_MFUR_CNY3
SHFE_FTDC_SPT_CzceHedge = _riskuserapi.SHFE_FTDC_SPT_CzceHedge
SHFE_FTDC_SPT_IneForeignCurrency = _riskuserapi.SHFE_FTDC_SPT_IneForeignCurrency
SHFE_FTDC_SPT_DceOpenClose = _riskuserapi.SHFE_FTDC_SPT_DceOpenClose
SHFE_FTDC_FMT_Mortgage = _riskuserapi.SHFE_FTDC_FMT_Mortgage
SHFE_FTDC_FMT_Redemption = _riskuserapi.SHFE_FTDC_FMT_Redemption
SHFE_FTDC_ASPI_BaseMargin = _riskuserapi.SHFE_FTDC_ASPI_BaseMargin
SHFE_FTDC_ASPI_LowestInterest = _riskuserapi.SHFE_FTDC_ASPI_LowestInterest
SHFE_FTDC_FMD_In = _riskuserapi.SHFE_FTDC_FMD_In
SHFE_FTDC_FMD_Out = _riskuserapi.SHFE_FTDC_FMD_Out
SHFE_FTDC_BT_Profit = _riskuserapi.SHFE_FTDC_BT_Profit
SHFE_FTDC_BT_Loss = _riskuserapi.SHFE_FTDC_BT_Loss
SHFE_FTDC_BT_Other = _riskuserapi.SHFE_FTDC_BT_Other
SHFE_FTDC_SST_Manual = _riskuserapi.SHFE_FTDC_SST_Manual
SHFE_FTDC_SST_Automatic = _riskuserapi.SHFE_FTDC_SST_Automatic
SHFE_FTDC_CED_Settlement = _riskuserapi.SHFE_FTDC_CED_Settlement
SHFE_FTDC_CED_Sale = _riskuserapi.SHFE_FTDC_CED_Sale
SHFE_FTDC_CSS_Entry = _riskuserapi.SHFE_FTDC_CSS_Entry
SHFE_FTDC_CSS_Approve = _riskuserapi.SHFE_FTDC_CSS_Approve
SHFE_FTDC_CSS_Refuse = _riskuserapi.SHFE_FTDC_CSS_Refuse
SHFE_FTDC_CSS_Revoke = _riskuserapi.SHFE_FTDC_CSS_Revoke
SHFE_FTDC_CSS_Send = _riskuserapi.SHFE_FTDC_CSS_Send
SHFE_FTDC_CSS_Success = _riskuserapi.SHFE_FTDC_CSS_Success
SHFE_FTDC_CSS_Failure = _riskuserapi.SHFE_FTDC_CSS_Failure
SHFE_FTDC_REQF_NoSend = _riskuserapi.SHFE_FTDC_REQF_NoSend
SHFE_FTDC_REQF_SendSuccess = _riskuserapi.SHFE_FTDC_REQF_SendSuccess
SHFE_FTDC_REQF_SendFailed = _riskuserapi.SHFE_FTDC_REQF_SendFailed
SHFE_FTDC_REQF_WaitReSend = _riskuserapi.SHFE_FTDC_REQF_WaitReSend
SHFE_FTDC_RESF_Success = _riskuserapi.SHFE_FTDC_RESF_Success
SHFE_FTDC_RESF_InsuffiCient = _riskuserapi.SHFE_FTDC_RESF_InsuffiCient
SHFE_FTDC_RESF_UnKnown = _riskuserapi.SHFE_FTDC_RESF_UnKnown
SHFE_FTDC_EXS_Before = _riskuserapi.SHFE_FTDC_EXS_Before
SHFE_FTDC_EXS_After = _riskuserapi.SHFE_FTDC_EXS_After
SHFE_FTDC_CR_Domestic = _riskuserapi.SHFE_FTDC_CR_Domestic
SHFE_FTDC_CR_GMT = _riskuserapi.SHFE_FTDC_CR_GMT
SHFE_FTDC_CR_Foreign = _riskuserapi.SHFE_FTDC_CR_Foreign
SHFE_FTDC_HB_No = _riskuserapi.SHFE_FTDC_HB_No
SHFE_FTDC_HB_Yes = _riskuserapi.SHFE_FTDC_HB_Yes
SHFE_FTDC_SM_Normal = _riskuserapi.SHFE_FTDC_SM_Normal
SHFE_FTDC_SM_Emerge = _riskuserapi.SHFE_FTDC_SM_Emerge
SHFE_FTDC_SM_Restore = _riskuserapi.SHFE_FTDC_SM_Restore
SHFE_FTDC_TPT_Full = _riskuserapi.SHFE_FTDC_TPT_Full
SHFE_FTDC_TPT_Increment = _riskuserapi.SHFE_FTDC_TPT_Increment
SHFE_FTDC_TPT_BackUp = _riskuserapi.SHFE_FTDC_TPT_BackUp
SHFE_FTDC_LM_Trade = _riskuserapi.SHFE_FTDC_LM_Trade
SHFE_FTDC_LM_Transfer = _riskuserapi.SHFE_FTDC_LM_Transfer
SHFE_FTDC_CPT_Instrument = _riskuserapi.SHFE_FTDC_CPT_Instrument
SHFE_FTDC_CPT_Margin = _riskuserapi.SHFE_FTDC_CPT_Margin
SHFE_FTDC_HT_Yes = _riskuserapi.SHFE_FTDC_HT_Yes
SHFE_FTDC_HT_No = _riskuserapi.SHFE_FTDC_HT_No
SHFE_FTDC_AMT_Bank = _riskuserapi.SHFE_FTDC_AMT_Bank
SHFE_FTDC_AMT_Securities = _riskuserapi.SHFE_FTDC_AMT_Securities
SHFE_FTDC_AMT_Fund = _riskuserapi.SHFE_FTDC_AMT_Fund
SHFE_FTDC_AMT_Insurance = _riskuserapi.SHFE_FTDC_AMT_Insurance
SHFE_FTDC_AMT_Trust = _riskuserapi.SHFE_FTDC_AMT_Trust
SHFE_FTDC_AMT_Other = _riskuserapi.SHFE_FTDC_AMT_Other
SHFE_FTDC_CFIOT_FundIO = _riskuserapi.SHFE_FTDC_CFIOT_FundIO
SHFE_FTDC_CFIOT_SwapCurrency = _riskuserapi.SHFE_FTDC_CFIOT_SwapCurrency
SHFE_FTDC_CAT_Futures = _riskuserapi.SHFE_FTDC_CAT_Futures
SHFE_FTDC_CAT_AssetmgrFuture = _riskuserapi.SHFE_FTDC_CAT_AssetmgrFuture
SHFE_FTDC_CAT_AssetmgrTrustee = _riskuserapi.SHFE_FTDC_CAT_AssetmgrTrustee
SHFE_FTDC_CAT_AssetmgrTransfer = _riskuserapi.SHFE_FTDC_CAT_AssetmgrTransfer
SHFE_FTDC_LT_Chinese = _riskuserapi.SHFE_FTDC_LT_Chinese
SHFE_FTDC_LT_English = _riskuserapi.SHFE_FTDC_LT_English
SHFE_FTDC_AMCT_Person = _riskuserapi.SHFE_FTDC_AMCT_Person
SHFE_FTDC_AMCT_Organ = _riskuserapi.SHFE_FTDC_AMCT_Organ
SHFE_FTDC_AMCT_SpecialOrgan = _riskuserapi.SHFE_FTDC_AMCT_SpecialOrgan
SHFE_FTDC_ASST_Futures = _riskuserapi.SHFE_FTDC_ASST_Futures
SHFE_FTDC_ASST_SpecialOrgan = _riskuserapi.SHFE_FTDC_ASST_SpecialOrgan
SHFE_FTDC_CIT_HasExch = _riskuserapi.SHFE_FTDC_CIT_HasExch
SHFE_FTDC_CIT_HasATP = _riskuserapi.SHFE_FTDC_CIT_HasATP
SHFE_FTDC_CIT_HasDiff = _riskuserapi.SHFE_FTDC_CIT_HasDiff
SHFE_FTDC_DT_HandDeliv = _riskuserapi.SHFE_FTDC_DT_HandDeliv
SHFE_FTDC_DT_PersonDeliv = _riskuserapi.SHFE_FTDC_DT_PersonDeliv
SHFE_FTDC_MMSA_NO = _riskuserapi.SHFE_FTDC_MMSA_NO
SHFE_FTDC_MMSA_YES = _riskuserapi.SHFE_FTDC_MMSA_YES
SHFE_FTDC_CACT_Person = _riskuserapi.SHFE_FTDC_CACT_Person
SHFE_FTDC_CACT_Company = _riskuserapi.SHFE_FTDC_CACT_Company
SHFE_FTDC_CACT_Other = _riskuserapi.SHFE_FTDC_CACT_Other
SHFE_FTDC_UOAAT_Futures = _riskuserapi.SHFE_FTDC_UOAAT_Futures
SHFE_FTDC_UOAAT_SpecialOrgan = _riskuserapi.SHFE_FTDC_UOAAT_SpecialOrgan
SHFE_FTDC_DEN_Buy = _riskuserapi.SHFE_FTDC_DEN_Buy
SHFE_FTDC_DEN_Sell = _riskuserapi.SHFE_FTDC_DEN_Sell
SHFE_FTDC_OFEN_Open = _riskuserapi.SHFE_FTDC_OFEN_Open
SHFE_FTDC_OFEN_Close = _riskuserapi.SHFE_FTDC_OFEN_Close
SHFE_FTDC_OFEN_ForceClose = _riskuserapi.SHFE_FTDC_OFEN_ForceClose
SHFE_FTDC_OFEN_CloseToday = _riskuserapi.SHFE_FTDC_OFEN_CloseToday
SHFE_FTDC_OFEN_CloseYesterday = _riskuserapi.SHFE_FTDC_OFEN_CloseYesterday
SHFE_FTDC_OFEN_ForceOff = _riskuserapi.SHFE_FTDC_OFEN_ForceOff
SHFE_FTDC_OFEN_LocalForceClose = _riskuserapi.SHFE_FTDC_OFEN_LocalForceClose
SHFE_FTDC_HFEN_Speculation = _riskuserapi.SHFE_FTDC_HFEN_Speculation
SHFE_FTDC_HFEN_Arbitrage = _riskuserapi.SHFE_FTDC_HFEN_Arbitrage
SHFE_FTDC_HFEN_Hedge = _riskuserapi.SHFE_FTDC_HFEN_Hedge
SHFE_FTDC_FIOTEN_FundIO = _riskuserapi.SHFE_FTDC_FIOTEN_FundIO
SHFE_FTDC_FIOTEN_Transfer = _riskuserapi.SHFE_FTDC_FIOTEN_Transfer
SHFE_FTDC_FIOTEN_SwapCurrency = _riskuserapi.SHFE_FTDC_FIOTEN_SwapCurrency
SHFE_FTDC_FTEN_Deposite = _riskuserapi.SHFE_FTDC_FTEN_Deposite
SHFE_FTDC_FTEN_ItemFund = _riskuserapi.SHFE_FTDC_FTEN_ItemFund
SHFE_FTDC_FTEN_Company = _riskuserapi.SHFE_FTDC_FTEN_Company
SHFE_FTDC_FTEN_InnerTransfer = _riskuserapi.SHFE_FTDC_FTEN_InnerTransfer
SHFE_FTDC_FDEN_In = _riskuserapi.SHFE_FTDC_FDEN_In
SHFE_FTDC_FDEN_Out = _riskuserapi.SHFE_FTDC_FDEN_Out
SHFE_FTDC_FMDEN_In = _riskuserapi.SHFE_FTDC_FMDEN_In
SHFE_FTDC_FMDEN_Out = _riskuserapi.SHFE_FTDC_FMDEN_Out
SHFE_FTDC_CP_CallOptions = _riskuserapi.SHFE_FTDC_CP_CallOptions
SHFE_FTDC_CP_PutOptions = _riskuserapi.SHFE_FTDC_CP_PutOptions
SHFE_FTDC_STM_Continental = _riskuserapi.SHFE_FTDC_STM_Continental
SHFE_FTDC_STM_American = _riskuserapi.SHFE_FTDC_STM_American
SHFE_FTDC_STM_Bermuda = _riskuserapi.SHFE_FTDC_STM_Bermuda
SHFE_FTDC_STT_Hedge = _riskuserapi.SHFE_FTDC_STT_Hedge
SHFE_FTDC_STT_Match = _riskuserapi.SHFE_FTDC_STT_Match
SHFE_FTDC_APPT_NotStrikeNum = _riskuserapi.SHFE_FTDC_APPT_NotStrikeNum
SHFE_FTDC_GUDS_Gen = _riskuserapi.SHFE_FTDC_GUDS_Gen
SHFE_FTDC_GUDS_Hand = _riskuserapi.SHFE_FTDC_GUDS_Hand
SHFE_FTDC_OER_NoExec = _riskuserapi.SHFE_FTDC_OER_NoExec
SHFE_FTDC_OER_Canceled = _riskuserapi.SHFE_FTDC_OER_Canceled
SHFE_FTDC_OER_OK = _riskuserapi.SHFE_FTDC_OER_OK
SHFE_FTDC_OER_NoPosition = _riskuserapi.SHFE_FTDC_OER_NoPosition
SHFE_FTDC_OER_NoDeposit = _riskuserapi.SHFE_FTDC_OER_NoDeposit
SHFE_FTDC_OER_NoParticipant = _riskuserapi.SHFE_FTDC_OER_NoParticipant
SHFE_FTDC_OER_NoClient = _riskuserapi.SHFE_FTDC_OER_NoClient
SHFE_FTDC_OER_NoInstrument = _riskuserapi.SHFE_FTDC_OER_NoInstrument
SHFE_FTDC_OER_NoRight = _riskuserapi.SHFE_FTDC_OER_NoRight
SHFE_FTDC_OER_InvalidVolume = _riskuserapi.SHFE_FTDC_OER_InvalidVolume
SHFE_FTDC_OER_NoEnoughHistoryTrade = _riskuserapi.SHFE_FTDC_OER_NoEnoughHistoryTrade
SHFE_FTDC_OER_Unknown = _riskuserapi.SHFE_FTDC_OER_Unknown
SHFE_FTDC_COMBT_Future = _riskuserapi.SHFE_FTDC_COMBT_Future
SHFE_FTDC_COMBT_BUL = _riskuserapi.SHFE_FTDC_COMBT_BUL
SHFE_FTDC_COMBT_BER = _riskuserapi.SHFE_FTDC_COMBT_BER
SHFE_FTDC_COMBT_STD = _riskuserapi.SHFE_FTDC_COMBT_STD
SHFE_FTDC_COMBT_STG = _riskuserapi.SHFE_FTDC_COMBT_STG
SHFE_FTDC_COMBT_PRT = _riskuserapi.SHFE_FTDC_COMBT_PRT
SHFE_FTDC_COMBT_CAS = _riskuserapi.SHFE_FTDC_COMBT_CAS
SHFE_FTDC_COMBT_OPL = _riskuserapi.SHFE_FTDC_COMBT_OPL
SHFE_FTDC_COMBT_BFO = _riskuserapi.SHFE_FTDC_COMBT_BFO
SHFE_FTDC_COMBT_BLS = _riskuserapi.SHFE_FTDC_COMBT_BLS
SHFE_FTDC_COMBT_BES = _riskuserapi.SHFE_FTDC_COMBT_BES
SHFE_FTDC_DCECOMBT_SPL = _riskuserapi.SHFE_FTDC_DCECOMBT_SPL
SHFE_FTDC_DCECOMBT_OPL = _riskuserapi.SHFE_FTDC_DCECOMBT_OPL
SHFE_FTDC_DCECOMBT_SP = _riskuserapi.SHFE_FTDC_DCECOMBT_SP
SHFE_FTDC_DCECOMBT_SPC = _riskuserapi.SHFE_FTDC_DCECOMBT_SPC
SHFE_FTDC_DCECOMBT_BLS = _riskuserapi.SHFE_FTDC_DCECOMBT_BLS
SHFE_FTDC_DCECOMBT_BES = _riskuserapi.SHFE_FTDC_DCECOMBT_BES
SHFE_FTDC_DCECOMBT_CAS = _riskuserapi.SHFE_FTDC_DCECOMBT_CAS
SHFE_FTDC_DCECOMBT_STD = _riskuserapi.SHFE_FTDC_DCECOMBT_STD
SHFE_FTDC_DCECOMBT_STG = _riskuserapi.SHFE_FTDC_DCECOMBT_STG
SHFE_FTDC_DCECOMBT_BFO = _riskuserapi.SHFE_FTDC_DCECOMBT_BFO
SHFE_FTDC_DCECOMBT_SFO = _riskuserapi.SHFE_FTDC_DCECOMBT_SFO
SHFE_FTDC_ORPT_PreSettlementPrice = _riskuserapi.SHFE_FTDC_ORPT_PreSettlementPrice
SHFE_FTDC_ORPT_OpenPrice = _riskuserapi.SHFE_FTDC_ORPT_OpenPrice
SHFE_FTDC_ORPT_MaxPreSettlementPrice = _riskuserapi.SHFE_FTDC_ORPT_MaxPreSettlementPrice
SHFE_FTDC_BLAG_Default = _riskuserapi.SHFE_FTDC_BLAG_Default
SHFE_FTDC_BLAG_IncludeOptValLost = _riskuserapi.SHFE_FTDC_BLAG_IncludeOptValLost
SHFE_FTDC_ACTP_Exec = _riskuserapi.SHFE_FTDC_ACTP_Exec
SHFE_FTDC_ACTP_Abandon = _riskuserapi.SHFE_FTDC_ACTP_Abandon
SHFE_FTDC_FQST_Submitted = _riskuserapi.SHFE_FTDC_FQST_Submitted
SHFE_FTDC_FQST_Accepted = _riskuserapi.SHFE_FTDC_FQST_Accepted
SHFE_FTDC_FQST_Rejected = _riskuserapi.SHFE_FTDC_FQST_Rejected
SHFE_FTDC_VM_Absolute = _riskuserapi.SHFE_FTDC_VM_Absolute
SHFE_FTDC_VM_Ratio = _riskuserapi.SHFE_FTDC_VM_Ratio
SHFE_FTDC_EOPF_Reserve = _riskuserapi.SHFE_FTDC_EOPF_Reserve
SHFE_FTDC_EOPF_UnReserve = _riskuserapi.SHFE_FTDC_EOPF_UnReserve
SHFE_FTDC_EOCF_AutoClose = _riskuserapi.SHFE_FTDC_EOCF_AutoClose
SHFE_FTDC_EOCF_NotToClose = _riskuserapi.SHFE_FTDC_EOCF_NotToClose
SHFE_FTDC_PTE_Futures = _riskuserapi.SHFE_FTDC_PTE_Futures
SHFE_FTDC_PTE_Options = _riskuserapi.SHFE_FTDC_PTE_Options
SHFE_FTDC_CUFN_CUFN_O = _riskuserapi.SHFE_FTDC_CUFN_CUFN_O
SHFE_FTDC_CUFN_CUFN_T = _riskuserapi.SHFE_FTDC_CUFN_CUFN_T
SHFE_FTDC_CUFN_CUFN_P = _riskuserapi.SHFE_FTDC_CUFN_CUFN_P
SHFE_FTDC_CUFN_CUFN_N = _riskuserapi.SHFE_FTDC_CUFN_CUFN_N
SHFE_FTDC_CUFN_CUFN_L = _riskuserapi.SHFE_FTDC_CUFN_CUFN_L
SHFE_FTDC_CUFN_CUFN_F = _riskuserapi.SHFE_FTDC_CUFN_CUFN_F
SHFE_FTDC_CUFN_CUFN_C = _riskuserapi.SHFE_FTDC_CUFN_CUFN_C
SHFE_FTDC_CUFN_CUFN_M = _riskuserapi.SHFE_FTDC_CUFN_CUFN_M
SHFE_FTDC_DUFN_DUFN_O = _riskuserapi.SHFE_FTDC_DUFN_DUFN_O
SHFE_FTDC_DUFN_DUFN_T = _riskuserapi.SHFE_FTDC_DUFN_DUFN_T
SHFE_FTDC_DUFN_DUFN_P = _riskuserapi.SHFE_FTDC_DUFN_DUFN_P
SHFE_FTDC_DUFN_DUFN_F = _riskuserapi.SHFE_FTDC_DUFN_DUFN_F
SHFE_FTDC_DUFN_DUFN_C = _riskuserapi.SHFE_FTDC_DUFN_DUFN_C
SHFE_FTDC_DUFN_DUFN_D = _riskuserapi.SHFE_FTDC_DUFN_DUFN_D
SHFE_FTDC_DUFN_DUFN_M = _riskuserapi.SHFE_FTDC_DUFN_DUFN_M
SHFE_FTDC_DUFN_DUFN_S = _riskuserapi.SHFE_FTDC_DUFN_DUFN_S
SHFE_FTDC_SUFN_SUFN_O = _riskuserapi.SHFE_FTDC_SUFN_SUFN_O
SHFE_FTDC_SUFN_SUFN_T = _riskuserapi.SHFE_FTDC_SUFN_SUFN_T
SHFE_FTDC_SUFN_SUFN_P = _riskuserapi.SHFE_FTDC_SUFN_SUFN_P
SHFE_FTDC_SUFN_SUFN_F = _riskuserapi.SHFE_FTDC_SUFN_SUFN_F
SHFE_FTDC_CFUFN_SUFN_T = _riskuserapi.SHFE_FTDC_CFUFN_SUFN_T
SHFE_FTDC_CFUFN_SUFN_P = _riskuserapi.SHFE_FTDC_CFUFN_SUFN_P
SHFE_FTDC_CFUFN_SUFN_F = _riskuserapi.SHFE_FTDC_CFUFN_SUFN_F
SHFE_FTDC_CFUFN_SUFN_S = _riskuserapi.SHFE_FTDC_CFUFN_SUFN_S
SHFE_FTDC_CMDR_Comb = _riskuserapi.SHFE_FTDC_CMDR_Comb
SHFE_FTDC_CMDR_UnComb = _riskuserapi.SHFE_FTDC_CMDR_UnComb
SHFE_FTDC_CMDR_DelComb = _riskuserapi.SHFE_FTDC_CMDR_DelComb
SHFE_FTDC_STOV_RealValue = _riskuserapi.SHFE_FTDC_STOV_RealValue
SHFE_FTDC_STOV_ProfitValue = _riskuserapi.SHFE_FTDC_STOV_ProfitValue
SHFE_FTDC_STOV_RealRatio = _riskuserapi.SHFE_FTDC_STOV_RealRatio
SHFE_FTDC_STOV_ProfitRatio = _riskuserapi.SHFE_FTDC_STOV_ProfitRatio
SHFE_FTDC_ROAST_Processing = _riskuserapi.SHFE_FTDC_ROAST_Processing
SHFE_FTDC_ROAST_Cancelled = _riskuserapi.SHFE_FTDC_ROAST_Cancelled
SHFE_FTDC_ROAST_Opened = _riskuserapi.SHFE_FTDC_ROAST_Opened
SHFE_FTDC_ROAST_Invalid = _riskuserapi.SHFE_FTDC_ROAST_Invalid
SHFE_FTDC_WPSR_Lib = _riskuserapi.SHFE_FTDC_WPSR_Lib
SHFE_FTDC_WPSR_Manual = _riskuserapi.SHFE_FTDC_WPSR_Manual
SHFE_FTDC_OSCF_CloseSelfOptionPosition = _riskuserapi.SHFE_FTDC_OSCF_CloseSelfOptionPosition
SHFE_FTDC_OSCF_ReserveOptionPosition = _riskuserapi.SHFE_FTDC_OSCF_ReserveOptionPosition
SHFE_FTDC_OSCF_SellCloseSelfFuturePosition = _riskuserapi.SHFE_FTDC_OSCF_SellCloseSelfFuturePosition
SHFE_FTDC_OSCF_ReserveFuturePosition = _riskuserapi.SHFE_FTDC_OSCF_ReserveFuturePosition
SHFE_FTDC_BZTP_Future = _riskuserapi.SHFE_FTDC_BZTP_Future
SHFE_FTDC_BZTP_Stock = _riskuserapi.SHFE_FTDC_BZTP_Stock
SHFE_FTDC_APP_TYPE_Investor = _riskuserapi.SHFE_FTDC_APP_TYPE_Investor
SHFE_FTDC_APP_TYPE_InvestorRelay = _riskuserapi.SHFE_FTDC_APP_TYPE_InvestorRelay
SHFE_FTDC_APP_TYPE_OperatorRelay = _riskuserapi.SHFE_FTDC_APP_TYPE_OperatorRelay
SHFE_FTDC_APP_TYPE_UnKnown = _riskuserapi.SHFE_FTDC_APP_TYPE_UnKnown
SHFE_FTDC_RV_Right = _riskuserapi.SHFE_FTDC_RV_Right
SHFE_FTDC_RV_Refuse = _riskuserapi.SHFE_FTDC_RV_Refuse
SHFE_FTDC_OTC_TRDT_Block = _riskuserapi.SHFE_FTDC_OTC_TRDT_Block
SHFE_FTDC_OTC_TRDT_EFP = _riskuserapi.SHFE_FTDC_OTC_TRDT_EFP
SHFE_FTDC_OTC_MT_DV01 = _riskuserapi.SHFE_FTDC_OTC_MT_DV01
SHFE_FTDC_OTC_MT_ParValue = _riskuserapi.SHFE_FTDC_OTC_MT_ParValue
SHFE_FTDC_AU_WHITE = _riskuserapi.SHFE_FTDC_AU_WHITE
SHFE_FTDC_AU_BLACK = _riskuserapi.SHFE_FTDC_AU_BLACK
SHFE_FTDC_INS_ALL = _riskuserapi.SHFE_FTDC_INS_ALL
SHFE_FTDC_INS_FUTURE = _riskuserapi.SHFE_FTDC_INS_FUTURE
SHFE_FTDC_INS_OPTION = _riskuserapi.SHFE_FTDC_INS_OPTION
SHFE_FTDC_INS_COMB = _riskuserapi.SHFE_FTDC_INS_COMB
SHFE_FTDC_TD_ALL = _riskuserapi.SHFE_FTDC_TD_ALL
SHFE_FTDC_TD_TRADE = _riskuserapi.SHFE_FTDC_TD_TRADE
SHFE_FTDC_TD_UNTRADE = _riskuserapi.SHFE_FTDC_TD_UNTRADE
SHFE_FTDC_PS_tradeable = _riskuserapi.SHFE_FTDC_PS_tradeable
SHFE_FTDC_PS_untradeable = _riskuserapi.SHFE_FTDC_PS_untradeable
SHFE_FTDC_SDS_Readable = _riskuserapi.SHFE_FTDC_SDS_Readable
SHFE_FTDC_SDS_Reading = _riskuserapi.SHFE_FTDC_SDS_Reading
SHFE_FTDC_SDS_Readend = _riskuserapi.SHFE_FTDC_SDS_Readend
SHFE_FTDC_SDS_OptErr = _riskuserapi.SHFE_FTDC_SDS_OptErr
SHFE_FTDC_ACD_Add = _riskuserapi.SHFE_FTDC_ACD_Add
SHFE_FTDC_ACD_Del = _riskuserapi.SHFE_FTDC_ACD_Del
SHFE_FTDC_ACD_Upd = _riskuserapi.SHFE_FTDC_ACD_Upd
SHFE_FTDC_OAC_Balance = _riskuserapi.SHFE_FTDC_OAC_Balance
SHFE_FTDC_OAC_OrigFirst = _riskuserapi.SHFE_FTDC_OAC_OrigFirst
SHFE_FTDC_PLCL_None = _riskuserapi.SHFE_FTDC_PLCL_None
SHFE_FTDC_PLCL_Product = _riskuserapi.SHFE_FTDC_PLCL_Product
SHFE_FTDC_PLCL_Inst = _riskuserapi.SHFE_FTDC_PLCL_Inst
SHFE_FTDC_OFCL_None = _riskuserapi.SHFE_FTDC_OFCL_None
SHFE_FTDC_OFCL_Product = _riskuserapi.SHFE_FTDC_OFCL_Product
SHFE_FTDC_OFCL_Inst = _riskuserapi.SHFE_FTDC_OFCL_Inst
SHFE_FTDC_EBL_False = _riskuserapi.SHFE_FTDC_EBL_False
SHFE_FTDC_EBL_True = _riskuserapi.SHFE_FTDC_EBL_True
SHFE_FTDC_ETR_USUAL = _riskuserapi.SHFE_FTDC_ETR_USUAL
SHFE_FTDC_ETR_FNSP = _riskuserapi.SHFE_FTDC_ETR_FNSP
SHFE_FTDC_ETR_BNSP = _riskuserapi.SHFE_FTDC_ETR_BNSP
SHFE_FTDC_ETR_SPOT = _riskuserapi.SHFE_FTDC_ETR_SPOT
SHFE_FTDC_EPF_None = _riskuserapi.SHFE_FTDC_EPF_None
SHFE_FTDC_EPF_SPBM = _riskuserapi.SHFE_FTDC_EPF_SPBM
SHFE_FTDC_EPF_RULE = _riskuserapi.SHFE_FTDC_EPF_RULE
SHFE_FTDC_EPF_SPMM = _riskuserapi.SHFE_FTDC_EPF_SPMM
SHFE_FTDC_EPF_RCAMS = _riskuserapi.SHFE_FTDC_EPF_RCAMS
SHFE_FTDC_WDPID_CashIn = _riskuserapi.SHFE_FTDC_WDPID_CashIn
SHFE_FTDC_ITR_CloseOnly = _riskuserapi.SHFE_FTDC_ITR_CloseOnly
SHFE_FTDC_ITR_Forbidden = _riskuserapi.SHFE_FTDC_ITR_Forbidden
SHFE_FTDC_IMID_BothSide = _riskuserapi.SHFE_FTDC_IMID_BothSide
SHFE_FTDC_IMID_MMSA = _riskuserapi.SHFE_FTDC_IMID_MMSA
SHFE_FTDC_IMID_SPMM = _riskuserapi.SHFE_FTDC_IMID_SPMM
SHFE_FTDC_ERComb_BUC = _riskuserapi.SHFE_FTDC_ERComb_BUC
SHFE_FTDC_ERComb_BEC = _riskuserapi.SHFE_FTDC_ERComb_BEC
SHFE_FTDC_ERComb_BEP = _riskuserapi.SHFE_FTDC_ERComb_BEP
SHFE_FTDC_ERComb_BUP = _riskuserapi.SHFE_FTDC_ERComb_BUP
SHFE_FTDC_ERComb_CAS = _riskuserapi.SHFE_FTDC_ERComb_CAS
SHFE_FTDC_EET_None = _riskuserapi.SHFE_FTDC_EET_None
SHFE_FTDC_EET_SPBM_AddOnHedge = _riskuserapi.SHFE_FTDC_EET_SPBM_AddOnHedge
SHFE_FTDC_EIC_Usual = _riskuserapi.SHFE_FTDC_EIC_Usual
SHFE_FTDC_EIC_Delivery = _riskuserapi.SHFE_FTDC_EIC_Delivery
SHFE_FTDC_EIC_NonComb = _riskuserapi.SHFE_FTDC_EIC_NonComb
SHFE_FTDC_PCF_None = _riskuserapi.SHFE_FTDC_PCF_None
SHFE_FTDC_PCF_OnlyFrozen = _riskuserapi.SHFE_FTDC_PCF_OnlyFrozen
SHFE_FTDC_PCF_PositionChange = _riskuserapi.SHFE_FTDC_PCF_PositionChange
SHFE_FTDC_PRS_Init = _riskuserapi.SHFE_FTDC_PRS_Init
SHFE_FTDC_PRS_Sync = _riskuserapi.SHFE_FTDC_PRS_Sync
SHFE_FTDC_PRS_UserUpd = _riskuserapi.SHFE_FTDC_PRS_UserUpd
SHFE_FTDC_PRS_SuperUserUpd = _riskuserapi.SHFE_FTDC_PRS_SuperUserUpd
SHFE_FTDC_PRS_SecUpd = _riskuserapi.SHFE_FTDC_PRS_SecUpd
SHFE_FTDC_ASM_Trade = _riskuserapi.SHFE_FTDC_ASM_Trade
SHFE_FTDC_ASM_MarketData = _riskuserapi.SHFE_FTDC_ASM_MarketData
SHFE_FTDC_ASM_Other = _riskuserapi.SHFE_FTDC_ASM_Other
SHFE_FTDC_ADV_V4 = _riskuserapi.SHFE_FTDC_ADV_V4
SHFE_FTDC_ADV_V6 = _riskuserapi.SHFE_FTDC_ADV_V6
SHFE_FTDC_TGQS_QryIdle = _riskuserapi.SHFE_FTDC_TGQS_QryIdle
SHFE_FTDC_TGQS_QryBusy = _riskuserapi.SHFE_FTDC_TGQS_QryBusy
SHFE_FTDC_ACTST_NA = _riskuserapi.SHFE_FTDC_ACTST_NA
SHFE_FTDC_ACTST_Balance = _riskuserapi.SHFE_FTDC_ACTST_Balance
SHFE_FTDC_ACTST_Available = _riskuserapi.SHFE_FTDC_ACTST_Available
SHFE_FTDC_ACTST_CurrMargin = _riskuserapi.SHFE_FTDC_ACTST_CurrMargin
SHFE_FTDC_ACTST_Risk = _riskuserapi.SHFE_FTDC_ACTST_Risk
SHFE_FTDC_PSTST_NA = _riskuserapi.SHFE_FTDC_PSTST_NA
SHFE_FTDC_PSTST_TotolPosition = _riskuserapi.SHFE_FTDC_PSTST_TotolPosition
SHFE_FTDC_PSTST_LongPosition = _riskuserapi.SHFE_FTDC_PSTST_LongPosition
SHFE_FTDC_PSTST_ShortPosition = _riskuserapi.SHFE_FTDC_PSTST_ShortPosition
SHFE_FTDC_PSTST_NetPosition = _riskuserapi.SHFE_FTDC_PSTST_NetPosition
SHFE_FTDC_TRDST_NA = _riskuserapi.SHFE_FTDC_TRDST_NA
SHFE_FTDC_TRDST_TotolTradeVolume = _riskuserapi.SHFE_FTDC_TRDST_TotolTradeVolume
SHFE_FTDC_TRDST_TotolTrade = _riskuserapi.SHFE_FTDC_TRDST_TotolTrade
SHFE_FTDC_TRDST_LongPositionTrade = _riskuserapi.SHFE_FTDC_TRDST_LongPositionTrade
SHFE_FTDC_TRDST_ShortPositionTrade = _riskuserapi.SHFE_FTDC_TRDST_ShortPositionTrade
SHFE_FTDC_TRDST_NetPositionTrade = _riskuserapi.SHFE_FTDC_TRDST_NetPositionTrade
SHFE_FTDC_SST_NA = _riskuserapi.SHFE_FTDC_SST_NA
SHFE_FTDC_SST_TotolVolume = _riskuserapi.SHFE_FTDC_SST_TotolVolume
SHFE_FTDC_SST_TotolAmount = _riskuserapi.SHFE_FTDC_SST_TotolAmount
SHFE_FTDC_SST_LongVolume = _riskuserapi.SHFE_FTDC_SST_LongVolume
SHFE_FTDC_SST_ShortVolume = _riskuserapi.SHFE_FTDC_SST_ShortVolume
SHFE_FTDC_SST_NetVolume = _riskuserapi.SHFE_FTDC_SST_NetVolume
SHFE_FTDC_VMD_None = _riskuserapi.SHFE_FTDC_VMD_None
SHFE_FTDC_VMD_Percentage = _riskuserapi.SHFE_FTDC_VMD_Percentage
SHFE_FTDC_VMD_Absolute = _riskuserapi.SHFE_FTDC_VMD_Absolute
SHFE_FTDC_STPT_CustomPrice = _riskuserapi.SHFE_FTDC_STPT_CustomPrice
SHFE_FTDC_STPT_LatestPrice = _riskuserapi.SHFE_FTDC_STPT_LatestPrice
SHFE_FTDC_STPT_AveragePrice = _riskuserapi.SHFE_FTDC_STPT_AveragePrice
SHFE_FTDC_STPT_UpperLimitPrice = _riskuserapi.SHFE_FTDC_STPT_UpperLimitPrice
SHFE_FTDC_STPT_LowerLimitPrice = _riskuserapi.SHFE_FTDC_STPT_LowerLimitPrice
SHFE_FTDC_NT_Trading = _riskuserapi.SHFE_FTDC_NT_Trading
SHFE_FTDC_NT_Closed = _riskuserapi.SHFE_FTDC_NT_Closed
SHFE_FTDC_SD_Upper = _riskuserapi.SHFE_FTDC_SD_Upper
SHFE_FTDC_SD_Lower = _riskuserapi.SHFE_FTDC_SD_Lower
SHFE_FTDC_FCL_BrokerLevel = _riskuserapi.SHFE_FTDC_FCL_BrokerLevel
SHFE_FTDC_FCL_ExchangeLevel = _riskuserapi.SHFE_FTDC_FCL_ExchangeLevel
SHFE_FTDC_FCR_RealTime = _riskuserapi.SHFE_FTDC_FCR_RealTime
SHFE_FTDC_FCR_LastSettlement = _riskuserapi.SHFE_FTDC_FCR_LastSettlement
SHFE_FTDC_FCR_StressTest = _riskuserapi.SHFE_FTDC_FCR_StressTest
SHFE_FTDC_FCRPI_Direction = _riskuserapi.SHFE_FTDC_FCRPI_Direction
SHFE_FTDC_FCRPI_HedgeFlag = _riskuserapi.SHFE_FTDC_FCRPI_HedgeFlag
SHFE_FTDC_FCRPI_PosiDate = _riskuserapi.SHFE_FTDC_FCRPI_PosiDate
SHFE_FTDC_FCPD_NA = _riskuserapi.SHFE_FTDC_FCPD_NA
SHFE_FTDC_FCPD_LongShort = _riskuserapi.SHFE_FTDC_FCPD_LongShort
SHFE_FTDC_FCPD_ShortLong = _riskuserapi.SHFE_FTDC_FCPD_ShortLong
SHFE_FTDC_FCPD_Long = _riskuserapi.SHFE_FTDC_FCPD_Long
SHFE_FTDC_FCPD_Short = _riskuserapi.SHFE_FTDC_FCPD_Short
SHFE_FTDC_FCPD_LargeMargin = _riskuserapi.SHFE_FTDC_FCPD_LargeMargin
SHFE_FTDC_FCPD_SmallMargin = _riskuserapi.SHFE_FTDC_FCPD_SmallMargin
SHFE_FTDC_FCHF_NA = _riskuserapi.SHFE_FTDC_FCHF_NA
SHFE_FTDC_FCHF_SpeculationHedge = _riskuserapi.SHFE_FTDC_FCHF_SpeculationHedge
SHFE_FTDC_FCHF_Speculation = _riskuserapi.SHFE_FTDC_FCHF_Speculation
SHFE_FTDC_FCCPF_NA = _riskuserapi.SHFE_FTDC_FCCPF_NA
SHFE_FTDC_FCCPF_ExcludeComb = _riskuserapi.SHFE_FTDC_FCCPF_ExcludeComb
SHFE_FTDC_FCCPF_IncludeComb = _riskuserapi.SHFE_FTDC_FCCPF_IncludeComb
SHFE_FTDC_FCHPO_NA = _riskuserapi.SHFE_FTDC_FCHPO_NA
SHFE_FTDC_FCHPO_HistoryFirst = _riskuserapi.SHFE_FTDC_FCHPO_HistoryFirst
SHFE_FTDC_FCHPO_TodayFirst = _riskuserapi.SHFE_FTDC_FCHPO_TodayFirst
SHFE_FTDC_FCPT_StopPrice = _riskuserapi.SHFE_FTDC_FCPT_StopPrice
SHFE_FTDC_FCPT_LimitPrice = _riskuserapi.SHFE_FTDC_FCPT_LimitPrice
SHFE_FTDC_FCPT_MarketFirst = _riskuserapi.SHFE_FTDC_FCPT_MarketFirst
SHFE_FTDC_FCPT_ReverseBandingPrice = _riskuserapi.SHFE_FTDC_FCPT_ReverseBandingPrice
SHFE_FTDC_PVD_Up = _riskuserapi.SHFE_FTDC_PVD_Up
SHFE_FTDC_PVD_Down = _riskuserapi.SHFE_FTDC_PVD_Down
SHFE_FTDC_PVD_None = _riskuserapi.SHFE_FTDC_PVD_None
SHFE_FTDC_PVA_Equal = _riskuserapi.SHFE_FTDC_PVA_Equal
SHFE_FTDC_PVA_Sequence = _riskuserapi.SHFE_FTDC_PVA_Sequence
SHFE_FTDC_BPT_LastSettlement = _riskuserapi.SHFE_FTDC_BPT_LastSettlement
SHFE_FTDC_BPT_LaseClose = _riskuserapi.SHFE_FTDC_BPT_LaseClose
SHFE_FTDC_BPT_Settlement = _riskuserapi.SHFE_FTDC_BPT_Settlement
SHFE_FTDC_BPT_Average = _riskuserapi.SHFE_FTDC_BPT_Average
SHFE_FTDC_BPT_Open = _riskuserapi.SHFE_FTDC_BPT_Open
SHFE_FTDC_BPT_Latest = _riskuserapi.SHFE_FTDC_BPT_Latest
SHFE_FTDC_BPT_UpperLimit = _riskuserapi.SHFE_FTDC_BPT_UpperLimit
SHFE_FTDC_BPT_LowerLimit = _riskuserapi.SHFE_FTDC_BPT_LowerLimit
SHFE_FTDC_BPT_Customize = _riskuserapi.SHFE_FTDC_BPT_Customize
SHFE_FTDC_BPT_SimSettlement = _riskuserapi.SHFE_FTDC_BPT_SimSettlement
SHFE_FTDC_OTT_Customize = _riskuserapi.SHFE_FTDC_OTT_Customize
SHFE_FTDC_OTT_TradeSegment = _riskuserapi.SHFE_FTDC_OTT_TradeSegment
SHFE_FTDC_RUT_SuperUser = _riskuserapi.SHFE_FTDC_RUT_SuperUser
SHFE_FTDC_RPOS_NotSend = _riskuserapi.SHFE_FTDC_RPOS_NotSend
SHFE_FTDC_RPOS_Send = _riskuserapi.SHFE_FTDC_RPOS_Send
SHFE_FTDC_RPOS_Deleted = _riskuserapi.SHFE_FTDC_RPOS_Deleted
SHFE_FTDC_RFT_NA = _riskuserapi.SHFE_FTDC_RFT_NA
SHFE_FTDC_RFT_Riskfront = _riskuserapi.SHFE_FTDC_RFT_Riskfront
SHFE_FTDC_RFT_Riskmonfnt = _riskuserapi.SHFE_FTDC_RFT_Riskmonfnt
SHFE_FTDC_RFT_Localfront = _riskuserapi.SHFE_FTDC_RFT_Localfront
SHFE_FTDC_SCT_RiskNotify = _riskuserapi.SHFE_FTDC_SCT_RiskNotify
SHFE_FTDC_SCT_BizNotify = _riskuserapi.SHFE_FTDC_SCT_BizNotify
SHFE_FTDC_RDCT_LOCK = _riskuserapi.SHFE_FTDC_RDCT_LOCK
SHFE_FTDC_RDCT_SP = _riskuserapi.SHFE_FTDC_RDCT_SP
SHFE_FTDC_RDCT_SPC = _riskuserapi.SHFE_FTDC_RDCT_SPC
SHFE_FTDC_DNT_NA = _riskuserapi.SHFE_FTDC_DNT_NA
SHFE_FTDC_DNT_InstAdj = _riskuserapi.SHFE_FTDC_DNT_InstAdj
SHFE_FTDC_DNT_InstExpire = _riskuserapi.SHFE_FTDC_DNT_InstExpire
SHFE_FTDC_DNT_ExecAssigned = _riskuserapi.SHFE_FTDC_DNT_ExecAssigned
SHFE_FTDC_DNT_CoveredComple = _riskuserapi.SHFE_FTDC_DNT_CoveredComple
SHFE_FTDC_RLST_ByUser = _riskuserapi.SHFE_FTDC_RLST_ByUser
SHFE_FTDC_RLST_ByAddress = _riskuserapi.SHFE_FTDC_RLST_ByAddress
SHFE_FTDC_RIT_LastTradingDay = _riskuserapi.SHFE_FTDC_RIT_LastTradingDay
SHFE_FTDC_RIT_MarginDiscountCancel = _riskuserapi.SHFE_FTDC_RIT_MarginDiscountCancel
SHFE_FTDC_RIT_PersonLimitPositionAdjust = _riskuserapi.SHFE_FTDC_RIT_PersonLimitPositionAdjust
SHFE_FTDC_RIT_MarginRateAdjust = _riskuserapi.SHFE_FTDC_RIT_MarginRateAdjust
SHFE_FTDC_RIT_AtDelivery = _riskuserapi.SHFE_FTDC_RIT_AtDelivery
SHFE_FTDC_RIT_RoundLotPosition = _riskuserapi.SHFE_FTDC_RIT_RoundLotPosition
SHFE_FTDC_RIT_LimitPositionSpeculation = _riskuserapi.SHFE_FTDC_RIT_LimitPositionSpeculation
SHFE_FTDC_RIT_LimitPositionArbitrage = _riskuserapi.SHFE_FTDC_RIT_LimitPositionArbitrage
SHFE_FTDC_RIT_LimitPositionHedge = _riskuserapi.SHFE_FTDC_RIT_LimitPositionHedge
SHFE_FTDC_RIT_LimitPositionSA = _riskuserapi.SHFE_FTDC_RIT_LimitPositionSA
SHFE_FTDC_IDATE_Today = _riskuserapi.SHFE_FTDC_IDATE_Today
SHFE_FTDC_IDATE_TPlus1 = _riskuserapi.SHFE_FTDC_IDATE_TPlus1
SHFE_FTDC_COOF_AllOffset = _riskuserapi.SHFE_FTDC_COOF_AllOffset
SHFE_FTDC_COOF_ExpireOffset = _riskuserapi.SHFE_FTDC_COOF_ExpireOffset
SHFE_FTDC_COOF_NonExpireOffset = _riskuserapi.SHFE_FTDC_COOF_NonExpireOffset
SHFE_FTDC_COOF_NoOffset = _riskuserapi.SHFE_FTDC_COOF_NoOffset
SHFE_FTDC_FCM_Default = _riskuserapi.SHFE_FTDC_FCM_Default
SHFE_FTDC_FCM_Scheme = _riskuserapi.SHFE_FTDC_FCM_Scheme
SHFE_FTDC_FCM_IndexNPP = _riskuserapi.SHFE_FTDC_FCM_IndexNPP
SHFE_FTDC_FCM_IndexNPP1 = _riskuserapi.SHFE_FTDC_FCM_IndexNPP1
SHFE_FTDC_FCP_ALL = _riskuserapi.SHFE_FTDC_FCP_ALL
SHFE_FTDC_FCP_FUTURE = _riskuserapi.SHFE_FTDC_FCP_FUTURE
SHFE_FTDC_FCP_OPTION = _riskuserapi.SHFE_FTDC_FCP_OPTION
SHFE_FTDC_MONI_MONOR = _riskuserapi.SHFE_FTDC_MONI_MONOR
SHFE_FTDC_MONI_MM = _riskuserapi.SHFE_FTDC_MONI_MM
SHFE_FTDC_MONI_SEC = _riskuserapi.SHFE_FTDC_MONI_SEC
SHFE_FTDC_MONI_INVESTOR = _riskuserapi.SHFE_FTDC_MONI_INVESTOR
SHFE_FTDC_MONI_CONTROLGROUP = _riskuserapi.SHFE_FTDC_MONI_CONTROLGROUP
SHFE_FTDC_MONI_ALL_INS_TYPE = _riskuserapi.SHFE_FTDC_MONI_ALL_INS_TYPE
SHFE_FTDC_MONI_EXCHANGE = _riskuserapi.SHFE_FTDC_MONI_EXCHANGE
SHFE_FTDC_MONI_PRODUCT = _riskuserapi.SHFE_FTDC_MONI_PRODUCT
SHFE_FTDC_MONI_INSTRUMENT = _riskuserapi.SHFE_FTDC_MONI_INSTRUMENT
SHFE_FTDC_MONI_OPTION_UD = _riskuserapi.SHFE_FTDC_MONI_OPTION_UD
SHFE_FTDC_MONI_POSITION = _riskuserapi.SHFE_FTDC_MONI_POSITION
SHFE_FTDC_MONI_TRADE = _riskuserapi.SHFE_FTDC_MONI_TRADE
SHFE_FTDC_MONI_SELFTRADE = _riskuserapi.SHFE_FTDC_MONI_SELFTRADE
SHFE_FTDC_MONI_ORDER = _riskuserapi.SHFE_FTDC_MONI_ORDER
SHFE_FTDC_MONI_BALANCE = _riskuserapi.SHFE_FTDC_MONI_BALANCE
SHFE_FTDC_MONI_MARKET = _riskuserapi.SHFE_FTDC_MONI_MARKET
SHFE_FTDC_MONI_DEPOSIT = _riskuserapi.SHFE_FTDC_MONI_DEPOSIT
SHFE_FTDC_MONI_BIGORDER = _riskuserapi.SHFE_FTDC_MONI_BIGORDER
SHFE_FTDC_MONI_FREORDER = _riskuserapi.SHFE_FTDC_MONI_FREORDER
SHFE_FTDC_MONI_OVERTRADE = _riskuserapi.SHFE_FTDC_MONI_OVERTRADE
SHFE_FTDC_MONI_GROUPTRADE = _riskuserapi.SHFE_FTDC_MONI_GROUPTRADE
SHFE_FTDC_MONI_LOWUPORDER = _riskuserapi.SHFE_FTDC_MONI_LOWUPORDER
SHFE_FTDC_MONI_FORCECLOSE = _riskuserapi.SHFE_FTDC_MONI_FORCECLOSE
SHFE_FTDC_MONI_REJECTORDER = _riskuserapi.SHFE_FTDC_MONI_REJECTORDER
SHFE_FTDC_MONI_BROKERDEPOSIT = _riskuserapi.SHFE_FTDC_MONI_BROKERDEPOSIT
SHFE_FTDC_MONI_RISKVALUE = _riskuserapi.SHFE_FTDC_MONI_RISKVALUE
SHFE_FTDC_MONI_OPTION_EXEC = _riskuserapi.SHFE_FTDC_MONI_OPTION_EXEC
SHFE_FTDC_MONI_OPTION_POSITION = _riskuserapi.SHFE_FTDC_MONI_OPTION_POSITION
SHFE_FTDC_MONI_INFOCOMM = _riskuserapi.SHFE_FTDC_MONI_INFOCOMM
SHFE_FTDC_MONI_MORTGAGE_IN = _riskuserapi.SHFE_FTDC_MONI_MORTGAGE_IN
SHFE_FTDC_MONI_MORTGAGE_OUT = _riskuserapi.SHFE_FTDC_MONI_MORTGAGE_OUT
SHFE_FTDC_MONI_MORTGAGE_RATIO = _riskuserapi.SHFE_FTDC_MONI_MORTGAGE_RATIO
SHFE_FTDC_MONI_INFOCOMM_COUNT = _riskuserapi.SHFE_FTDC_MONI_INFOCOMM_COUNT
SHFE_FTDC_MONI_GREEN = _riskuserapi.SHFE_FTDC_MONI_GREEN
SHFE_FTDC_MONI_YELLOW = _riskuserapi.SHFE_FTDC_MONI_YELLOW
SHFE_FTDC_MONI_ORANGE = _riskuserapi.SHFE_FTDC_MONI_ORANGE
SHFE_FTDC_MONI_RED = _riskuserapi.SHFE_FTDC_MONI_RED
SHFE_FTDC_MONIC_ADD = _riskuserapi.SHFE_FTDC_MONIC_ADD
SHFE_FTDC_MONIC_MOD = _riskuserapi.SHFE_FTDC_MONIC_MOD
SHFE_FTDC_MONIC_ADDORMOD = _riskuserapi.SHFE_FTDC_MONIC_ADDORMOD
SHFE_FTDC_MONIC_DEL = _riskuserapi.SHFE_FTDC_MONIC_DEL
SHFE_FTDC_MONIC_INIT = _riskuserapi.SHFE_FTDC_MONIC_INIT
SHFE_FTDC_MONIC_INS = _riskuserapi.SHFE_FTDC_MONIC_INS
SHFE_FTDC_MONIC_UND = _riskuserapi.SHFE_FTDC_MONIC_UND
SHFE_FTDC_MONIC_PRO = _riskuserapi.SHFE_FTDC_MONIC_PRO
SHFE_FTDC_MONIC_EX = _riskuserapi.SHFE_FTDC_MONIC_EX
SHFE_FTDC_MONIC_INS_UNI = _riskuserapi.SHFE_FTDC_MONIC_INS_UNI
SHFE_FTDC_DEV_NEW = _riskuserapi.SHFE_FTDC_DEV_NEW
SHFE_FTDC_DEV_UP = _riskuserapi.SHFE_FTDC_DEV_UP
SHFE_FTDC_DEV_DOWN = _riskuserapi.SHFE_FTDC_DEV_DOWN
SHFE_FTDC_EN_RISKENGINE = _riskuserapi.SHFE_FTDC_EN_RISKENGINE
SHFE_FTDC_EN_RISKANALYSIS = _riskuserapi.SHFE_FTDC_EN_RISKANALYSIS
SHFE_FTDC_FT_REWORK = _riskuserapi.SHFE_FTDC_FT_REWORK
SHFE_FTDC_FT_WORKING = _riskuserapi.SHFE_FTDC_FT_WORKING
SHFE_FTDC_FT_DOWN = _riskuserapi.SHFE_FTDC_FT_DOWN
SHFE_FTDC_WO_ORDER_TRADE = _riskuserapi.SHFE_FTDC_WO_ORDER_TRADE
SHFE_FTDC_WO_ORDER_CLOSE = _riskuserapi.SHFE_FTDC_WO_ORDER_CLOSE
SHFE_FTDC_WO_ORDER_OPEN = _riskuserapi.SHFE_FTDC_WO_ORDER_OPEN
SHFE_FTDC_WO_ORDER_ALL = _riskuserapi.SHFE_FTDC_WO_ORDER_ALL
SHFE_FTDC_WO_MARKET_UP = _riskuserapi.SHFE_FTDC_WO_MARKET_UP
SHFE_FTDC_WO_MARKET_LOW = _riskuserapi.SHFE_FTDC_WO_MARKET_LOW
SHFE_FTDC_WO_TRADE_OPEN = _riskuserapi.SHFE_FTDC_WO_TRADE_OPEN
SHFE_FTDC_WO_TRADE_OFFSET = _riskuserapi.SHFE_FTDC_WO_TRADE_OFFSET
SHFE_FTDC_WO_TRADE_OPENPENDING = _riskuserapi.SHFE_FTDC_WO_TRADE_OPENPENDING
SHFE_FTDC_WO_TRADE_ALL = _riskuserapi.SHFE_FTDC_WO_TRADE_ALL
SHFE_FTDC_WO_POSITION_LONG = _riskuserapi.SHFE_FTDC_WO_POSITION_LONG
SHFE_FTDC_WO_POSITION_SHORT = _riskuserapi.SHFE_FTDC_WO_POSITION_SHORT
SHFE_FTDC_WO_POSITION_ALL = _riskuserapi.SHFE_FTDC_WO_POSITION_ALL
SHFE_FTDC_WO_REJECT_AMNT = _riskuserapi.SHFE_FTDC_WO_REJECT_AMNT
SHFE_FTDC_WO_REJECT_FREQ = _riskuserapi.SHFE_FTDC_WO_REJECT_FREQ
SHFE_FTDC_WO_DEPOSIT_N = _riskuserapi.SHFE_FTDC_WO_DEPOSIT_N
SHFE_FTDC_WO_WITHDRAW_N = _riskuserapi.SHFE_FTDC_WO_WITHDRAW_N
SHFE_FTDC_WO_DEPOSIT = _riskuserapi.SHFE_FTDC_WO_DEPOSIT
SHFE_FTDC_WO_WITHDRAW = _riskuserapi.SHFE_FTDC_WO_WITHDRAW
SHFE_FTDC_WO_CALL_OFFSET = _riskuserapi.SHFE_FTDC_WO_CALL_OFFSET
SHFE_FTDC_WO_PUT_OFFSET = _riskuserapi.SHFE_FTDC_WO_PUT_OFFSET
SHFE_FTDC_WO_EX_AVAILABLE = _riskuserapi.SHFE_FTDC_WO_EX_AVAILABLE
SHFE_FTDC_WO_EX_BALANCE = _riskuserapi.SHFE_FTDC_WO_EX_BALANCE
SHFE_FTDC_WO_EX_MARGIN = _riskuserapi.SHFE_FTDC_WO_EX_MARGIN
SHFE_FTDC_WO_EX_MRATIO = _riskuserapi.SHFE_FTDC_WO_EX_MRATIO
SHFE_FTDC_WO_DEPOSIT_S = _riskuserapi.SHFE_FTDC_WO_DEPOSIT_S
SHFE_FTDC_WO_WITHDRAW_S = _riskuserapi.SHFE_FTDC_WO_WITHDRAW_S
SHFE_FTDC_WO_EXEC_EXERCISE = _riskuserapi.SHFE_FTDC_WO_EXEC_EXERCISE
SHFE_FTDC_WO_EXEC_ABANDON = _riskuserapi.SHFE_FTDC_WO_EXEC_ABANDON
SHFE_FTDC_WO_ORDER_CANCEL = _riskuserapi.SHFE_FTDC_WO_ORDER_CANCEL
SHFE_FTDC_WO_BALANCE_BALANCE = _riskuserapi.SHFE_FTDC_WO_BALANCE_BALANCE
SHFE_FTDC_WO_BALANCE_RISKVALUE = _riskuserapi.SHFE_FTDC_WO_BALANCE_RISKVALUE
SHFE_FTDC_WO_BALANCE_EXCHRISKVALUE = _riskuserapi.SHFE_FTDC_WO_BALANCE_EXCHRISKVALUE
SHFE_FTDC_MONI_Speculation = _riskuserapi.SHFE_FTDC_MONI_Speculation
SHFE_FTDC_MONI_Arbitrage = _riskuserapi.SHFE_FTDC_MONI_Arbitrage
SHFE_FTDC_MONI_Hedge = _riskuserapi.SHFE_FTDC_MONI_Hedge
SHFE_FTDC_MONI_SpecHedge = _riskuserapi.SHFE_FTDC_MONI_SpecHedge
SHFE_FTDC_MONI_SpecArb = _riskuserapi.SHFE_FTDC_MONI_SpecArb
SHFE_FTDC_MONI_HedgeArb = _riskuserapi.SHFE_FTDC_MONI_HedgeArb
SHFE_FTDC_MONI_All = _riskuserapi.SHFE_FTDC_MONI_All
SHFE_FTDC_IT_All = _riskuserapi.SHFE_FTDC_IT_All
SHFE_FTDC_IT_NotIntegralMultipleIllegal = _riskuserapi.SHFE_FTDC_IT_NotIntegralMultipleIllegal
SHFE_FTDC_IT_NaturalPersonIllegal = _riskuserapi.SHFE_FTDC_IT_NaturalPersonIllegal
SHFE_FTDC_IT_LimitPositionIllegal = _riskuserapi.SHFE_FTDC_IT_LimitPositionIllegal
SHFE_FTDC_UOP_Login = _riskuserapi.SHFE_FTDC_UOP_Login
SHFE_FTDC_UOP_FeatUse = _riskuserapi.SHFE_FTDC_UOP_FeatUse
SHFE_FTDC_UOP_SenQry = _riskuserapi.SHFE_FTDC_UOP_SenQry
SHFE_FTDC_UOP_Export = _riskuserapi.SHFE_FTDC_UOP_Export
SHFE_FTDC_UOP_ParkedOrder = _riskuserapi.SHFE_FTDC_UOP_ParkedOrder
SHFE_FTDC_UOP_ForbidRight = _riskuserapi.SHFE_FTDC_UOP_ForbidRight
SHFE_FTDC_RNT_ForceClose = _riskuserapi.SHFE_FTDC_RNT_ForceClose
SHFE_FTDC_RNST_Generated = _riskuserapi.SHFE_FTDC_RNST_Generated
SHFE_FTDC_API_USER = _riskuserapi.SHFE_FTDC_API_USER
SHFE_FTDC_API_RISK = _riskuserapi.SHFE_FTDC_API_RISK
SHFE_FTDC_ACCT_OPT = _riskuserapi.SHFE_FTDC_ACCT_OPT
SHFE_FTDC_ACCT_SEC = _riskuserapi.SHFE_FTDC_ACCT_SEC
SHFE_FTDC_ORDER_Submitted = _riskuserapi.SHFE_FTDC_ORDER_Submitted
SHFE_FTDC_ORDER_Accepted = _riskuserapi.SHFE_FTDC_ORDER_Accepted
SHFE_FTDC_ORDER_Rejected = _riskuserapi.SHFE_FTDC_ORDER_Rejected
SHFE_FTDC_ORDER_TSubmitted = _riskuserapi.SHFE_FTDC_ORDER_TSubmitted
SHFE_FTDC_ORDER_EAccepted = _riskuserapi.SHFE_FTDC_ORDER_EAccepted
SHFE_FTDC_ORDER_ERejected = _riskuserapi.SHFE_FTDC_ORDER_ERejected
SMALL_DOUBLE = _riskuserapi.SMALL_DOUBLE
class CShfeFtdcDisseminationField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SequenceSeries: "TShfeFtdcSequenceSeriesType" = property(_riskuserapi.CShfeFtdcDisseminationField_SequenceSeries_get, _riskuserapi.CShfeFtdcDisseminationField_SequenceSeries_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcDisseminationField_SequenceNo_get, _riskuserapi.CShfeFtdcDisseminationField_SequenceNo_set)

    def __eq__(self, ct: "CShfeFtdcDisseminationField") -> "bool":
        return _riskuserapi.CShfeFtdcDisseminationField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcDisseminationField_swiginit(self, _riskuserapi.new_CShfeFtdcDisseminationField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcDisseminationField

# Register CShfeFtdcDisseminationField in _riskuserapi:
_riskuserapi.CShfeFtdcDisseminationField_swigregister(CShfeFtdcDisseminationField)
class CShfeFtdcReqUserLoginField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcReqUserLoginField_TradingDay_get, _riskuserapi.CShfeFtdcReqUserLoginField_TradingDay_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcReqUserLoginField_BrokerID_get, _riskuserapi.CShfeFtdcReqUserLoginField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcReqUserLoginField_UserID_get, _riskuserapi.CShfeFtdcReqUserLoginField_UserID_set)
    Password: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcReqUserLoginField_Password_get, _riskuserapi.CShfeFtdcReqUserLoginField_Password_set)
    UserProductInfo: "TShfeFtdcProductInfoType" = property(_riskuserapi.CShfeFtdcReqUserLoginField_UserProductInfo_get, _riskuserapi.CShfeFtdcReqUserLoginField_UserProductInfo_set)
    InterfaceProductInfo: "TShfeFtdcProductInfoType" = property(_riskuserapi.CShfeFtdcReqUserLoginField_InterfaceProductInfo_get, _riskuserapi.CShfeFtdcReqUserLoginField_InterfaceProductInfo_set)
    ProtocolInfo: "TShfeFtdcProtocolInfoType" = property(_riskuserapi.CShfeFtdcReqUserLoginField_ProtocolInfo_get, _riskuserapi.CShfeFtdcReqUserLoginField_ProtocolInfo_set)

    def __eq__(self, ct: "CShfeFtdcReqUserLoginField") -> "bool":
        return _riskuserapi.CShfeFtdcReqUserLoginField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcReqUserLoginField_swiginit(self, _riskuserapi.new_CShfeFtdcReqUserLoginField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcReqUserLoginField

# Register CShfeFtdcReqUserLoginField in _riskuserapi:
_riskuserapi.CShfeFtdcReqUserLoginField_swigregister(CShfeFtdcReqUserLoginField)
class CShfeFtdcRspUserLoginField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRspUserLoginField_TradingDay_get, _riskuserapi.CShfeFtdcRspUserLoginField_TradingDay_set)
    LoginTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRspUserLoginField_LoginTime_get, _riskuserapi.CShfeFtdcRspUserLoginField_LoginTime_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRspUserLoginField_BrokerID_get, _riskuserapi.CShfeFtdcRspUserLoginField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRspUserLoginField_UserID_get, _riskuserapi.CShfeFtdcRspUserLoginField_UserID_set)
    SystemName: "TShfeFtdcSystemNameType" = property(_riskuserapi.CShfeFtdcRspUserLoginField_SystemName_get, _riskuserapi.CShfeFtdcRspUserLoginField_SystemName_set)
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcRspUserLoginField_FrontID_get, _riskuserapi.CShfeFtdcRspUserLoginField_FrontID_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcRspUserLoginField_SessionID_get, _riskuserapi.CShfeFtdcRspUserLoginField_SessionID_set)
    MaxOrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcRspUserLoginField_MaxOrderRef_get, _riskuserapi.CShfeFtdcRspUserLoginField_MaxOrderRef_set)
    SHFETime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRspUserLoginField_SHFETime_get, _riskuserapi.CShfeFtdcRspUserLoginField_SHFETime_set)
    DCETime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRspUserLoginField_DCETime_get, _riskuserapi.CShfeFtdcRspUserLoginField_DCETime_set)
    CZCETime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRspUserLoginField_CZCETime_get, _riskuserapi.CShfeFtdcRspUserLoginField_CZCETime_set)
    FFEXTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRspUserLoginField_FFEXTime_get, _riskuserapi.CShfeFtdcRspUserLoginField_FFEXTime_set)

    def __eq__(self, ct: "CShfeFtdcRspUserLoginField") -> "bool":
        return _riskuserapi.CShfeFtdcRspUserLoginField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRspUserLoginField_swiginit(self, _riskuserapi.new_CShfeFtdcRspUserLoginField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRspUserLoginField

# Register CShfeFtdcRspUserLoginField in _riskuserapi:
_riskuserapi.CShfeFtdcRspUserLoginField_swigregister(CShfeFtdcRspUserLoginField)
class CShfeFtdcUserLogoutField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcUserLogoutField_BrokerID_get, _riskuserapi.CShfeFtdcUserLogoutField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcUserLogoutField_UserID_get, _riskuserapi.CShfeFtdcUserLogoutField_UserID_set)

    def __eq__(self, ct: "CShfeFtdcUserLogoutField") -> "bool":
        return _riskuserapi.CShfeFtdcUserLogoutField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcUserLogoutField_swiginit(self, _riskuserapi.new_CShfeFtdcUserLogoutField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcUserLogoutField

# Register CShfeFtdcUserLogoutField in _riskuserapi:
_riskuserapi.CShfeFtdcUserLogoutField_swigregister(CShfeFtdcUserLogoutField)
class CShfeFtdcForceUserLogoutField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcForceUserLogoutField_BrokerID_get, _riskuserapi.CShfeFtdcForceUserLogoutField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcForceUserLogoutField_UserID_get, _riskuserapi.CShfeFtdcForceUserLogoutField_UserID_set)

    def __eq__(self, ct: "CShfeFtdcForceUserLogoutField") -> "bool":
        return _riskuserapi.CShfeFtdcForceUserLogoutField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcForceUserLogoutField_swiginit(self, _riskuserapi.new_CShfeFtdcForceUserLogoutField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcForceUserLogoutField

# Register CShfeFtdcForceUserLogoutField in _riskuserapi:
_riskuserapi.CShfeFtdcForceUserLogoutField_swigregister(CShfeFtdcForceUserLogoutField)
class CShfeFtdcTransferHeaderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Version: "TShfeFtdcVersionType" = property(_riskuserapi.CShfeFtdcTransferHeaderField_Version_get, _riskuserapi.CShfeFtdcTransferHeaderField_Version_set)
    TradeCode: "TShfeFtdcTradeCodeType" = property(_riskuserapi.CShfeFtdcTransferHeaderField_TradeCode_get, _riskuserapi.CShfeFtdcTransferHeaderField_TradeCode_set)
    TradeDate: "TShfeFtdcTradeDateType" = property(_riskuserapi.CShfeFtdcTransferHeaderField_TradeDate_get, _riskuserapi.CShfeFtdcTransferHeaderField_TradeDate_set)
    TradeTime: "TShfeFtdcTradeTimeType" = property(_riskuserapi.CShfeFtdcTransferHeaderField_TradeTime_get, _riskuserapi.CShfeFtdcTransferHeaderField_TradeTime_set)
    TradeSerial: "TShfeFtdcTradeSerialType" = property(_riskuserapi.CShfeFtdcTransferHeaderField_TradeSerial_get, _riskuserapi.CShfeFtdcTransferHeaderField_TradeSerial_set)
    FutureID: "TShfeFtdcFutureIDType" = property(_riskuserapi.CShfeFtdcTransferHeaderField_FutureID_get, _riskuserapi.CShfeFtdcTransferHeaderField_FutureID_set)
    BankID: "TShfeFtdcBankIDType" = property(_riskuserapi.CShfeFtdcTransferHeaderField_BankID_get, _riskuserapi.CShfeFtdcTransferHeaderField_BankID_set)
    BankBrchID: "TShfeFtdcBankBrchIDType" = property(_riskuserapi.CShfeFtdcTransferHeaderField_BankBrchID_get, _riskuserapi.CShfeFtdcTransferHeaderField_BankBrchID_set)
    OperNo: "TShfeFtdcOperNoType" = property(_riskuserapi.CShfeFtdcTransferHeaderField_OperNo_get, _riskuserapi.CShfeFtdcTransferHeaderField_OperNo_set)
    DeviceID: "TShfeFtdcDeviceIDType" = property(_riskuserapi.CShfeFtdcTransferHeaderField_DeviceID_get, _riskuserapi.CShfeFtdcTransferHeaderField_DeviceID_set)
    RecordNum: "TShfeFtdcRecordNumType" = property(_riskuserapi.CShfeFtdcTransferHeaderField_RecordNum_get, _riskuserapi.CShfeFtdcTransferHeaderField_RecordNum_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcTransferHeaderField_SessionID_get, _riskuserapi.CShfeFtdcTransferHeaderField_SessionID_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcTransferHeaderField_RequestID_get, _riskuserapi.CShfeFtdcTransferHeaderField_RequestID_set)

    def __eq__(self, ct: "CShfeFtdcTransferHeaderField") -> "bool":
        return _riskuserapi.CShfeFtdcTransferHeaderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTransferHeaderField_swiginit(self, _riskuserapi.new_CShfeFtdcTransferHeaderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTransferHeaderField

# Register CShfeFtdcTransferHeaderField in _riskuserapi:
_riskuserapi.CShfeFtdcTransferHeaderField_swigregister(CShfeFtdcTransferHeaderField)
class CShfeFtdcTransferBankToFutureReqField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FutureAccount: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcTransferBankToFutureReqField_FutureAccount_get, _riskuserapi.CShfeFtdcTransferBankToFutureReqField_FutureAccount_set)
    FuturePwdFlag: "TShfeFtdcFuturePwdFlagType" = property(_riskuserapi.CShfeFtdcTransferBankToFutureReqField_FuturePwdFlag_get, _riskuserapi.CShfeFtdcTransferBankToFutureReqField_FuturePwdFlag_set)
    FutureAccPwd: "TShfeFtdcFutureAccPwdType" = property(_riskuserapi.CShfeFtdcTransferBankToFutureReqField_FutureAccPwd_get, _riskuserapi.CShfeFtdcTransferBankToFutureReqField_FutureAccPwd_set)
    TradeAmt: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTransferBankToFutureReqField_TradeAmt_get, _riskuserapi.CShfeFtdcTransferBankToFutureReqField_TradeAmt_set)
    CustFee: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTransferBankToFutureReqField_CustFee_get, _riskuserapi.CShfeFtdcTransferBankToFutureReqField_CustFee_set)
    CurrencyCode: "TShfeFtdcCurrencyCodeType" = property(_riskuserapi.CShfeFtdcTransferBankToFutureReqField_CurrencyCode_get, _riskuserapi.CShfeFtdcTransferBankToFutureReqField_CurrencyCode_set)

    def __eq__(self, ct: "CShfeFtdcTransferBankToFutureReqField") -> "bool":
        return _riskuserapi.CShfeFtdcTransferBankToFutureReqField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTransferBankToFutureReqField_swiginit(self, _riskuserapi.new_CShfeFtdcTransferBankToFutureReqField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTransferBankToFutureReqField

# Register CShfeFtdcTransferBankToFutureReqField in _riskuserapi:
_riskuserapi.CShfeFtdcTransferBankToFutureReqField_swigregister(CShfeFtdcTransferBankToFutureReqField)
class CShfeFtdcTransferBankToFutureRspField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RetCode: "TShfeFtdcRetCodeType" = property(_riskuserapi.CShfeFtdcTransferBankToFutureRspField_RetCode_get, _riskuserapi.CShfeFtdcTransferBankToFutureRspField_RetCode_set)
    RetInfo: "TShfeFtdcRetInfoType" = property(_riskuserapi.CShfeFtdcTransferBankToFutureRspField_RetInfo_get, _riskuserapi.CShfeFtdcTransferBankToFutureRspField_RetInfo_set)
    FutureAccount: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcTransferBankToFutureRspField_FutureAccount_get, _riskuserapi.CShfeFtdcTransferBankToFutureRspField_FutureAccount_set)
    TradeAmt: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTransferBankToFutureRspField_TradeAmt_get, _riskuserapi.CShfeFtdcTransferBankToFutureRspField_TradeAmt_set)
    CustFee: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTransferBankToFutureRspField_CustFee_get, _riskuserapi.CShfeFtdcTransferBankToFutureRspField_CustFee_set)
    CurrencyCode: "TShfeFtdcCurrencyCodeType" = property(_riskuserapi.CShfeFtdcTransferBankToFutureRspField_CurrencyCode_get, _riskuserapi.CShfeFtdcTransferBankToFutureRspField_CurrencyCode_set)

    def __eq__(self, ct: "CShfeFtdcTransferBankToFutureRspField") -> "bool":
        return _riskuserapi.CShfeFtdcTransferBankToFutureRspField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTransferBankToFutureRspField_swiginit(self, _riskuserapi.new_CShfeFtdcTransferBankToFutureRspField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTransferBankToFutureRspField

# Register CShfeFtdcTransferBankToFutureRspField in _riskuserapi:
_riskuserapi.CShfeFtdcTransferBankToFutureRspField_swigregister(CShfeFtdcTransferBankToFutureRspField)
class CShfeFtdcTransferFutureToBankReqField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FutureAccount: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcTransferFutureToBankReqField_FutureAccount_get, _riskuserapi.CShfeFtdcTransferFutureToBankReqField_FutureAccount_set)
    FuturePwdFlag: "TShfeFtdcFuturePwdFlagType" = property(_riskuserapi.CShfeFtdcTransferFutureToBankReqField_FuturePwdFlag_get, _riskuserapi.CShfeFtdcTransferFutureToBankReqField_FuturePwdFlag_set)
    FutureAccPwd: "TShfeFtdcFutureAccPwdType" = property(_riskuserapi.CShfeFtdcTransferFutureToBankReqField_FutureAccPwd_get, _riskuserapi.CShfeFtdcTransferFutureToBankReqField_FutureAccPwd_set)
    TradeAmt: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTransferFutureToBankReqField_TradeAmt_get, _riskuserapi.CShfeFtdcTransferFutureToBankReqField_TradeAmt_set)
    CustFee: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTransferFutureToBankReqField_CustFee_get, _riskuserapi.CShfeFtdcTransferFutureToBankReqField_CustFee_set)
    CurrencyCode: "TShfeFtdcCurrencyCodeType" = property(_riskuserapi.CShfeFtdcTransferFutureToBankReqField_CurrencyCode_get, _riskuserapi.CShfeFtdcTransferFutureToBankReqField_CurrencyCode_set)

    def __eq__(self, ct: "CShfeFtdcTransferFutureToBankReqField") -> "bool":
        return _riskuserapi.CShfeFtdcTransferFutureToBankReqField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTransferFutureToBankReqField_swiginit(self, _riskuserapi.new_CShfeFtdcTransferFutureToBankReqField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTransferFutureToBankReqField

# Register CShfeFtdcTransferFutureToBankReqField in _riskuserapi:
_riskuserapi.CShfeFtdcTransferFutureToBankReqField_swigregister(CShfeFtdcTransferFutureToBankReqField)
class CShfeFtdcTransferFutureToBankRspField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RetCode: "TShfeFtdcRetCodeType" = property(_riskuserapi.CShfeFtdcTransferFutureToBankRspField_RetCode_get, _riskuserapi.CShfeFtdcTransferFutureToBankRspField_RetCode_set)
    RetInfo: "TShfeFtdcRetInfoType" = property(_riskuserapi.CShfeFtdcTransferFutureToBankRspField_RetInfo_get, _riskuserapi.CShfeFtdcTransferFutureToBankRspField_RetInfo_set)
    FutureAccount: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcTransferFutureToBankRspField_FutureAccount_get, _riskuserapi.CShfeFtdcTransferFutureToBankRspField_FutureAccount_set)
    TradeAmt: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTransferFutureToBankRspField_TradeAmt_get, _riskuserapi.CShfeFtdcTransferFutureToBankRspField_TradeAmt_set)
    CustFee: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTransferFutureToBankRspField_CustFee_get, _riskuserapi.CShfeFtdcTransferFutureToBankRspField_CustFee_set)
    CurrencyCode: "TShfeFtdcCurrencyCodeType" = property(_riskuserapi.CShfeFtdcTransferFutureToBankRspField_CurrencyCode_get, _riskuserapi.CShfeFtdcTransferFutureToBankRspField_CurrencyCode_set)

    def __eq__(self, ct: "CShfeFtdcTransferFutureToBankRspField") -> "bool":
        return _riskuserapi.CShfeFtdcTransferFutureToBankRspField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTransferFutureToBankRspField_swiginit(self, _riskuserapi.new_CShfeFtdcTransferFutureToBankRspField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTransferFutureToBankRspField

# Register CShfeFtdcTransferFutureToBankRspField in _riskuserapi:
_riskuserapi.CShfeFtdcTransferFutureToBankRspField_swigregister(CShfeFtdcTransferFutureToBankRspField)
class CShfeFtdcTransferQryBankReqField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FutureAccount: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcTransferQryBankReqField_FutureAccount_get, _riskuserapi.CShfeFtdcTransferQryBankReqField_FutureAccount_set)
    FuturePwdFlag: "TShfeFtdcFuturePwdFlagType" = property(_riskuserapi.CShfeFtdcTransferQryBankReqField_FuturePwdFlag_get, _riskuserapi.CShfeFtdcTransferQryBankReqField_FuturePwdFlag_set)
    FutureAccPwd: "TShfeFtdcFutureAccPwdType" = property(_riskuserapi.CShfeFtdcTransferQryBankReqField_FutureAccPwd_get, _riskuserapi.CShfeFtdcTransferQryBankReqField_FutureAccPwd_set)
    CurrencyCode: "TShfeFtdcCurrencyCodeType" = property(_riskuserapi.CShfeFtdcTransferQryBankReqField_CurrencyCode_get, _riskuserapi.CShfeFtdcTransferQryBankReqField_CurrencyCode_set)

    def __eq__(self, ct: "CShfeFtdcTransferQryBankReqField") -> "bool":
        return _riskuserapi.CShfeFtdcTransferQryBankReqField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTransferQryBankReqField_swiginit(self, _riskuserapi.new_CShfeFtdcTransferQryBankReqField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTransferQryBankReqField

# Register CShfeFtdcTransferQryBankReqField in _riskuserapi:
_riskuserapi.CShfeFtdcTransferQryBankReqField_swigregister(CShfeFtdcTransferQryBankReqField)
class CShfeFtdcTransferQryBankRspField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RetCode: "TShfeFtdcRetCodeType" = property(_riskuserapi.CShfeFtdcTransferQryBankRspField_RetCode_get, _riskuserapi.CShfeFtdcTransferQryBankRspField_RetCode_set)
    RetInfo: "TShfeFtdcRetInfoType" = property(_riskuserapi.CShfeFtdcTransferQryBankRspField_RetInfo_get, _riskuserapi.CShfeFtdcTransferQryBankRspField_RetInfo_set)
    FutureAccount: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcTransferQryBankRspField_FutureAccount_get, _riskuserapi.CShfeFtdcTransferQryBankRspField_FutureAccount_set)
    TradeAmt: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTransferQryBankRspField_TradeAmt_get, _riskuserapi.CShfeFtdcTransferQryBankRspField_TradeAmt_set)
    UseAmt: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTransferQryBankRspField_UseAmt_get, _riskuserapi.CShfeFtdcTransferQryBankRspField_UseAmt_set)
    FetchAmt: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTransferQryBankRspField_FetchAmt_get, _riskuserapi.CShfeFtdcTransferQryBankRspField_FetchAmt_set)
    CurrencyCode: "TShfeFtdcCurrencyCodeType" = property(_riskuserapi.CShfeFtdcTransferQryBankRspField_CurrencyCode_get, _riskuserapi.CShfeFtdcTransferQryBankRspField_CurrencyCode_set)

    def __eq__(self, ct: "CShfeFtdcTransferQryBankRspField") -> "bool":
        return _riskuserapi.CShfeFtdcTransferQryBankRspField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTransferQryBankRspField_swiginit(self, _riskuserapi.new_CShfeFtdcTransferQryBankRspField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTransferQryBankRspField

# Register CShfeFtdcTransferQryBankRspField in _riskuserapi:
_riskuserapi.CShfeFtdcTransferQryBankRspField_swigregister(CShfeFtdcTransferQryBankRspField)
class CShfeFtdcTransferQryDetailReqField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FutureAccount: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcTransferQryDetailReqField_FutureAccount_get, _riskuserapi.CShfeFtdcTransferQryDetailReqField_FutureAccount_set)

    def __eq__(self, ct: "CShfeFtdcTransferQryDetailReqField") -> "bool":
        return _riskuserapi.CShfeFtdcTransferQryDetailReqField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTransferQryDetailReqField_swiginit(self, _riskuserapi.new_CShfeFtdcTransferQryDetailReqField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTransferQryDetailReqField

# Register CShfeFtdcTransferQryDetailReqField in _riskuserapi:
_riskuserapi.CShfeFtdcTransferQryDetailReqField_swigregister(CShfeFtdcTransferQryDetailReqField)
class CShfeFtdcTransferQryDetailRspField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcTransferQryDetailRspField_TradeDate_get, _riskuserapi.CShfeFtdcTransferQryDetailRspField_TradeDate_set)
    TradeTime: "TShfeFtdcTradeTimeType" = property(_riskuserapi.CShfeFtdcTransferQryDetailRspField_TradeTime_get, _riskuserapi.CShfeFtdcTransferQryDetailRspField_TradeTime_set)
    TradeCode: "TShfeFtdcTradeCodeType" = property(_riskuserapi.CShfeFtdcTransferQryDetailRspField_TradeCode_get, _riskuserapi.CShfeFtdcTransferQryDetailRspField_TradeCode_set)
    FutureSerial: "TShfeFtdcTradeSerialNoType" = property(_riskuserapi.CShfeFtdcTransferQryDetailRspField_FutureSerial_get, _riskuserapi.CShfeFtdcTransferQryDetailRspField_FutureSerial_set)
    FutureID: "TShfeFtdcFutureIDType" = property(_riskuserapi.CShfeFtdcTransferQryDetailRspField_FutureID_get, _riskuserapi.CShfeFtdcTransferQryDetailRspField_FutureID_set)
    FutureAccount: "TShfeFtdcFutureAccountType" = property(_riskuserapi.CShfeFtdcTransferQryDetailRspField_FutureAccount_get, _riskuserapi.CShfeFtdcTransferQryDetailRspField_FutureAccount_set)
    BankSerial: "TShfeFtdcTradeSerialNoType" = property(_riskuserapi.CShfeFtdcTransferQryDetailRspField_BankSerial_get, _riskuserapi.CShfeFtdcTransferQryDetailRspField_BankSerial_set)
    BankID: "TShfeFtdcBankIDType" = property(_riskuserapi.CShfeFtdcTransferQryDetailRspField_BankID_get, _riskuserapi.CShfeFtdcTransferQryDetailRspField_BankID_set)
    BankBrchID: "TShfeFtdcBankBrchIDType" = property(_riskuserapi.CShfeFtdcTransferQryDetailRspField_BankBrchID_get, _riskuserapi.CShfeFtdcTransferQryDetailRspField_BankBrchID_set)
    BankAccount: "TShfeFtdcBankAccountType" = property(_riskuserapi.CShfeFtdcTransferQryDetailRspField_BankAccount_get, _riskuserapi.CShfeFtdcTransferQryDetailRspField_BankAccount_set)
    CertCode: "TShfeFtdcCertCodeType" = property(_riskuserapi.CShfeFtdcTransferQryDetailRspField_CertCode_get, _riskuserapi.CShfeFtdcTransferQryDetailRspField_CertCode_set)
    CurrencyCode: "TShfeFtdcCurrencyCodeType" = property(_riskuserapi.CShfeFtdcTransferQryDetailRspField_CurrencyCode_get, _riskuserapi.CShfeFtdcTransferQryDetailRspField_CurrencyCode_set)
    TxAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTransferQryDetailRspField_TxAmount_get, _riskuserapi.CShfeFtdcTransferQryDetailRspField_TxAmount_set)
    Flag: "TShfeFtdcTransferValidFlagType" = property(_riskuserapi.CShfeFtdcTransferQryDetailRspField_Flag_get, _riskuserapi.CShfeFtdcTransferQryDetailRspField_Flag_set)

    def __eq__(self, ct: "CShfeFtdcTransferQryDetailRspField") -> "bool":
        return _riskuserapi.CShfeFtdcTransferQryDetailRspField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTransferQryDetailRspField_swiginit(self, _riskuserapi.new_CShfeFtdcTransferQryDetailRspField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTransferQryDetailRspField

# Register CShfeFtdcTransferQryDetailRspField in _riskuserapi:
_riskuserapi.CShfeFtdcTransferQryDetailRspField_swigregister(CShfeFtdcTransferQryDetailRspField)
class CShfeFtdcRspInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ErrorID: "TShfeFtdcErrorIDType" = property(_riskuserapi.CShfeFtdcRspInfoField_ErrorID_get, _riskuserapi.CShfeFtdcRspInfoField_ErrorID_set)
    ErrorMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcRspInfoField_ErrorMsg_get, _riskuserapi.CShfeFtdcRspInfoField_ErrorMsg_set)

    def __eq__(self, ct: "CShfeFtdcRspInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcRspInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRspInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcRspInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRspInfoField

# Register CShfeFtdcRspInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcRspInfoField_swigregister(CShfeFtdcRspInfoField)
class CShfeFtdcExchangeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcExchangeField_ExchangeID_get, _riskuserapi.CShfeFtdcExchangeField_ExchangeID_set)
    ExchangeName: "TShfeFtdcExchangeNameType" = property(_riskuserapi.CShfeFtdcExchangeField_ExchangeName_get, _riskuserapi.CShfeFtdcExchangeField_ExchangeName_set)
    ExchangeProperty: "TShfeFtdcExchangePropertyType" = property(_riskuserapi.CShfeFtdcExchangeField_ExchangeProperty_get, _riskuserapi.CShfeFtdcExchangeField_ExchangeProperty_set)

    def __eq__(self, ct: "CShfeFtdcExchangeField") -> "bool":
        return _riskuserapi.CShfeFtdcExchangeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcExchangeField_swiginit(self, _riskuserapi.new_CShfeFtdcExchangeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcExchangeField

# Register CShfeFtdcExchangeField in _riskuserapi:
_riskuserapi.CShfeFtdcExchangeField_swigregister(CShfeFtdcExchangeField)
class CShfeFtdcProductField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcProductField_ProductID_get, _riskuserapi.CShfeFtdcProductField_ProductID_set)
    ProductName: "TShfeFtdcProductNameType" = property(_riskuserapi.CShfeFtdcProductField_ProductName_get, _riskuserapi.CShfeFtdcProductField_ProductName_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcProductField_ExchangeID_get, _riskuserapi.CShfeFtdcProductField_ExchangeID_set)
    ProductClass: "TShfeFtdcProductClassType" = property(_riskuserapi.CShfeFtdcProductField_ProductClass_get, _riskuserapi.CShfeFtdcProductField_ProductClass_set)
    VolumeMultiple: "TShfeFtdcVolumeMultipleType" = property(_riskuserapi.CShfeFtdcProductField_VolumeMultiple_get, _riskuserapi.CShfeFtdcProductField_VolumeMultiple_set)
    PriceTick: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcProductField_PriceTick_get, _riskuserapi.CShfeFtdcProductField_PriceTick_set)
    MaxMarketOrderVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcProductField_MaxMarketOrderVolume_get, _riskuserapi.CShfeFtdcProductField_MaxMarketOrderVolume_set)
    MinMarketOrderVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcProductField_MinMarketOrderVolume_get, _riskuserapi.CShfeFtdcProductField_MinMarketOrderVolume_set)
    MaxLimitOrderVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcProductField_MaxLimitOrderVolume_get, _riskuserapi.CShfeFtdcProductField_MaxLimitOrderVolume_set)
    MinLimitOrderVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcProductField_MinLimitOrderVolume_get, _riskuserapi.CShfeFtdcProductField_MinLimitOrderVolume_set)
    PositionType: "TShfeFtdcPositionTypeType" = property(_riskuserapi.CShfeFtdcProductField_PositionType_get, _riskuserapi.CShfeFtdcProductField_PositionType_set)
    PositionDateType: "TShfeFtdcPositionDateTypeType" = property(_riskuserapi.CShfeFtdcProductField_PositionDateType_get, _riskuserapi.CShfeFtdcProductField_PositionDateType_set)
    CloseDealType: "TShfeFtdcCloseDealTypeType" = property(_riskuserapi.CShfeFtdcProductField_CloseDealType_get, _riskuserapi.CShfeFtdcProductField_CloseDealType_set)
    TradeCurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcProductField_TradeCurrencyID_get, _riskuserapi.CShfeFtdcProductField_TradeCurrencyID_set)
    MortgageFundUseRange: "TShfeFtdcMortgageFundUseRangeType" = property(_riskuserapi.CShfeFtdcProductField_MortgageFundUseRange_get, _riskuserapi.CShfeFtdcProductField_MortgageFundUseRange_set)
    ExchangeProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcProductField_ExchangeProductID_get, _riskuserapi.CShfeFtdcProductField_ExchangeProductID_set)
    UnderlyingMultiple: "TShfeFtdcUnderlyingMultipleType" = property(_riskuserapi.CShfeFtdcProductField_UnderlyingMultiple_get, _riskuserapi.CShfeFtdcProductField_UnderlyingMultiple_set)
    OpenLimitControlLevel: "TShfeFtdcOpenLimitControlLevelType" = property(_riskuserapi.CShfeFtdcProductField_OpenLimitControlLevel_get, _riskuserapi.CShfeFtdcProductField_OpenLimitControlLevel_set)
    OrderFreqControlLevel: "TShfeFtdcOrderFreqControlLevelType" = property(_riskuserapi.CShfeFtdcProductField_OrderFreqControlLevel_get, _riskuserapi.CShfeFtdcProductField_OrderFreqControlLevel_set)

    def __eq__(self, ct: "CShfeFtdcProductField") -> "bool":
        return _riskuserapi.CShfeFtdcProductField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcProductField_swiginit(self, _riskuserapi.new_CShfeFtdcProductField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcProductField

# Register CShfeFtdcProductField in _riskuserapi:
_riskuserapi.CShfeFtdcProductField_swigregister(CShfeFtdcProductField)
class CShfeFtdcInstrumentField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInstrumentField_InstrumentID_get, _riskuserapi.CShfeFtdcInstrumentField_InstrumentID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcInstrumentField_ExchangeID_get, _riskuserapi.CShfeFtdcInstrumentField_ExchangeID_set)
    InstrumentName: "TShfeFtdcInstrumentNameType" = property(_riskuserapi.CShfeFtdcInstrumentField_InstrumentName_get, _riskuserapi.CShfeFtdcInstrumentField_InstrumentName_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcInstrumentField_ExchangeInstID_get, _riskuserapi.CShfeFtdcInstrumentField_ExchangeInstID_set)
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInstrumentField_ProductID_get, _riskuserapi.CShfeFtdcInstrumentField_ProductID_set)
    ProductClass: "TShfeFtdcProductClassType" = property(_riskuserapi.CShfeFtdcInstrumentField_ProductClass_get, _riskuserapi.CShfeFtdcInstrumentField_ProductClass_set)
    DeliveryYear: "TShfeFtdcYearType" = property(_riskuserapi.CShfeFtdcInstrumentField_DeliveryYear_get, _riskuserapi.CShfeFtdcInstrumentField_DeliveryYear_set)
    DeliveryMonth: "TShfeFtdcMonthType" = property(_riskuserapi.CShfeFtdcInstrumentField_DeliveryMonth_get, _riskuserapi.CShfeFtdcInstrumentField_DeliveryMonth_set)
    MaxMarketOrderVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInstrumentField_MaxMarketOrderVolume_get, _riskuserapi.CShfeFtdcInstrumentField_MaxMarketOrderVolume_set)
    MinMarketOrderVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInstrumentField_MinMarketOrderVolume_get, _riskuserapi.CShfeFtdcInstrumentField_MinMarketOrderVolume_set)
    MaxLimitOrderVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInstrumentField_MaxLimitOrderVolume_get, _riskuserapi.CShfeFtdcInstrumentField_MaxLimitOrderVolume_set)
    MinLimitOrderVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInstrumentField_MinLimitOrderVolume_get, _riskuserapi.CShfeFtdcInstrumentField_MinLimitOrderVolume_set)
    VolumeMultiple: "TShfeFtdcVolumeMultipleType" = property(_riskuserapi.CShfeFtdcInstrumentField_VolumeMultiple_get, _riskuserapi.CShfeFtdcInstrumentField_VolumeMultiple_set)
    PriceTick: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcInstrumentField_PriceTick_get, _riskuserapi.CShfeFtdcInstrumentField_PriceTick_set)
    CreateDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcInstrumentField_CreateDate_get, _riskuserapi.CShfeFtdcInstrumentField_CreateDate_set)
    OpenDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcInstrumentField_OpenDate_get, _riskuserapi.CShfeFtdcInstrumentField_OpenDate_set)
    ExpireDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcInstrumentField_ExpireDate_get, _riskuserapi.CShfeFtdcInstrumentField_ExpireDate_set)
    StartDelivDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcInstrumentField_StartDelivDate_get, _riskuserapi.CShfeFtdcInstrumentField_StartDelivDate_set)
    EndDelivDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcInstrumentField_EndDelivDate_get, _riskuserapi.CShfeFtdcInstrumentField_EndDelivDate_set)
    InstLifePhase: "TShfeFtdcInstLifePhaseType" = property(_riskuserapi.CShfeFtdcInstrumentField_InstLifePhase_get, _riskuserapi.CShfeFtdcInstrumentField_InstLifePhase_set)
    IsTrading: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcInstrumentField_IsTrading_get, _riskuserapi.CShfeFtdcInstrumentField_IsTrading_set)
    PositionType: "TShfeFtdcPositionTypeType" = property(_riskuserapi.CShfeFtdcInstrumentField_PositionType_get, _riskuserapi.CShfeFtdcInstrumentField_PositionType_set)
    PositionDateType: "TShfeFtdcPositionDateTypeType" = property(_riskuserapi.CShfeFtdcInstrumentField_PositionDateType_get, _riskuserapi.CShfeFtdcInstrumentField_PositionDateType_set)
    LongMarginRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInstrumentField_LongMarginRatio_get, _riskuserapi.CShfeFtdcInstrumentField_LongMarginRatio_set)
    ShortMarginRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInstrumentField_ShortMarginRatio_get, _riskuserapi.CShfeFtdcInstrumentField_ShortMarginRatio_set)
    MaxMarginSideAlgorithm: "TShfeFtdcMaxMarginSideAlgorithmType" = property(_riskuserapi.CShfeFtdcInstrumentField_MaxMarginSideAlgorithm_get, _riskuserapi.CShfeFtdcInstrumentField_MaxMarginSideAlgorithm_set)
    UnderlyingInstrID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInstrumentField_UnderlyingInstrID_get, _riskuserapi.CShfeFtdcInstrumentField_UnderlyingInstrID_set)
    StrikePrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcInstrumentField_StrikePrice_get, _riskuserapi.CShfeFtdcInstrumentField_StrikePrice_set)
    OptionsType: "TShfeFtdcOptionsTypeType" = property(_riskuserapi.CShfeFtdcInstrumentField_OptionsType_get, _riskuserapi.CShfeFtdcInstrumentField_OptionsType_set)
    UnderlyingMultiple: "TShfeFtdcUnderlyingMultipleType" = property(_riskuserapi.CShfeFtdcInstrumentField_UnderlyingMultiple_get, _riskuserapi.CShfeFtdcInstrumentField_UnderlyingMultiple_set)
    CombinationType: "TShfeFtdcCombinationTypeType" = property(_riskuserapi.CShfeFtdcInstrumentField_CombinationType_get, _riskuserapi.CShfeFtdcInstrumentField_CombinationType_set)
    ProductGroupID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInstrumentField_ProductGroupID_get, _riskuserapi.CShfeFtdcInstrumentField_ProductGroupID_set)

    def __eq__(self, ct: "CShfeFtdcInstrumentField") -> "bool":
        return _riskuserapi.CShfeFtdcInstrumentField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInstrumentField_swiginit(self, _riskuserapi.new_CShfeFtdcInstrumentField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInstrumentField

# Register CShfeFtdcInstrumentField in _riskuserapi:
_riskuserapi.CShfeFtdcInstrumentField_swigregister(CShfeFtdcInstrumentField)
class CShfeFtdcBrokerField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcBrokerField_BrokerID_get, _riskuserapi.CShfeFtdcBrokerField_BrokerID_set)
    BrokerAbbr: "TShfeFtdcBrokerAbbrType" = property(_riskuserapi.CShfeFtdcBrokerField_BrokerAbbr_get, _riskuserapi.CShfeFtdcBrokerField_BrokerAbbr_set)
    BrokerName: "TShfeFtdcBrokerNameType" = property(_riskuserapi.CShfeFtdcBrokerField_BrokerName_get, _riskuserapi.CShfeFtdcBrokerField_BrokerName_set)
    IsActive: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcBrokerField_IsActive_get, _riskuserapi.CShfeFtdcBrokerField_IsActive_set)

    def __eq__(self, ct: "CShfeFtdcBrokerField") -> "bool":
        return _riskuserapi.CShfeFtdcBrokerField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcBrokerField_swiginit(self, _riskuserapi.new_CShfeFtdcBrokerField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcBrokerField

# Register CShfeFtdcBrokerField in _riskuserapi:
_riskuserapi.CShfeFtdcBrokerField_swigregister(CShfeFtdcBrokerField)
class CShfeFtdcTraderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcTraderField_ExchangeID_get, _riskuserapi.CShfeFtdcTraderField_ExchangeID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcTraderField_TraderID_get, _riskuserapi.CShfeFtdcTraderField_TraderID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcTraderField_ParticipantID_get, _riskuserapi.CShfeFtdcTraderField_ParticipantID_set)
    Password: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcTraderField_Password_get, _riskuserapi.CShfeFtdcTraderField_Password_set)
    InstallCount: "TShfeFtdcInstallCountType" = property(_riskuserapi.CShfeFtdcTraderField_InstallCount_get, _riskuserapi.CShfeFtdcTraderField_InstallCount_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcTraderField_BrokerID_get, _riskuserapi.CShfeFtdcTraderField_BrokerID_set)
    OrderCancelAlg: "TShfeFtdcOrderCancelAlgType" = property(_riskuserapi.CShfeFtdcTraderField_OrderCancelAlg_get, _riskuserapi.CShfeFtdcTraderField_OrderCancelAlg_set)
    TradeInstallCount: "TShfeFtdcInstallCountType" = property(_riskuserapi.CShfeFtdcTraderField_TradeInstallCount_get, _riskuserapi.CShfeFtdcTraderField_TradeInstallCount_set)
    MDInstallCount: "TShfeFtdcInstallCountType" = property(_riskuserapi.CShfeFtdcTraderField_MDInstallCount_get, _riskuserapi.CShfeFtdcTraderField_MDInstallCount_set)

    def __eq__(self, ct: "CShfeFtdcTraderField") -> "bool":
        return _riskuserapi.CShfeFtdcTraderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTraderField_swiginit(self, _riskuserapi.new_CShfeFtdcTraderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTraderField

# Register CShfeFtdcTraderField in _riskuserapi:
_riskuserapi.CShfeFtdcTraderField_swigregister(CShfeFtdcTraderField)
class CShfeFtdcInvestorField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorField_InvestorID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorField_BrokerID_set)
    InvestorGroupID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorField_InvestorGroupID_get, _riskuserapi.CShfeFtdcInvestorField_InvestorGroupID_set)
    InvestorName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcInvestorField_InvestorName_get, _riskuserapi.CShfeFtdcInvestorField_InvestorName_set)
    IdentifiedCardType: "TShfeFtdcIdCardTypeType" = property(_riskuserapi.CShfeFtdcInvestorField_IdentifiedCardType_get, _riskuserapi.CShfeFtdcInvestorField_IdentifiedCardType_set)
    IdentifiedCardNo: "TShfeFtdcIdentifiedCardNoType" = property(_riskuserapi.CShfeFtdcInvestorField_IdentifiedCardNo_get, _riskuserapi.CShfeFtdcInvestorField_IdentifiedCardNo_set)
    IsActive: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcInvestorField_IsActive_get, _riskuserapi.CShfeFtdcInvestorField_IsActive_set)
    Telephone: "TShfeFtdcTelephoneType" = property(_riskuserapi.CShfeFtdcInvestorField_Telephone_get, _riskuserapi.CShfeFtdcInvestorField_Telephone_set)
    Address: "TShfeFtdcAddressType" = property(_riskuserapi.CShfeFtdcInvestorField_Address_get, _riskuserapi.CShfeFtdcInvestorField_Address_set)
    OpenDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcInvestorField_OpenDate_get, _riskuserapi.CShfeFtdcInvestorField_OpenDate_set)
    Mobile: "TShfeFtdcMobileType" = property(_riskuserapi.CShfeFtdcInvestorField_Mobile_get, _riskuserapi.CShfeFtdcInvestorField_Mobile_set)
    CommModelID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorField_CommModelID_get, _riskuserapi.CShfeFtdcInvestorField_CommModelID_set)
    MarginModelID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorField_MarginModelID_get, _riskuserapi.CShfeFtdcInvestorField_MarginModelID_set)
    IsOrderFreq: "TShfeFtdcEnumBoolType" = property(_riskuserapi.CShfeFtdcInvestorField_IsOrderFreq_get, _riskuserapi.CShfeFtdcInvestorField_IsOrderFreq_set)
    IsOpenVolLimit: "TShfeFtdcEnumBoolType" = property(_riskuserapi.CShfeFtdcInvestorField_IsOpenVolLimit_get, _riskuserapi.CShfeFtdcInvestorField_IsOpenVolLimit_set)

    def __eq__(self, ct: "CShfeFtdcInvestorField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorField

# Register CShfeFtdcInvestorField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorField_swigregister(CShfeFtdcInvestorField)
class CShfeFtdcTradingCodeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcTradingCodeField_InvestorID_get, _riskuserapi.CShfeFtdcTradingCodeField_InvestorID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcTradingCodeField_BrokerID_get, _riskuserapi.CShfeFtdcTradingCodeField_BrokerID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcTradingCodeField_ExchangeID_get, _riskuserapi.CShfeFtdcTradingCodeField_ExchangeID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcTradingCodeField_ClientID_get, _riskuserapi.CShfeFtdcTradingCodeField_ClientID_set)
    IsActive: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcTradingCodeField_IsActive_get, _riskuserapi.CShfeFtdcTradingCodeField_IsActive_set)
    ClientIDType: "TShfeFtdcClientIDTypeType" = property(_riskuserapi.CShfeFtdcTradingCodeField_ClientIDType_get, _riskuserapi.CShfeFtdcTradingCodeField_ClientIDType_set)

    def __eq__(self, ct: "CShfeFtdcTradingCodeField") -> "bool":
        return _riskuserapi.CShfeFtdcTradingCodeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTradingCodeField_swiginit(self, _riskuserapi.new_CShfeFtdcTradingCodeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTradingCodeField

# Register CShfeFtdcTradingCodeField in _riskuserapi:
_riskuserapi.CShfeFtdcTradingCodeField_swigregister(CShfeFtdcTradingCodeField)
class CShfeFtdcPartBrokerField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcPartBrokerField_BrokerID_get, _riskuserapi.CShfeFtdcPartBrokerField_BrokerID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcPartBrokerField_ExchangeID_get, _riskuserapi.CShfeFtdcPartBrokerField_ExchangeID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcPartBrokerField_ParticipantID_get, _riskuserapi.CShfeFtdcPartBrokerField_ParticipantID_set)
    IsActive: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcPartBrokerField_IsActive_get, _riskuserapi.CShfeFtdcPartBrokerField_IsActive_set)

    def __eq__(self, ct: "CShfeFtdcPartBrokerField") -> "bool":
        return _riskuserapi.CShfeFtdcPartBrokerField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcPartBrokerField_swiginit(self, _riskuserapi.new_CShfeFtdcPartBrokerField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcPartBrokerField

# Register CShfeFtdcPartBrokerField in _riskuserapi:
_riskuserapi.CShfeFtdcPartBrokerField_swigregister(CShfeFtdcPartBrokerField)
class CShfeFtdcSuperUserField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcSuperUserField_UserID_get, _riskuserapi.CShfeFtdcSuperUserField_UserID_set)
    UserName: "TShfeFtdcUserNameType" = property(_riskuserapi.CShfeFtdcSuperUserField_UserName_get, _riskuserapi.CShfeFtdcSuperUserField_UserName_set)
    Password: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcSuperUserField_Password_get, _riskuserapi.CShfeFtdcSuperUserField_Password_set)
    IsActive: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSuperUserField_IsActive_get, _riskuserapi.CShfeFtdcSuperUserField_IsActive_set)

    def __eq__(self, ct: "CShfeFtdcSuperUserField") -> "bool":
        return _riskuserapi.CShfeFtdcSuperUserField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSuperUserField_swiginit(self, _riskuserapi.new_CShfeFtdcSuperUserField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSuperUserField

# Register CShfeFtdcSuperUserField in _riskuserapi:
_riskuserapi.CShfeFtdcSuperUserField_swigregister(CShfeFtdcSuperUserField)
class CShfeFtdcSuperUserFunctionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcSuperUserFunctionField_UserID_get, _riskuserapi.CShfeFtdcSuperUserFunctionField_UserID_set)
    FunctionCode: "TShfeFtdcFunctionCodeType" = property(_riskuserapi.CShfeFtdcSuperUserFunctionField_FunctionCode_get, _riskuserapi.CShfeFtdcSuperUserFunctionField_FunctionCode_set)

    def __eq__(self, ct: "CShfeFtdcSuperUserFunctionField") -> "bool":
        return _riskuserapi.CShfeFtdcSuperUserFunctionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSuperUserFunctionField_swiginit(self, _riskuserapi.new_CShfeFtdcSuperUserFunctionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSuperUserFunctionField

# Register CShfeFtdcSuperUserFunctionField in _riskuserapi:
_riskuserapi.CShfeFtdcSuperUserFunctionField_swigregister(CShfeFtdcSuperUserFunctionField)
class CShfeFtdcInvestorGroupField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorGroupField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorGroupField_BrokerID_set)
    InvestorGroupID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorGroupField_InvestorGroupID_get, _riskuserapi.CShfeFtdcInvestorGroupField_InvestorGroupID_set)
    InvestorGroupName: "TShfeFtdcInvestorGroupNameType" = property(_riskuserapi.CShfeFtdcInvestorGroupField_InvestorGroupName_get, _riskuserapi.CShfeFtdcInvestorGroupField_InvestorGroupName_set)

    def __eq__(self, ct: "CShfeFtdcInvestorGroupField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorGroupField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorGroupField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorGroupField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorGroupField

# Register CShfeFtdcInvestorGroupField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorGroupField_swigregister(CShfeFtdcInvestorGroupField)
class CShfeFtdcTradingAccountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcTradingAccountField_BrokerID_get, _riskuserapi.CShfeFtdcTradingAccountField_BrokerID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcTradingAccountField_AccountID_get, _riskuserapi.CShfeFtdcTradingAccountField_AccountID_set)
    PreMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_PreMortgage_get, _riskuserapi.CShfeFtdcTradingAccountField_PreMortgage_set)
    PreCredit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_PreCredit_get, _riskuserapi.CShfeFtdcTradingAccountField_PreCredit_set)
    PreDeposit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_PreDeposit_get, _riskuserapi.CShfeFtdcTradingAccountField_PreDeposit_set)
    PreBalance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_PreBalance_get, _riskuserapi.CShfeFtdcTradingAccountField_PreBalance_set)
    PreMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_PreMargin_get, _riskuserapi.CShfeFtdcTradingAccountField_PreMargin_set)
    InterestBase: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_InterestBase_get, _riskuserapi.CShfeFtdcTradingAccountField_InterestBase_set)
    Interest: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_Interest_get, _riskuserapi.CShfeFtdcTradingAccountField_Interest_set)
    Deposit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_Deposit_get, _riskuserapi.CShfeFtdcTradingAccountField_Deposit_set)
    Withdraw: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_Withdraw_get, _riskuserapi.CShfeFtdcTradingAccountField_Withdraw_set)
    FrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_FrozenMargin_get, _riskuserapi.CShfeFtdcTradingAccountField_FrozenMargin_set)
    FrozenCash: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_FrozenCash_get, _riskuserapi.CShfeFtdcTradingAccountField_FrozenCash_set)
    FrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_FrozenCommission_get, _riskuserapi.CShfeFtdcTradingAccountField_FrozenCommission_set)
    CurrMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_CurrMargin_get, _riskuserapi.CShfeFtdcTradingAccountField_CurrMargin_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_CashIn_get, _riskuserapi.CShfeFtdcTradingAccountField_CashIn_set)
    Commission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_Commission_get, _riskuserapi.CShfeFtdcTradingAccountField_Commission_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_CloseProfit_get, _riskuserapi.CShfeFtdcTradingAccountField_CloseProfit_set)
    PositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_PositionProfit_get, _riskuserapi.CShfeFtdcTradingAccountField_PositionProfit_set)
    Balance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_Balance_get, _riskuserapi.CShfeFtdcTradingAccountField_Balance_set)
    Available: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_Available_get, _riskuserapi.CShfeFtdcTradingAccountField_Available_set)
    WithdrawQuota: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_WithdrawQuota_get, _riskuserapi.CShfeFtdcTradingAccountField_WithdrawQuota_set)
    Reserve: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_Reserve_get, _riskuserapi.CShfeFtdcTradingAccountField_Reserve_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcTradingAccountField_TradingDay_get, _riskuserapi.CShfeFtdcTradingAccountField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcTradingAccountField_SettlementID_get, _riskuserapi.CShfeFtdcTradingAccountField_SettlementID_set)
    Credit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_Credit_get, _riskuserapi.CShfeFtdcTradingAccountField_Credit_set)
    Mortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_Mortgage_get, _riskuserapi.CShfeFtdcTradingAccountField_Mortgage_set)
    ExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_ExchangeMargin_get, _riskuserapi.CShfeFtdcTradingAccountField_ExchangeMargin_set)
    DeliveryMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_DeliveryMargin_get, _riskuserapi.CShfeFtdcTradingAccountField_DeliveryMargin_set)
    ExchangeDeliveryMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_ExchangeDeliveryMargin_get, _riskuserapi.CShfeFtdcTradingAccountField_ExchangeDeliveryMargin_set)
    ReserveBalance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_ReserveBalance_get, _riskuserapi.CShfeFtdcTradingAccountField_ReserveBalance_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcTradingAccountField_CurrencyID_get, _riskuserapi.CShfeFtdcTradingAccountField_CurrencyID_set)
    PreFundMortgageIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_PreFundMortgageIn_get, _riskuserapi.CShfeFtdcTradingAccountField_PreFundMortgageIn_set)
    PreFundMortgageOut: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_PreFundMortgageOut_get, _riskuserapi.CShfeFtdcTradingAccountField_PreFundMortgageOut_set)
    FundMortgageIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_FundMortgageIn_get, _riskuserapi.CShfeFtdcTradingAccountField_FundMortgageIn_set)
    FundMortgageOut: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_FundMortgageOut_get, _riskuserapi.CShfeFtdcTradingAccountField_FundMortgageOut_set)
    FundMortgageAvailable: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_FundMortgageAvailable_get, _riskuserapi.CShfeFtdcTradingAccountField_FundMortgageAvailable_set)
    MortgageableFund: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_MortgageableFund_get, _riskuserapi.CShfeFtdcTradingAccountField_MortgageableFund_set)
    SpecProductMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_SpecProductMargin_get, _riskuserapi.CShfeFtdcTradingAccountField_SpecProductMargin_set)
    SpecProductFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_SpecProductFrozenMargin_get, _riskuserapi.CShfeFtdcTradingAccountField_SpecProductFrozenMargin_set)
    SpecProductCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_SpecProductCommission_get, _riskuserapi.CShfeFtdcTradingAccountField_SpecProductCommission_set)
    SpecProductFrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_SpecProductFrozenCommission_get, _riskuserapi.CShfeFtdcTradingAccountField_SpecProductFrozenCommission_set)
    SpecProductPositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_SpecProductPositionProfit_get, _riskuserapi.CShfeFtdcTradingAccountField_SpecProductPositionProfit_set)
    SpecProductCloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_SpecProductCloseProfit_get, _riskuserapi.CShfeFtdcTradingAccountField_SpecProductCloseProfit_set)
    SpecProductPositionProfitByAlg: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_SpecProductPositionProfitByAlg_get, _riskuserapi.CShfeFtdcTradingAccountField_SpecProductPositionProfitByAlg_set)
    SpecProductExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_SpecProductExchangeMargin_get, _riskuserapi.CShfeFtdcTradingAccountField_SpecProductExchangeMargin_set)
    FrozenSwap: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_FrozenSwap_get, _riskuserapi.CShfeFtdcTradingAccountField_FrozenSwap_set)
    RemainSwap: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_RemainSwap_get, _riskuserapi.CShfeFtdcTradingAccountField_RemainSwap_set)
    OptionCloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_OptionCloseProfit_get, _riskuserapi.CShfeFtdcTradingAccountField_OptionCloseProfit_set)
    OptionValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_OptionValue_get, _riskuserapi.CShfeFtdcTradingAccountField_OptionValue_set)
    NCombMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradingAccountField_NCombMargin_get, _riskuserapi.CShfeFtdcTradingAccountField_NCombMargin_set)

    def __eq__(self, ct: "CShfeFtdcTradingAccountField") -> "bool":
        return _riskuserapi.CShfeFtdcTradingAccountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTradingAccountField_swiginit(self, _riskuserapi.new_CShfeFtdcTradingAccountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTradingAccountField

# Register CShfeFtdcTradingAccountField in _riskuserapi:
_riskuserapi.CShfeFtdcTradingAccountField_swigregister(CShfeFtdcTradingAccountField)
class CShfeFtdcInvestorPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_InstrumentID_get, _riskuserapi.CShfeFtdcInvestorPositionField_InstrumentID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorPositionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorPositionField_InvestorID_set)
    PosiDirection: "TShfeFtdcPosiDirectionType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_PosiDirection_get, _riskuserapi.CShfeFtdcInvestorPositionField_PosiDirection_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_HedgeFlag_get, _riskuserapi.CShfeFtdcInvestorPositionField_HedgeFlag_set)
    PositionDate: "TShfeFtdcPositionDateType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_PositionDate_get, _riskuserapi.CShfeFtdcInvestorPositionField_PositionDate_set)
    YdPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_YdPosition_get, _riskuserapi.CShfeFtdcInvestorPositionField_YdPosition_set)
    Position: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_Position_get, _riskuserapi.CShfeFtdcInvestorPositionField_Position_set)
    LongFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_LongFrozen_get, _riskuserapi.CShfeFtdcInvestorPositionField_LongFrozen_set)
    ShortFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_ShortFrozen_get, _riskuserapi.CShfeFtdcInvestorPositionField_ShortFrozen_set)
    LongFrozenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_LongFrozenAmount_get, _riskuserapi.CShfeFtdcInvestorPositionField_LongFrozenAmount_set)
    ShortFrozenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_ShortFrozenAmount_get, _riskuserapi.CShfeFtdcInvestorPositionField_ShortFrozenAmount_set)
    OpenVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_OpenVolume_get, _riskuserapi.CShfeFtdcInvestorPositionField_OpenVolume_set)
    CloseVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_CloseVolume_get, _riskuserapi.CShfeFtdcInvestorPositionField_CloseVolume_set)
    OpenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_OpenAmount_get, _riskuserapi.CShfeFtdcInvestorPositionField_OpenAmount_set)
    CloseAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_CloseAmount_get, _riskuserapi.CShfeFtdcInvestorPositionField_CloseAmount_set)
    PositionCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_PositionCost_get, _riskuserapi.CShfeFtdcInvestorPositionField_PositionCost_set)
    PreMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_PreMargin_get, _riskuserapi.CShfeFtdcInvestorPositionField_PreMargin_set)
    UseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_UseMargin_get, _riskuserapi.CShfeFtdcInvestorPositionField_UseMargin_set)
    FrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_FrozenMargin_get, _riskuserapi.CShfeFtdcInvestorPositionField_FrozenMargin_set)
    FrozenCash: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_FrozenCash_get, _riskuserapi.CShfeFtdcInvestorPositionField_FrozenCash_set)
    FrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_FrozenCommission_get, _riskuserapi.CShfeFtdcInvestorPositionField_FrozenCommission_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_CashIn_get, _riskuserapi.CShfeFtdcInvestorPositionField_CashIn_set)
    Commission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_Commission_get, _riskuserapi.CShfeFtdcInvestorPositionField_Commission_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_CloseProfit_get, _riskuserapi.CShfeFtdcInvestorPositionField_CloseProfit_set)
    PositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_PositionProfit_get, _riskuserapi.CShfeFtdcInvestorPositionField_PositionProfit_set)
    PreSettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_PreSettlementPrice_get, _riskuserapi.CShfeFtdcInvestorPositionField_PreSettlementPrice_set)
    SettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_SettlementPrice_get, _riskuserapi.CShfeFtdcInvestorPositionField_SettlementPrice_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_TradingDay_get, _riskuserapi.CShfeFtdcInvestorPositionField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_SettlementID_get, _riskuserapi.CShfeFtdcInvestorPositionField_SettlementID_set)
    OpenCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_OpenCost_get, _riskuserapi.CShfeFtdcInvestorPositionField_OpenCost_set)
    ExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_ExchangeMargin_get, _riskuserapi.CShfeFtdcInvestorPositionField_ExchangeMargin_set)
    CombPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_CombPosition_get, _riskuserapi.CShfeFtdcInvestorPositionField_CombPosition_set)
    CombLongFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_CombLongFrozen_get, _riskuserapi.CShfeFtdcInvestorPositionField_CombLongFrozen_set)
    CombShortFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_CombShortFrozen_get, _riskuserapi.CShfeFtdcInvestorPositionField_CombShortFrozen_set)
    CloseProfitByDate: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_CloseProfitByDate_get, _riskuserapi.CShfeFtdcInvestorPositionField_CloseProfitByDate_set)
    CloseProfitByTrade: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_CloseProfitByTrade_get, _riskuserapi.CShfeFtdcInvestorPositionField_CloseProfitByTrade_set)
    TodayPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_TodayPosition_get, _riskuserapi.CShfeFtdcInvestorPositionField_TodayPosition_set)
    MarginRateByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_MarginRateByMoney_get, _riskuserapi.CShfeFtdcInvestorPositionField_MarginRateByMoney_set)
    MarginRateByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_MarginRateByVolume_get, _riskuserapi.CShfeFtdcInvestorPositionField_MarginRateByVolume_set)
    StrikeFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_StrikeFrozen_get, _riskuserapi.CShfeFtdcInvestorPositionField_StrikeFrozen_set)
    StrikeFrozenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_StrikeFrozenAmount_get, _riskuserapi.CShfeFtdcInvestorPositionField_StrikeFrozenAmount_set)
    AbandonFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_AbandonFrozen_get, _riskuserapi.CShfeFtdcInvestorPositionField_AbandonFrozen_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_ExchangeID_get, _riskuserapi.CShfeFtdcInvestorPositionField_ExchangeID_set)
    YdStrikeFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_YdStrikeFrozen_get, _riskuserapi.CShfeFtdcInvestorPositionField_YdStrikeFrozen_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_InvestUnitID_get, _riskuserapi.CShfeFtdcInvestorPositionField_InvestUnitID_set)
    OptionValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_OptionValue_get, _riskuserapi.CShfeFtdcInvestorPositionField_OptionValue_set)
    PositionCostOffset: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_PositionCostOffset_get, _riskuserapi.CShfeFtdcInvestorPositionField_PositionCostOffset_set)
    TasPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_TasPosition_get, _riskuserapi.CShfeFtdcInvestorPositionField_TasPosition_set)
    TasPositionCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionField_TasPositionCost_get, _riskuserapi.CShfeFtdcInvestorPositionField_TasPositionCost_set)

    def __eq__(self, ct: "CShfeFtdcInvestorPositionField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorPositionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorPositionField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorPositionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorPositionField

# Register CShfeFtdcInvestorPositionField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorPositionField_swigregister(CShfeFtdcInvestorPositionField)
class CShfeFtdcInstrumentMarginRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateField_InstrumentID_get, _riskuserapi.CShfeFtdcInstrumentMarginRateField_InstrumentID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateField_InvestorRange_get, _riskuserapi.CShfeFtdcInstrumentMarginRateField_InvestorRange_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateField_BrokerID_get, _riskuserapi.CShfeFtdcInstrumentMarginRateField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateField_InvestorID_get, _riskuserapi.CShfeFtdcInstrumentMarginRateField_InvestorID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateField_HedgeFlag_get, _riskuserapi.CShfeFtdcInstrumentMarginRateField_HedgeFlag_set)
    LongMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateField_LongMarginRatioByMoney_get, _riskuserapi.CShfeFtdcInstrumentMarginRateField_LongMarginRatioByMoney_set)
    LongMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateField_LongMarginRatioByVolume_get, _riskuserapi.CShfeFtdcInstrumentMarginRateField_LongMarginRatioByVolume_set)
    ShortMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_get, _riskuserapi.CShfeFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_set)
    ShortMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_get, _riskuserapi.CShfeFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_set)
    IsRelative: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateField_IsRelative_get, _riskuserapi.CShfeFtdcInstrumentMarginRateField_IsRelative_set)

    def __eq__(self, ct: "CShfeFtdcInstrumentMarginRateField") -> "bool":
        return _riskuserapi.CShfeFtdcInstrumentMarginRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInstrumentMarginRateField_swiginit(self, _riskuserapi.new_CShfeFtdcInstrumentMarginRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInstrumentMarginRateField

# Register CShfeFtdcInstrumentMarginRateField in _riskuserapi:
_riskuserapi.CShfeFtdcInstrumentMarginRateField_swigregister(CShfeFtdcInstrumentMarginRateField)
class CShfeFtdcInstrumentCommissionRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInstrumentCommissionRateField_InstrumentID_get, _riskuserapi.CShfeFtdcInstrumentCommissionRateField_InstrumentID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcInstrumentCommissionRateField_InvestorRange_get, _riskuserapi.CShfeFtdcInstrumentCommissionRateField_InvestorRange_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInstrumentCommissionRateField_BrokerID_get, _riskuserapi.CShfeFtdcInstrumentCommissionRateField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInstrumentCommissionRateField_InvestorID_get, _riskuserapi.CShfeFtdcInstrumentCommissionRateField_InvestorID_set)
    OpenRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInstrumentCommissionRateField_OpenRatioByMoney_get, _riskuserapi.CShfeFtdcInstrumentCommissionRateField_OpenRatioByMoney_set)
    OpenRatioByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInstrumentCommissionRateField_OpenRatioByVolume_get, _riskuserapi.CShfeFtdcInstrumentCommissionRateField_OpenRatioByVolume_set)
    CloseRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInstrumentCommissionRateField_CloseRatioByMoney_get, _riskuserapi.CShfeFtdcInstrumentCommissionRateField_CloseRatioByMoney_set)
    CloseRatioByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInstrumentCommissionRateField_CloseRatioByVolume_get, _riskuserapi.CShfeFtdcInstrumentCommissionRateField_CloseRatioByVolume_set)
    CloseTodayRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_get, _riskuserapi.CShfeFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_set)
    CloseTodayRatioByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_get, _riskuserapi.CShfeFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_set)

    def __eq__(self, ct: "CShfeFtdcInstrumentCommissionRateField") -> "bool":
        return _riskuserapi.CShfeFtdcInstrumentCommissionRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInstrumentCommissionRateField_swiginit(self, _riskuserapi.new_CShfeFtdcInstrumentCommissionRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInstrumentCommissionRateField

# Register CShfeFtdcInstrumentCommissionRateField in _riskuserapi:
_riskuserapi.CShfeFtdcInstrumentCommissionRateField_swigregister(CShfeFtdcInstrumentCommissionRateField)
class CShfeFtdcDepthMarketDataField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_TradingDay_get, _riskuserapi.CShfeFtdcDepthMarketDataField_TradingDay_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_InstrumentID_get, _riskuserapi.CShfeFtdcDepthMarketDataField_InstrumentID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_ExchangeID_get, _riskuserapi.CShfeFtdcDepthMarketDataField_ExchangeID_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_ExchangeInstID_get, _riskuserapi.CShfeFtdcDepthMarketDataField_ExchangeInstID_set)
    LastPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_LastPrice_get, _riskuserapi.CShfeFtdcDepthMarketDataField_LastPrice_set)
    PreSettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_PreSettlementPrice_get, _riskuserapi.CShfeFtdcDepthMarketDataField_PreSettlementPrice_set)
    PreClosePrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_PreClosePrice_get, _riskuserapi.CShfeFtdcDepthMarketDataField_PreClosePrice_set)
    PreOpenInterest: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_PreOpenInterest_get, _riskuserapi.CShfeFtdcDepthMarketDataField_PreOpenInterest_set)
    OpenPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_OpenPrice_get, _riskuserapi.CShfeFtdcDepthMarketDataField_OpenPrice_set)
    HighestPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_HighestPrice_get, _riskuserapi.CShfeFtdcDepthMarketDataField_HighestPrice_set)
    LowestPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_LowestPrice_get, _riskuserapi.CShfeFtdcDepthMarketDataField_LowestPrice_set)
    Volume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_Volume_get, _riskuserapi.CShfeFtdcDepthMarketDataField_Volume_set)
    Turnover: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_Turnover_get, _riskuserapi.CShfeFtdcDepthMarketDataField_Turnover_set)
    OpenInterest: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_OpenInterest_get, _riskuserapi.CShfeFtdcDepthMarketDataField_OpenInterest_set)
    ClosePrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_ClosePrice_get, _riskuserapi.CShfeFtdcDepthMarketDataField_ClosePrice_set)
    SettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_SettlementPrice_get, _riskuserapi.CShfeFtdcDepthMarketDataField_SettlementPrice_set)
    UpperLimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_UpperLimitPrice_get, _riskuserapi.CShfeFtdcDepthMarketDataField_UpperLimitPrice_set)
    LowerLimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_LowerLimitPrice_get, _riskuserapi.CShfeFtdcDepthMarketDataField_LowerLimitPrice_set)
    PreDelta: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_PreDelta_get, _riskuserapi.CShfeFtdcDepthMarketDataField_PreDelta_set)
    CurrDelta: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_CurrDelta_get, _riskuserapi.CShfeFtdcDepthMarketDataField_CurrDelta_set)
    UpdateTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_UpdateTime_get, _riskuserapi.CShfeFtdcDepthMarketDataField_UpdateTime_set)
    UpdateMillisec: "TShfeFtdcMillisecType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_UpdateMillisec_get, _riskuserapi.CShfeFtdcDepthMarketDataField_UpdateMillisec_set)
    BidPrice1: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_BidPrice1_get, _riskuserapi.CShfeFtdcDepthMarketDataField_BidPrice1_set)
    BidVolume1: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_BidVolume1_get, _riskuserapi.CShfeFtdcDepthMarketDataField_BidVolume1_set)
    AskPrice1: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_AskPrice1_get, _riskuserapi.CShfeFtdcDepthMarketDataField_AskPrice1_set)
    AskVolume1: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_AskVolume1_get, _riskuserapi.CShfeFtdcDepthMarketDataField_AskVolume1_set)
    BidPrice2: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_BidPrice2_get, _riskuserapi.CShfeFtdcDepthMarketDataField_BidPrice2_set)
    BidVolume2: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_BidVolume2_get, _riskuserapi.CShfeFtdcDepthMarketDataField_BidVolume2_set)
    AskPrice2: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_AskPrice2_get, _riskuserapi.CShfeFtdcDepthMarketDataField_AskPrice2_set)
    AskVolume2: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_AskVolume2_get, _riskuserapi.CShfeFtdcDepthMarketDataField_AskVolume2_set)
    BidPrice3: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_BidPrice3_get, _riskuserapi.CShfeFtdcDepthMarketDataField_BidPrice3_set)
    BidVolume3: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_BidVolume3_get, _riskuserapi.CShfeFtdcDepthMarketDataField_BidVolume3_set)
    AskPrice3: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_AskPrice3_get, _riskuserapi.CShfeFtdcDepthMarketDataField_AskPrice3_set)
    AskVolume3: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_AskVolume3_get, _riskuserapi.CShfeFtdcDepthMarketDataField_AskVolume3_set)
    BidPrice4: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_BidPrice4_get, _riskuserapi.CShfeFtdcDepthMarketDataField_BidPrice4_set)
    BidVolume4: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_BidVolume4_get, _riskuserapi.CShfeFtdcDepthMarketDataField_BidVolume4_set)
    AskPrice4: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_AskPrice4_get, _riskuserapi.CShfeFtdcDepthMarketDataField_AskPrice4_set)
    AskVolume4: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_AskVolume4_get, _riskuserapi.CShfeFtdcDepthMarketDataField_AskVolume4_set)
    BidPrice5: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_BidPrice5_get, _riskuserapi.CShfeFtdcDepthMarketDataField_BidPrice5_set)
    BidVolume5: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_BidVolume5_get, _riskuserapi.CShfeFtdcDepthMarketDataField_BidVolume5_set)
    AskPrice5: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_AskPrice5_get, _riskuserapi.CShfeFtdcDepthMarketDataField_AskPrice5_set)
    AskVolume5: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_AskVolume5_get, _riskuserapi.CShfeFtdcDepthMarketDataField_AskVolume5_set)
    AveragePrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_AveragePrice_get, _riskuserapi.CShfeFtdcDepthMarketDataField_AveragePrice_set)
    ActionDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_ActionDay_get, _riskuserapi.CShfeFtdcDepthMarketDataField_ActionDay_set)
    BandingUpperPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_BandingUpperPrice_get, _riskuserapi.CShfeFtdcDepthMarketDataField_BandingUpperPrice_set)
    BandingLowerPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketDataField_BandingLowerPrice_get, _riskuserapi.CShfeFtdcDepthMarketDataField_BandingLowerPrice_set)

    def __eq__(self, ct: "CShfeFtdcDepthMarketDataField") -> "bool":
        return _riskuserapi.CShfeFtdcDepthMarketDataField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcDepthMarketDataField_swiginit(self, _riskuserapi.new_CShfeFtdcDepthMarketDataField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcDepthMarketDataField

# Register CShfeFtdcDepthMarketDataField in _riskuserapi:
_riskuserapi.CShfeFtdcDepthMarketDataField_swigregister(CShfeFtdcDepthMarketDataField)
class CShfeFtdcInstrumentTradingRightField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInstrumentTradingRightField_InstrumentID_get, _riskuserapi.CShfeFtdcInstrumentTradingRightField_InstrumentID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcInstrumentTradingRightField_InvestorRange_get, _riskuserapi.CShfeFtdcInstrumentTradingRightField_InvestorRange_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInstrumentTradingRightField_BrokerID_get, _riskuserapi.CShfeFtdcInstrumentTradingRightField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInstrumentTradingRightField_InvestorID_get, _riskuserapi.CShfeFtdcInstrumentTradingRightField_InvestorID_set)
    TradingRight: "TShfeFtdcTradingRightType" = property(_riskuserapi.CShfeFtdcInstrumentTradingRightField_TradingRight_get, _riskuserapi.CShfeFtdcInstrumentTradingRightField_TradingRight_set)

    def __eq__(self, ct: "CShfeFtdcInstrumentTradingRightField") -> "bool":
        return _riskuserapi.CShfeFtdcInstrumentTradingRightField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInstrumentTradingRightField_swiginit(self, _riskuserapi.new_CShfeFtdcInstrumentTradingRightField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInstrumentTradingRightField

# Register CShfeFtdcInstrumentTradingRightField in _riskuserapi:
_riskuserapi.CShfeFtdcInstrumentTradingRightField_swigregister(CShfeFtdcInstrumentTradingRightField)
class CShfeFtdcBrokerUserField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcBrokerUserField_BrokerID_get, _riskuserapi.CShfeFtdcBrokerUserField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcBrokerUserField_UserID_get, _riskuserapi.CShfeFtdcBrokerUserField_UserID_set)
    UserName: "TShfeFtdcUserNameType" = property(_riskuserapi.CShfeFtdcBrokerUserField_UserName_get, _riskuserapi.CShfeFtdcBrokerUserField_UserName_set)
    UserType: "TShfeFtdcUserTypeType" = property(_riskuserapi.CShfeFtdcBrokerUserField_UserType_get, _riskuserapi.CShfeFtdcBrokerUserField_UserType_set)
    IsActive: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcBrokerUserField_IsActive_get, _riskuserapi.CShfeFtdcBrokerUserField_IsActive_set)
    IsUsingOTP: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcBrokerUserField_IsUsingOTP_get, _riskuserapi.CShfeFtdcBrokerUserField_IsUsingOTP_set)
    IsAuthForce: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcBrokerUserField_IsAuthForce_get, _riskuserapi.CShfeFtdcBrokerUserField_IsAuthForce_set)

    def __eq__(self, ct: "CShfeFtdcBrokerUserField") -> "bool":
        return _riskuserapi.CShfeFtdcBrokerUserField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcBrokerUserField_swiginit(self, _riskuserapi.new_CShfeFtdcBrokerUserField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcBrokerUserField

# Register CShfeFtdcBrokerUserField in _riskuserapi:
_riskuserapi.CShfeFtdcBrokerUserField_swigregister(CShfeFtdcBrokerUserField)
class CShfeFtdcBrokerUserPasswordField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcBrokerUserPasswordField_BrokerID_get, _riskuserapi.CShfeFtdcBrokerUserPasswordField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcBrokerUserPasswordField_UserID_get, _riskuserapi.CShfeFtdcBrokerUserPasswordField_UserID_set)
    Password: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcBrokerUserPasswordField_Password_get, _riskuserapi.CShfeFtdcBrokerUserPasswordField_Password_set)
    LastUpdateTime: "TShfeFtdcDateTimeType" = property(_riskuserapi.CShfeFtdcBrokerUserPasswordField_LastUpdateTime_get, _riskuserapi.CShfeFtdcBrokerUserPasswordField_LastUpdateTime_set)
    LastLoginTime: "TShfeFtdcDateTimeType" = property(_riskuserapi.CShfeFtdcBrokerUserPasswordField_LastLoginTime_get, _riskuserapi.CShfeFtdcBrokerUserPasswordField_LastLoginTime_set)
    ExpireDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcBrokerUserPasswordField_ExpireDate_get, _riskuserapi.CShfeFtdcBrokerUserPasswordField_ExpireDate_set)
    WeakExpireDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcBrokerUserPasswordField_WeakExpireDate_get, _riskuserapi.CShfeFtdcBrokerUserPasswordField_WeakExpireDate_set)

    def __eq__(self, ct: "CShfeFtdcBrokerUserPasswordField") -> "bool":
        return _riskuserapi.CShfeFtdcBrokerUserPasswordField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcBrokerUserPasswordField_swiginit(self, _riskuserapi.new_CShfeFtdcBrokerUserPasswordField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcBrokerUserPasswordField

# Register CShfeFtdcBrokerUserPasswordField in _riskuserapi:
_riskuserapi.CShfeFtdcBrokerUserPasswordField_swigregister(CShfeFtdcBrokerUserPasswordField)
class CShfeFtdcBrokerUserFunctionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcBrokerUserFunctionField_BrokerID_get, _riskuserapi.CShfeFtdcBrokerUserFunctionField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcBrokerUserFunctionField_UserID_get, _riskuserapi.CShfeFtdcBrokerUserFunctionField_UserID_set)
    BrokerFunctionCode: "TShfeFtdcBrokerFunctionCodeType" = property(_riskuserapi.CShfeFtdcBrokerUserFunctionField_BrokerFunctionCode_get, _riskuserapi.CShfeFtdcBrokerUserFunctionField_BrokerFunctionCode_set)

    def __eq__(self, ct: "CShfeFtdcBrokerUserFunctionField") -> "bool":
        return _riskuserapi.CShfeFtdcBrokerUserFunctionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcBrokerUserFunctionField_swiginit(self, _riskuserapi.new_CShfeFtdcBrokerUserFunctionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcBrokerUserFunctionField

# Register CShfeFtdcBrokerUserFunctionField in _riskuserapi:
_riskuserapi.CShfeFtdcBrokerUserFunctionField_swigregister(CShfeFtdcBrokerUserFunctionField)
class CShfeFtdcTraderOfferField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcTraderOfferField_ExchangeID_get, _riskuserapi.CShfeFtdcTraderOfferField_ExchangeID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcTraderOfferField_TraderID_get, _riskuserapi.CShfeFtdcTraderOfferField_TraderID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcTraderOfferField_ParticipantID_get, _riskuserapi.CShfeFtdcTraderOfferField_ParticipantID_set)
    Password: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcTraderOfferField_Password_get, _riskuserapi.CShfeFtdcTraderOfferField_Password_set)
    InstallID: "TShfeFtdcInstallIDType" = property(_riskuserapi.CShfeFtdcTraderOfferField_InstallID_get, _riskuserapi.CShfeFtdcTraderOfferField_InstallID_set)
    OrderLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcTraderOfferField_OrderLocalID_get, _riskuserapi.CShfeFtdcTraderOfferField_OrderLocalID_set)
    TraderConnectStatus: "TShfeFtdcTraderConnectStatusType" = property(_riskuserapi.CShfeFtdcTraderOfferField_TraderConnectStatus_get, _riskuserapi.CShfeFtdcTraderOfferField_TraderConnectStatus_set)
    ConnectRequestDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcTraderOfferField_ConnectRequestDate_get, _riskuserapi.CShfeFtdcTraderOfferField_ConnectRequestDate_set)
    ConnectRequestTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcTraderOfferField_ConnectRequestTime_get, _riskuserapi.CShfeFtdcTraderOfferField_ConnectRequestTime_set)
    LastReportDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcTraderOfferField_LastReportDate_get, _riskuserapi.CShfeFtdcTraderOfferField_LastReportDate_set)
    LastReportTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcTraderOfferField_LastReportTime_get, _riskuserapi.CShfeFtdcTraderOfferField_LastReportTime_set)
    ConnectDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcTraderOfferField_ConnectDate_get, _riskuserapi.CShfeFtdcTraderOfferField_ConnectDate_set)
    ConnectTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcTraderOfferField_ConnectTime_get, _riskuserapi.CShfeFtdcTraderOfferField_ConnectTime_set)
    StartDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcTraderOfferField_StartDate_get, _riskuserapi.CShfeFtdcTraderOfferField_StartDate_set)
    StartTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcTraderOfferField_StartTime_get, _riskuserapi.CShfeFtdcTraderOfferField_StartTime_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcTraderOfferField_TradingDay_get, _riskuserapi.CShfeFtdcTraderOfferField_TradingDay_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcTraderOfferField_BrokerID_get, _riskuserapi.CShfeFtdcTraderOfferField_BrokerID_set)
    MaxTradeID: "TShfeFtdcTradeIDType" = property(_riskuserapi.CShfeFtdcTraderOfferField_MaxTradeID_get, _riskuserapi.CShfeFtdcTraderOfferField_MaxTradeID_set)
    MaxOrderMessageReference: "TShfeFtdcReturnCodeType" = property(_riskuserapi.CShfeFtdcTraderOfferField_MaxOrderMessageReference_get, _riskuserapi.CShfeFtdcTraderOfferField_MaxOrderMessageReference_set)
    OrderCancelAlg: "TShfeFtdcOrderCancelAlgType" = property(_riskuserapi.CShfeFtdcTraderOfferField_OrderCancelAlg_get, _riskuserapi.CShfeFtdcTraderOfferField_OrderCancelAlg_set)

    def __eq__(self, ct: "CShfeFtdcTraderOfferField") -> "bool":
        return _riskuserapi.CShfeFtdcTraderOfferField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTraderOfferField_swiginit(self, _riskuserapi.new_CShfeFtdcTraderOfferField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTraderOfferField

# Register CShfeFtdcTraderOfferField in _riskuserapi:
_riskuserapi.CShfeFtdcTraderOfferField_swigregister(CShfeFtdcTraderOfferField)
class CShfeFtdcSettlementInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSettlementInfoField_TradingDay_get, _riskuserapi.CShfeFtdcSettlementInfoField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcSettlementInfoField_SettlementID_get, _riskuserapi.CShfeFtdcSettlementInfoField_SettlementID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSettlementInfoField_BrokerID_get, _riskuserapi.CShfeFtdcSettlementInfoField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSettlementInfoField_InvestorID_get, _riskuserapi.CShfeFtdcSettlementInfoField_InvestorID_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSettlementInfoField_SequenceNo_get, _riskuserapi.CShfeFtdcSettlementInfoField_SequenceNo_set)
    Content: "TShfeFtdcContentType" = property(_riskuserapi.CShfeFtdcSettlementInfoField_Content_get, _riskuserapi.CShfeFtdcSettlementInfoField_Content_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcSettlementInfoField_AccountID_get, _riskuserapi.CShfeFtdcSettlementInfoField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcSettlementInfoField_CurrencyID_get, _riskuserapi.CShfeFtdcSettlementInfoField_CurrencyID_set)

    def __eq__(self, ct: "CShfeFtdcSettlementInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcSettlementInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSettlementInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcSettlementInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSettlementInfoField

# Register CShfeFtdcSettlementInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcSettlementInfoField_swigregister(CShfeFtdcSettlementInfoField)
class CShfeFtdcInstrumentMarginRateAdjustField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_InstrumentID_get, _riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_InstrumentID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_InvestorRange_get, _riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_InvestorRange_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_BrokerID_get, _riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_InvestorID_get, _riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_InvestorID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_HedgeFlag_get, _riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_HedgeFlag_set)
    LongMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_get, _riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_set)
    LongMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_get, _riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_set)
    ShortMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_get, _riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_set)
    ShortMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_get, _riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_set)
    IsRelative: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_IsRelative_get, _riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_IsRelative_set)

    def __eq__(self, ct: "CShfeFtdcInstrumentMarginRateAdjustField") -> "bool":
        return _riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_swiginit(self, _riskuserapi.new_CShfeFtdcInstrumentMarginRateAdjustField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInstrumentMarginRateAdjustField

# Register CShfeFtdcInstrumentMarginRateAdjustField in _riskuserapi:
_riskuserapi.CShfeFtdcInstrumentMarginRateAdjustField_swigregister(CShfeFtdcInstrumentMarginRateAdjustField)
class CShfeFtdcExchangeMarginRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateField_BrokerID_get, _riskuserapi.CShfeFtdcExchangeMarginRateField_BrokerID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateField_InstrumentID_get, _riskuserapi.CShfeFtdcExchangeMarginRateField_InstrumentID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateField_HedgeFlag_get, _riskuserapi.CShfeFtdcExchangeMarginRateField_HedgeFlag_set)
    LongMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateField_LongMarginRatioByMoney_get, _riskuserapi.CShfeFtdcExchangeMarginRateField_LongMarginRatioByMoney_set)
    LongMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateField_LongMarginRatioByVolume_get, _riskuserapi.CShfeFtdcExchangeMarginRateField_LongMarginRatioByVolume_set)
    ShortMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateField_ShortMarginRatioByMoney_get, _riskuserapi.CShfeFtdcExchangeMarginRateField_ShortMarginRatioByMoney_set)
    ShortMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateField_ShortMarginRatioByVolume_get, _riskuserapi.CShfeFtdcExchangeMarginRateField_ShortMarginRatioByVolume_set)

    def __eq__(self, ct: "CShfeFtdcExchangeMarginRateField") -> "bool":
        return _riskuserapi.CShfeFtdcExchangeMarginRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcExchangeMarginRateField_swiginit(self, _riskuserapi.new_CShfeFtdcExchangeMarginRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcExchangeMarginRateField

# Register CShfeFtdcExchangeMarginRateField in _riskuserapi:
_riskuserapi.CShfeFtdcExchangeMarginRateField_swigregister(CShfeFtdcExchangeMarginRateField)
class CShfeFtdcExchangeMarginRateAdjustField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_BrokerID_get, _riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_BrokerID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_InstrumentID_get, _riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_InstrumentID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_HedgeFlag_get, _riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_HedgeFlag_set)
    LongMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_get, _riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_set)
    LongMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_get, _riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_set)
    ShortMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_get, _riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_set)
    ShortMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_get, _riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_set)
    ExchLongMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_get, _riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_set)
    ExchLongMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_get, _riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_set)
    ExchShortMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_get, _riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_set)
    ExchShortMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_get, _riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_set)
    NoLongMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_get, _riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_set)
    NoLongMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_get, _riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_set)
    NoShortMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_get, _riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_set)
    NoShortMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_get, _riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_set)

    def __eq__(self, ct: "CShfeFtdcExchangeMarginRateAdjustField") -> "bool":
        return _riskuserapi.CShfeFtdcExchangeMarginRateAdjustField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_swiginit(self, _riskuserapi.new_CShfeFtdcExchangeMarginRateAdjustField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcExchangeMarginRateAdjustField

# Register CShfeFtdcExchangeMarginRateAdjustField in _riskuserapi:
_riskuserapi.CShfeFtdcExchangeMarginRateAdjustField_swigregister(CShfeFtdcExchangeMarginRateAdjustField)
class CShfeFtdcSettlementRefField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSettlementRefField_TradingDay_get, _riskuserapi.CShfeFtdcSettlementRefField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcSettlementRefField_SettlementID_get, _riskuserapi.CShfeFtdcSettlementRefField_SettlementID_set)

    def __eq__(self, ct: "CShfeFtdcSettlementRefField") -> "bool":
        return _riskuserapi.CShfeFtdcSettlementRefField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSettlementRefField_swiginit(self, _riskuserapi.new_CShfeFtdcSettlementRefField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSettlementRefField

# Register CShfeFtdcSettlementRefField in _riskuserapi:
_riskuserapi.CShfeFtdcSettlementRefField_swigregister(CShfeFtdcSettlementRefField)
class CShfeFtdcCurrentTimeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CurrDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcCurrentTimeField_CurrDate_get, _riskuserapi.CShfeFtdcCurrentTimeField_CurrDate_set)
    CurrTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcCurrentTimeField_CurrTime_get, _riskuserapi.CShfeFtdcCurrentTimeField_CurrTime_set)
    CurrMillisec: "TShfeFtdcMillisecType" = property(_riskuserapi.CShfeFtdcCurrentTimeField_CurrMillisec_get, _riskuserapi.CShfeFtdcCurrentTimeField_CurrMillisec_set)
    ActionDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcCurrentTimeField_ActionDay_get, _riskuserapi.CShfeFtdcCurrentTimeField_ActionDay_set)

    def __eq__(self, ct: "CShfeFtdcCurrentTimeField") -> "bool":
        return _riskuserapi.CShfeFtdcCurrentTimeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcCurrentTimeField_swiginit(self, _riskuserapi.new_CShfeFtdcCurrentTimeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcCurrentTimeField

# Register CShfeFtdcCurrentTimeField in _riskuserapi:
_riskuserapi.CShfeFtdcCurrentTimeField_swigregister(CShfeFtdcCurrentTimeField)
class CShfeFtdcCommPhaseField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcCommPhaseField_TradingDay_get, _riskuserapi.CShfeFtdcCommPhaseField_TradingDay_set)
    CommPhaseNo: "TShfeFtdcCommPhaseNoType" = property(_riskuserapi.CShfeFtdcCommPhaseField_CommPhaseNo_get, _riskuserapi.CShfeFtdcCommPhaseField_CommPhaseNo_set)
    SystemID: "TShfeFtdcSystemIDType" = property(_riskuserapi.CShfeFtdcCommPhaseField_SystemID_get, _riskuserapi.CShfeFtdcCommPhaseField_SystemID_set)

    def __eq__(self, ct: "CShfeFtdcCommPhaseField") -> "bool":
        return _riskuserapi.CShfeFtdcCommPhaseField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcCommPhaseField_swiginit(self, _riskuserapi.new_CShfeFtdcCommPhaseField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcCommPhaseField

# Register CShfeFtdcCommPhaseField in _riskuserapi:
_riskuserapi.CShfeFtdcCommPhaseField_swigregister(CShfeFtdcCommPhaseField)
class CShfeFtdcLoginInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcLoginInfoField_FrontID_get, _riskuserapi.CShfeFtdcLoginInfoField_FrontID_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcLoginInfoField_SessionID_get, _riskuserapi.CShfeFtdcLoginInfoField_SessionID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcLoginInfoField_BrokerID_get, _riskuserapi.CShfeFtdcLoginInfoField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcLoginInfoField_UserID_get, _riskuserapi.CShfeFtdcLoginInfoField_UserID_set)
    LoginDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcLoginInfoField_LoginDate_get, _riskuserapi.CShfeFtdcLoginInfoField_LoginDate_set)
    LoginTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcLoginInfoField_LoginTime_get, _riskuserapi.CShfeFtdcLoginInfoField_LoginTime_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcLoginInfoField_IPAddress_get, _riskuserapi.CShfeFtdcLoginInfoField_IPAddress_set)
    UserProductInfo: "TShfeFtdcProductInfoType" = property(_riskuserapi.CShfeFtdcLoginInfoField_UserProductInfo_get, _riskuserapi.CShfeFtdcLoginInfoField_UserProductInfo_set)
    InterfaceProductInfo: "TShfeFtdcProductInfoType" = property(_riskuserapi.CShfeFtdcLoginInfoField_InterfaceProductInfo_get, _riskuserapi.CShfeFtdcLoginInfoField_InterfaceProductInfo_set)
    ProtocolInfo: "TShfeFtdcProtocolInfoType" = property(_riskuserapi.CShfeFtdcLoginInfoField_ProtocolInfo_get, _riskuserapi.CShfeFtdcLoginInfoField_ProtocolInfo_set)
    SystemName: "TShfeFtdcSystemNameType" = property(_riskuserapi.CShfeFtdcLoginInfoField_SystemName_get, _riskuserapi.CShfeFtdcLoginInfoField_SystemName_set)
    PasswordDeprecated: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcLoginInfoField_PasswordDeprecated_get, _riskuserapi.CShfeFtdcLoginInfoField_PasswordDeprecated_set)
    MaxOrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcLoginInfoField_MaxOrderRef_get, _riskuserapi.CShfeFtdcLoginInfoField_MaxOrderRef_set)
    SHFETime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcLoginInfoField_SHFETime_get, _riskuserapi.CShfeFtdcLoginInfoField_SHFETime_set)
    DCETime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcLoginInfoField_DCETime_get, _riskuserapi.CShfeFtdcLoginInfoField_DCETime_set)
    CZCETime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcLoginInfoField_CZCETime_get, _riskuserapi.CShfeFtdcLoginInfoField_CZCETime_set)
    FFEXTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcLoginInfoField_FFEXTime_get, _riskuserapi.CShfeFtdcLoginInfoField_FFEXTime_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcLoginInfoField_MacAddress_get, _riskuserapi.CShfeFtdcLoginInfoField_MacAddress_set)
    OneTimePassword: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcLoginInfoField_OneTimePassword_get, _riskuserapi.CShfeFtdcLoginInfoField_OneTimePassword_set)
    INETime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcLoginInfoField_INETime_get, _riskuserapi.CShfeFtdcLoginInfoField_INETime_set)
    IsQryControl: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcLoginInfoField_IsQryControl_get, _riskuserapi.CShfeFtdcLoginInfoField_IsQryControl_set)
    LoginRemark: "TShfeFtdcLoginRemarkType" = property(_riskuserapi.CShfeFtdcLoginInfoField_LoginRemark_get, _riskuserapi.CShfeFtdcLoginInfoField_LoginRemark_set)
    Password: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcLoginInfoField_Password_get, _riskuserapi.CShfeFtdcLoginInfoField_Password_set)
    SysVersion: "TShfeFtdcSysVersionType" = property(_riskuserapi.CShfeFtdcLoginInfoField_SysVersion_get, _riskuserapi.CShfeFtdcLoginInfoField_SysVersion_set)
    GFEXTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcLoginInfoField_GFEXTime_get, _riskuserapi.CShfeFtdcLoginInfoField_GFEXTime_set)
    LoginDRIdentityID: "TShfeFtdcDRIdentityIDType" = property(_riskuserapi.CShfeFtdcLoginInfoField_LoginDRIdentityID_get, _riskuserapi.CShfeFtdcLoginInfoField_LoginDRIdentityID_set)
    UserDRIdentityID: "TShfeFtdcDRIdentityIDType" = property(_riskuserapi.CShfeFtdcLoginInfoField_UserDRIdentityID_get, _riskuserapi.CShfeFtdcLoginInfoField_UserDRIdentityID_set)

    def __eq__(self, ct: "CShfeFtdcLoginInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcLoginInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcLoginInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcLoginInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcLoginInfoField

# Register CShfeFtdcLoginInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcLoginInfoField_swigregister(CShfeFtdcLoginInfoField)
class CShfeFtdcLogoutAllField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcLogoutAllField_FrontID_get, _riskuserapi.CShfeFtdcLogoutAllField_FrontID_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcLogoutAllField_SessionID_get, _riskuserapi.CShfeFtdcLogoutAllField_SessionID_set)
    SystemName: "TShfeFtdcSystemNameType" = property(_riskuserapi.CShfeFtdcLogoutAllField_SystemName_get, _riskuserapi.CShfeFtdcLogoutAllField_SystemName_set)

    def __eq__(self, ct: "CShfeFtdcLogoutAllField") -> "bool":
        return _riskuserapi.CShfeFtdcLogoutAllField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcLogoutAllField_swiginit(self, _riskuserapi.new_CShfeFtdcLogoutAllField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcLogoutAllField

# Register CShfeFtdcLogoutAllField in _riskuserapi:
_riskuserapi.CShfeFtdcLogoutAllField_swigregister(CShfeFtdcLogoutAllField)
class CShfeFtdcFrontStatusField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcFrontStatusField_FrontID_get, _riskuserapi.CShfeFtdcFrontStatusField_FrontID_set)
    LastReportDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcFrontStatusField_LastReportDate_get, _riskuserapi.CShfeFtdcFrontStatusField_LastReportDate_set)
    LastReportTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcFrontStatusField_LastReportTime_get, _riskuserapi.CShfeFtdcFrontStatusField_LastReportTime_set)
    IsActive: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcFrontStatusField_IsActive_get, _riskuserapi.CShfeFtdcFrontStatusField_IsActive_set)

    def __eq__(self, ct: "CShfeFtdcFrontStatusField") -> "bool":
        return _riskuserapi.CShfeFtdcFrontStatusField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcFrontStatusField_swiginit(self, _riskuserapi.new_CShfeFtdcFrontStatusField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcFrontStatusField

# Register CShfeFtdcFrontStatusField in _riskuserapi:
_riskuserapi.CShfeFtdcFrontStatusField_swigregister(CShfeFtdcFrontStatusField)
class CShfeFtdcUserPasswordUpdateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcUserPasswordUpdateField_BrokerID_get, _riskuserapi.CShfeFtdcUserPasswordUpdateField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcUserPasswordUpdateField_UserID_get, _riskuserapi.CShfeFtdcUserPasswordUpdateField_UserID_set)
    OldPassword: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcUserPasswordUpdateField_OldPassword_get, _riskuserapi.CShfeFtdcUserPasswordUpdateField_OldPassword_set)
    NewPassword: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcUserPasswordUpdateField_NewPassword_get, _riskuserapi.CShfeFtdcUserPasswordUpdateField_NewPassword_set)

    def __eq__(self, ct: "CShfeFtdcUserPasswordUpdateField") -> "bool":
        return _riskuserapi.CShfeFtdcUserPasswordUpdateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcUserPasswordUpdateField_swiginit(self, _riskuserapi.new_CShfeFtdcUserPasswordUpdateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcUserPasswordUpdateField

# Register CShfeFtdcUserPasswordUpdateField in _riskuserapi:
_riskuserapi.CShfeFtdcUserPasswordUpdateField_swigregister(CShfeFtdcUserPasswordUpdateField)
class CShfeFtdcInputOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInputOrderField_BrokerID_get, _riskuserapi.CShfeFtdcInputOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInputOrderField_InvestorID_get, _riskuserapi.CShfeFtdcInputOrderField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInputOrderField_InstrumentID_get, _riskuserapi.CShfeFtdcInputOrderField_InstrumentID_set)
    OrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcInputOrderField_OrderRef_get, _riskuserapi.CShfeFtdcInputOrderField_OrderRef_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcInputOrderField_UserID_get, _riskuserapi.CShfeFtdcInputOrderField_UserID_set)
    OrderPriceType: "TShfeFtdcOrderPriceTypeType" = property(_riskuserapi.CShfeFtdcInputOrderField_OrderPriceType_get, _riskuserapi.CShfeFtdcInputOrderField_OrderPriceType_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcInputOrderField_Direction_get, _riskuserapi.CShfeFtdcInputOrderField_Direction_set)
    CombOffsetFlag: "TShfeFtdcCombOffsetFlagType" = property(_riskuserapi.CShfeFtdcInputOrderField_CombOffsetFlag_get, _riskuserapi.CShfeFtdcInputOrderField_CombOffsetFlag_set)
    CombHedgeFlag: "TShfeFtdcCombHedgeFlagType" = property(_riskuserapi.CShfeFtdcInputOrderField_CombHedgeFlag_get, _riskuserapi.CShfeFtdcInputOrderField_CombHedgeFlag_set)
    LimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcInputOrderField_LimitPrice_get, _riskuserapi.CShfeFtdcInputOrderField_LimitPrice_set)
    VolumeTotalOriginal: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInputOrderField_VolumeTotalOriginal_get, _riskuserapi.CShfeFtdcInputOrderField_VolumeTotalOriginal_set)
    TimeCondition: "TShfeFtdcTimeConditionType" = property(_riskuserapi.CShfeFtdcInputOrderField_TimeCondition_get, _riskuserapi.CShfeFtdcInputOrderField_TimeCondition_set)
    GTDDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcInputOrderField_GTDDate_get, _riskuserapi.CShfeFtdcInputOrderField_GTDDate_set)
    VolumeCondition: "TShfeFtdcVolumeConditionType" = property(_riskuserapi.CShfeFtdcInputOrderField_VolumeCondition_get, _riskuserapi.CShfeFtdcInputOrderField_VolumeCondition_set)
    MinVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInputOrderField_MinVolume_get, _riskuserapi.CShfeFtdcInputOrderField_MinVolume_set)
    ContingentCondition: "TShfeFtdcContingentConditionType" = property(_riskuserapi.CShfeFtdcInputOrderField_ContingentCondition_get, _riskuserapi.CShfeFtdcInputOrderField_ContingentCondition_set)
    StopPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcInputOrderField_StopPrice_get, _riskuserapi.CShfeFtdcInputOrderField_StopPrice_set)
    ForceCloseReason: "TShfeFtdcForceCloseReasonType" = property(_riskuserapi.CShfeFtdcInputOrderField_ForceCloseReason_get, _riskuserapi.CShfeFtdcInputOrderField_ForceCloseReason_set)
    IsAutoSuspend: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcInputOrderField_IsAutoSuspend_get, _riskuserapi.CShfeFtdcInputOrderField_IsAutoSuspend_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcInputOrderField_BusinessUnit_get, _riskuserapi.CShfeFtdcInputOrderField_BusinessUnit_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcInputOrderField_RequestID_get, _riskuserapi.CShfeFtdcInputOrderField_RequestID_set)
    UserForceClose: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcInputOrderField_UserForceClose_get, _riskuserapi.CShfeFtdcInputOrderField_UserForceClose_set)
    IsSwapOrder: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcInputOrderField_IsSwapOrder_get, _riskuserapi.CShfeFtdcInputOrderField_IsSwapOrder_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcInputOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcInputOrderField_ExchangeID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcInputOrderField_InvestUnitID_get, _riskuserapi.CShfeFtdcInputOrderField_InvestUnitID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcInputOrderField_AccountID_get, _riskuserapi.CShfeFtdcInputOrderField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcInputOrderField_CurrencyID_get, _riskuserapi.CShfeFtdcInputOrderField_CurrencyID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcInputOrderField_ClientID_get, _riskuserapi.CShfeFtdcInputOrderField_ClientID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcInputOrderField_IPAddress_get, _riskuserapi.CShfeFtdcInputOrderField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcInputOrderField_MacAddress_get, _riskuserapi.CShfeFtdcInputOrderField_MacAddress_set)
    OrderMemo: "TShfeFtdcOrderMemoType" = property(_riskuserapi.CShfeFtdcInputOrderField_OrderMemo_get, _riskuserapi.CShfeFtdcInputOrderField_OrderMemo_set)
    SessionReqSeq: "TShfeFtdcSequenceNo12Type" = property(_riskuserapi.CShfeFtdcInputOrderField_SessionReqSeq_get, _riskuserapi.CShfeFtdcInputOrderField_SessionReqSeq_set)

    def __eq__(self, ct: "CShfeFtdcInputOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcInputOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInputOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcInputOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInputOrderField

# Register CShfeFtdcInputOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcInputOrderField_swigregister(CShfeFtdcInputOrderField)
class CShfeFtdcOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcOrderField_BrokerID_get, _riskuserapi.CShfeFtdcOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcOrderField_InvestorID_get, _riskuserapi.CShfeFtdcOrderField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcOrderField_InstrumentID_get, _riskuserapi.CShfeFtdcOrderField_InstrumentID_set)
    OrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcOrderField_OrderRef_get, _riskuserapi.CShfeFtdcOrderField_OrderRef_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcOrderField_UserID_get, _riskuserapi.CShfeFtdcOrderField_UserID_set)
    OrderPriceType: "TShfeFtdcOrderPriceTypeType" = property(_riskuserapi.CShfeFtdcOrderField_OrderPriceType_get, _riskuserapi.CShfeFtdcOrderField_OrderPriceType_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcOrderField_Direction_get, _riskuserapi.CShfeFtdcOrderField_Direction_set)
    CombOffsetFlag: "TShfeFtdcCombOffsetFlagType" = property(_riskuserapi.CShfeFtdcOrderField_CombOffsetFlag_get, _riskuserapi.CShfeFtdcOrderField_CombOffsetFlag_set)
    CombHedgeFlag: "TShfeFtdcCombHedgeFlagType" = property(_riskuserapi.CShfeFtdcOrderField_CombHedgeFlag_get, _riskuserapi.CShfeFtdcOrderField_CombHedgeFlag_set)
    LimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcOrderField_LimitPrice_get, _riskuserapi.CShfeFtdcOrderField_LimitPrice_set)
    VolumeTotalOriginal: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOrderField_VolumeTotalOriginal_get, _riskuserapi.CShfeFtdcOrderField_VolumeTotalOriginal_set)
    TimeCondition: "TShfeFtdcTimeConditionType" = property(_riskuserapi.CShfeFtdcOrderField_TimeCondition_get, _riskuserapi.CShfeFtdcOrderField_TimeCondition_set)
    GTDDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcOrderField_GTDDate_get, _riskuserapi.CShfeFtdcOrderField_GTDDate_set)
    VolumeCondition: "TShfeFtdcVolumeConditionType" = property(_riskuserapi.CShfeFtdcOrderField_VolumeCondition_get, _riskuserapi.CShfeFtdcOrderField_VolumeCondition_set)
    MinVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOrderField_MinVolume_get, _riskuserapi.CShfeFtdcOrderField_MinVolume_set)
    ContingentCondition: "TShfeFtdcContingentConditionType" = property(_riskuserapi.CShfeFtdcOrderField_ContingentCondition_get, _riskuserapi.CShfeFtdcOrderField_ContingentCondition_set)
    StopPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcOrderField_StopPrice_get, _riskuserapi.CShfeFtdcOrderField_StopPrice_set)
    ForceCloseReason: "TShfeFtdcForceCloseReasonType" = property(_riskuserapi.CShfeFtdcOrderField_ForceCloseReason_get, _riskuserapi.CShfeFtdcOrderField_ForceCloseReason_set)
    IsAutoSuspend: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcOrderField_IsAutoSuspend_get, _riskuserapi.CShfeFtdcOrderField_IsAutoSuspend_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcOrderField_BusinessUnit_get, _riskuserapi.CShfeFtdcOrderField_BusinessUnit_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcOrderField_RequestID_get, _riskuserapi.CShfeFtdcOrderField_RequestID_set)
    OrderLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcOrderField_OrderLocalID_get, _riskuserapi.CShfeFtdcOrderField_OrderLocalID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcOrderField_ExchangeID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcOrderField_ParticipantID_get, _riskuserapi.CShfeFtdcOrderField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcOrderField_ClientID_get, _riskuserapi.CShfeFtdcOrderField_ClientID_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcOrderField_ExchangeInstID_get, _riskuserapi.CShfeFtdcOrderField_ExchangeInstID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcOrderField_TraderID_get, _riskuserapi.CShfeFtdcOrderField_TraderID_set)
    InstallID: "TShfeFtdcInstallIDType" = property(_riskuserapi.CShfeFtdcOrderField_InstallID_get, _riskuserapi.CShfeFtdcOrderField_InstallID_set)
    OrderSubmitStatus: "TShfeFtdcOrderSubmitStatusType" = property(_riskuserapi.CShfeFtdcOrderField_OrderSubmitStatus_get, _riskuserapi.CShfeFtdcOrderField_OrderSubmitStatus_set)
    NotifySequence: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcOrderField_NotifySequence_get, _riskuserapi.CShfeFtdcOrderField_NotifySequence_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcOrderField_TradingDay_get, _riskuserapi.CShfeFtdcOrderField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcOrderField_SettlementID_get, _riskuserapi.CShfeFtdcOrderField_SettlementID_set)
    OrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcOrderField_OrderSysID_get, _riskuserapi.CShfeFtdcOrderField_OrderSysID_set)
    OrderSource: "TShfeFtdcOrderSourceType" = property(_riskuserapi.CShfeFtdcOrderField_OrderSource_get, _riskuserapi.CShfeFtdcOrderField_OrderSource_set)
    OrderStatus: "TShfeFtdcOrderStatusType" = property(_riskuserapi.CShfeFtdcOrderField_OrderStatus_get, _riskuserapi.CShfeFtdcOrderField_OrderStatus_set)
    OrderType: "TShfeFtdcOrderTypeType" = property(_riskuserapi.CShfeFtdcOrderField_OrderType_get, _riskuserapi.CShfeFtdcOrderField_OrderType_set)
    VolumeTraded: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOrderField_VolumeTraded_get, _riskuserapi.CShfeFtdcOrderField_VolumeTraded_set)
    VolumeTotal: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOrderField_VolumeTotal_get, _riskuserapi.CShfeFtdcOrderField_VolumeTotal_set)
    InsertDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcOrderField_InsertDate_get, _riskuserapi.CShfeFtdcOrderField_InsertDate_set)
    InsertTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcOrderField_InsertTime_get, _riskuserapi.CShfeFtdcOrderField_InsertTime_set)
    ActiveTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcOrderField_ActiveTime_get, _riskuserapi.CShfeFtdcOrderField_ActiveTime_set)
    SuspendTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcOrderField_SuspendTime_get, _riskuserapi.CShfeFtdcOrderField_SuspendTime_set)
    UpdateTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcOrderField_UpdateTime_get, _riskuserapi.CShfeFtdcOrderField_UpdateTime_set)
    CancelTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcOrderField_CancelTime_get, _riskuserapi.CShfeFtdcOrderField_CancelTime_set)
    ActiveTraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcOrderField_ActiveTraderID_get, _riskuserapi.CShfeFtdcOrderField_ActiveTraderID_set)
    ClearingPartID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcOrderField_ClearingPartID_get, _riskuserapi.CShfeFtdcOrderField_ClearingPartID_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcOrderField_SequenceNo_get, _riskuserapi.CShfeFtdcOrderField_SequenceNo_set)
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcOrderField_FrontID_get, _riskuserapi.CShfeFtdcOrderField_FrontID_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcOrderField_SessionID_get, _riskuserapi.CShfeFtdcOrderField_SessionID_set)
    UserProductInfo: "TShfeFtdcProductInfoType" = property(_riskuserapi.CShfeFtdcOrderField_UserProductInfo_get, _riskuserapi.CShfeFtdcOrderField_UserProductInfo_set)
    StatusMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcOrderField_StatusMsg_get, _riskuserapi.CShfeFtdcOrderField_StatusMsg_set)
    UserForceClose: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcOrderField_UserForceClose_get, _riskuserapi.CShfeFtdcOrderField_UserForceClose_set)
    ActiveUserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcOrderField_ActiveUserID_get, _riskuserapi.CShfeFtdcOrderField_ActiveUserID_set)
    BrokerOrderSeq: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcOrderField_BrokerOrderSeq_get, _riskuserapi.CShfeFtdcOrderField_BrokerOrderSeq_set)
    RelativeOrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcOrderField_RelativeOrderSysID_get, _riskuserapi.CShfeFtdcOrderField_RelativeOrderSysID_set)
    ZCETotalTradedVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOrderField_ZCETotalTradedVolume_get, _riskuserapi.CShfeFtdcOrderField_ZCETotalTradedVolume_set)
    IsSwapOrder: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcOrderField_IsSwapOrder_get, _riskuserapi.CShfeFtdcOrderField_IsSwapOrder_set)
    BranchID: "TShfeFtdcBranchIDType" = property(_riskuserapi.CShfeFtdcOrderField_BranchID_get, _riskuserapi.CShfeFtdcOrderField_BranchID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcOrderField_InvestUnitID_get, _riskuserapi.CShfeFtdcOrderField_InvestUnitID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcOrderField_AccountID_get, _riskuserapi.CShfeFtdcOrderField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcOrderField_CurrencyID_get, _riskuserapi.CShfeFtdcOrderField_CurrencyID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcOrderField_IPAddress_get, _riskuserapi.CShfeFtdcOrderField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcOrderField_MacAddress_get, _riskuserapi.CShfeFtdcOrderField_MacAddress_set)
    AppID: "TShfeFtdcAppIDType" = property(_riskuserapi.CShfeFtdcOrderField_AppID_get, _riskuserapi.CShfeFtdcOrderField_AppID_set)
    OrderMemo: "TShfeFtdcOrderMemoType" = property(_riskuserapi.CShfeFtdcOrderField_OrderMemo_get, _riskuserapi.CShfeFtdcOrderField_OrderMemo_set)
    SessionReqSeq: "TShfeFtdcSequenceNo12Type" = property(_riskuserapi.CShfeFtdcOrderField_SessionReqSeq_get, _riskuserapi.CShfeFtdcOrderField_SessionReqSeq_set)

    def __eq__(self, ct: "CShfeFtdcOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcOrderField

# Register CShfeFtdcOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcOrderField_swigregister(CShfeFtdcOrderField)
class CShfeFtdcExchangeOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    OrderPriceType: "TShfeFtdcOrderPriceTypeType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_OrderPriceType_get, _riskuserapi.CShfeFtdcExchangeOrderField_OrderPriceType_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_Direction_get, _riskuserapi.CShfeFtdcExchangeOrderField_Direction_set)
    CombOffsetFlag: "TShfeFtdcCombOffsetFlagType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_CombOffsetFlag_get, _riskuserapi.CShfeFtdcExchangeOrderField_CombOffsetFlag_set)
    CombHedgeFlag: "TShfeFtdcCombHedgeFlagType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_CombHedgeFlag_get, _riskuserapi.CShfeFtdcExchangeOrderField_CombHedgeFlag_set)
    LimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_LimitPrice_get, _riskuserapi.CShfeFtdcExchangeOrderField_LimitPrice_set)
    VolumeTotalOriginal: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_VolumeTotalOriginal_get, _riskuserapi.CShfeFtdcExchangeOrderField_VolumeTotalOriginal_set)
    TimeCondition: "TShfeFtdcTimeConditionType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_TimeCondition_get, _riskuserapi.CShfeFtdcExchangeOrderField_TimeCondition_set)
    GTDDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_GTDDate_get, _riskuserapi.CShfeFtdcExchangeOrderField_GTDDate_set)
    VolumeCondition: "TShfeFtdcVolumeConditionType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_VolumeCondition_get, _riskuserapi.CShfeFtdcExchangeOrderField_VolumeCondition_set)
    MinVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_MinVolume_get, _riskuserapi.CShfeFtdcExchangeOrderField_MinVolume_set)
    ContingentCondition: "TShfeFtdcContingentConditionType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_ContingentCondition_get, _riskuserapi.CShfeFtdcExchangeOrderField_ContingentCondition_set)
    StopPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_StopPrice_get, _riskuserapi.CShfeFtdcExchangeOrderField_StopPrice_set)
    ForceCloseReason: "TShfeFtdcForceCloseReasonType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_ForceCloseReason_get, _riskuserapi.CShfeFtdcExchangeOrderField_ForceCloseReason_set)
    IsAutoSuspend: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_IsAutoSuspend_get, _riskuserapi.CShfeFtdcExchangeOrderField_IsAutoSuspend_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_BusinessUnit_get, _riskuserapi.CShfeFtdcExchangeOrderField_BusinessUnit_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_RequestID_get, _riskuserapi.CShfeFtdcExchangeOrderField_RequestID_set)
    OrderLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_OrderLocalID_get, _riskuserapi.CShfeFtdcExchangeOrderField_OrderLocalID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcExchangeOrderField_ExchangeID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_ParticipantID_get, _riskuserapi.CShfeFtdcExchangeOrderField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_ClientID_get, _riskuserapi.CShfeFtdcExchangeOrderField_ClientID_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_ExchangeInstID_get, _riskuserapi.CShfeFtdcExchangeOrderField_ExchangeInstID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_TraderID_get, _riskuserapi.CShfeFtdcExchangeOrderField_TraderID_set)
    InstallID: "TShfeFtdcInstallIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_InstallID_get, _riskuserapi.CShfeFtdcExchangeOrderField_InstallID_set)
    OrderSubmitStatus: "TShfeFtdcOrderSubmitStatusType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_OrderSubmitStatus_get, _riskuserapi.CShfeFtdcExchangeOrderField_OrderSubmitStatus_set)
    NotifySequence: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_NotifySequence_get, _riskuserapi.CShfeFtdcExchangeOrderField_NotifySequence_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_TradingDay_get, _riskuserapi.CShfeFtdcExchangeOrderField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_SettlementID_get, _riskuserapi.CShfeFtdcExchangeOrderField_SettlementID_set)
    OrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_OrderSysID_get, _riskuserapi.CShfeFtdcExchangeOrderField_OrderSysID_set)
    OrderSource: "TShfeFtdcOrderSourceType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_OrderSource_get, _riskuserapi.CShfeFtdcExchangeOrderField_OrderSource_set)
    OrderStatus: "TShfeFtdcOrderStatusType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_OrderStatus_get, _riskuserapi.CShfeFtdcExchangeOrderField_OrderStatus_set)
    OrderType: "TShfeFtdcOrderTypeType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_OrderType_get, _riskuserapi.CShfeFtdcExchangeOrderField_OrderType_set)
    VolumeTraded: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_VolumeTraded_get, _riskuserapi.CShfeFtdcExchangeOrderField_VolumeTraded_set)
    VolumeTotal: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_VolumeTotal_get, _riskuserapi.CShfeFtdcExchangeOrderField_VolumeTotal_set)
    InsertDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_InsertDate_get, _riskuserapi.CShfeFtdcExchangeOrderField_InsertDate_set)
    InsertTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_InsertTime_get, _riskuserapi.CShfeFtdcExchangeOrderField_InsertTime_set)
    ActiveTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_ActiveTime_get, _riskuserapi.CShfeFtdcExchangeOrderField_ActiveTime_set)
    SuspendTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_SuspendTime_get, _riskuserapi.CShfeFtdcExchangeOrderField_SuspendTime_set)
    UpdateTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_UpdateTime_get, _riskuserapi.CShfeFtdcExchangeOrderField_UpdateTime_set)
    CancelTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_CancelTime_get, _riskuserapi.CShfeFtdcExchangeOrderField_CancelTime_set)
    ActiveTraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_ActiveTraderID_get, _riskuserapi.CShfeFtdcExchangeOrderField_ActiveTraderID_set)
    ClearingPartID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_ClearingPartID_get, _riskuserapi.CShfeFtdcExchangeOrderField_ClearingPartID_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_SequenceNo_get, _riskuserapi.CShfeFtdcExchangeOrderField_SequenceNo_set)
    BranchID: "TShfeFtdcBranchIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_BranchID_get, _riskuserapi.CShfeFtdcExchangeOrderField_BranchID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_IPAddress_get, _riskuserapi.CShfeFtdcExchangeOrderField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcExchangeOrderField_MacAddress_get, _riskuserapi.CShfeFtdcExchangeOrderField_MacAddress_set)

    def __eq__(self, ct: "CShfeFtdcExchangeOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcExchangeOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcExchangeOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcExchangeOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcExchangeOrderField

# Register CShfeFtdcExchangeOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcExchangeOrderField_swigregister(CShfeFtdcExchangeOrderField)
class CShfeFtdcExchangeOrderInsertErrorField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderInsertErrorField_ExchangeID_get, _riskuserapi.CShfeFtdcExchangeOrderInsertErrorField_ExchangeID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderInsertErrorField_ParticipantID_get, _riskuserapi.CShfeFtdcExchangeOrderInsertErrorField_ParticipantID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderInsertErrorField_TraderID_get, _riskuserapi.CShfeFtdcExchangeOrderInsertErrorField_TraderID_set)
    InstallID: "TShfeFtdcInstallIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderInsertErrorField_InstallID_get, _riskuserapi.CShfeFtdcExchangeOrderInsertErrorField_InstallID_set)
    OrderLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderInsertErrorField_OrderLocalID_get, _riskuserapi.CShfeFtdcExchangeOrderInsertErrorField_OrderLocalID_set)
    ErrorID: "TShfeFtdcErrorIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderInsertErrorField_ErrorID_get, _riskuserapi.CShfeFtdcExchangeOrderInsertErrorField_ErrorID_set)
    ErrorMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcExchangeOrderInsertErrorField_ErrorMsg_get, _riskuserapi.CShfeFtdcExchangeOrderInsertErrorField_ErrorMsg_set)

    def __eq__(self, ct: "CShfeFtdcExchangeOrderInsertErrorField") -> "bool":
        return _riskuserapi.CShfeFtdcExchangeOrderInsertErrorField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcExchangeOrderInsertErrorField_swiginit(self, _riskuserapi.new_CShfeFtdcExchangeOrderInsertErrorField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcExchangeOrderInsertErrorField

# Register CShfeFtdcExchangeOrderInsertErrorField in _riskuserapi:
_riskuserapi.CShfeFtdcExchangeOrderInsertErrorField_swigregister(CShfeFtdcExchangeOrderInsertErrorField)
class CShfeFtdcInputOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInputOrderActionField_BrokerID_get, _riskuserapi.CShfeFtdcInputOrderActionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInputOrderActionField_InvestorID_get, _riskuserapi.CShfeFtdcInputOrderActionField_InvestorID_set)
    OrderActionRef: "TShfeFtdcOrderActionRefType" = property(_riskuserapi.CShfeFtdcInputOrderActionField_OrderActionRef_get, _riskuserapi.CShfeFtdcInputOrderActionField_OrderActionRef_set)
    OrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcInputOrderActionField_OrderRef_get, _riskuserapi.CShfeFtdcInputOrderActionField_OrderRef_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcInputOrderActionField_RequestID_get, _riskuserapi.CShfeFtdcInputOrderActionField_RequestID_set)
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcInputOrderActionField_FrontID_get, _riskuserapi.CShfeFtdcInputOrderActionField_FrontID_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcInputOrderActionField_SessionID_get, _riskuserapi.CShfeFtdcInputOrderActionField_SessionID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcInputOrderActionField_ExchangeID_get, _riskuserapi.CShfeFtdcInputOrderActionField_ExchangeID_set)
    OrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcInputOrderActionField_OrderSysID_get, _riskuserapi.CShfeFtdcInputOrderActionField_OrderSysID_set)
    ActionFlag: "TShfeFtdcActionFlagType" = property(_riskuserapi.CShfeFtdcInputOrderActionField_ActionFlag_get, _riskuserapi.CShfeFtdcInputOrderActionField_ActionFlag_set)
    LimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcInputOrderActionField_LimitPrice_get, _riskuserapi.CShfeFtdcInputOrderActionField_LimitPrice_set)
    VolumeChange: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInputOrderActionField_VolumeChange_get, _riskuserapi.CShfeFtdcInputOrderActionField_VolumeChange_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcInputOrderActionField_UserID_get, _riskuserapi.CShfeFtdcInputOrderActionField_UserID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInputOrderActionField_InstrumentID_get, _riskuserapi.CShfeFtdcInputOrderActionField_InstrumentID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcInputOrderActionField_InvestUnitID_get, _riskuserapi.CShfeFtdcInputOrderActionField_InvestUnitID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcInputOrderActionField_IPAddress_get, _riskuserapi.CShfeFtdcInputOrderActionField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcInputOrderActionField_MacAddress_get, _riskuserapi.CShfeFtdcInputOrderActionField_MacAddress_set)
    OrderMemo: "TShfeFtdcOrderMemoType" = property(_riskuserapi.CShfeFtdcInputOrderActionField_OrderMemo_get, _riskuserapi.CShfeFtdcInputOrderActionField_OrderMemo_set)
    SessionReqSeq: "TShfeFtdcSequenceNo12Type" = property(_riskuserapi.CShfeFtdcInputOrderActionField_SessionReqSeq_get, _riskuserapi.CShfeFtdcInputOrderActionField_SessionReqSeq_set)

    def __eq__(self, ct: "CShfeFtdcInputOrderActionField") -> "bool":
        return _riskuserapi.CShfeFtdcInputOrderActionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInputOrderActionField_swiginit(self, _riskuserapi.new_CShfeFtdcInputOrderActionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInputOrderActionField

# Register CShfeFtdcInputOrderActionField in _riskuserapi:
_riskuserapi.CShfeFtdcInputOrderActionField_swigregister(CShfeFtdcInputOrderActionField)
class CShfeFtdcOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcOrderActionField_BrokerID_get, _riskuserapi.CShfeFtdcOrderActionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcOrderActionField_InvestorID_get, _riskuserapi.CShfeFtdcOrderActionField_InvestorID_set)
    OrderActionRef: "TShfeFtdcOrderActionRefType" = property(_riskuserapi.CShfeFtdcOrderActionField_OrderActionRef_get, _riskuserapi.CShfeFtdcOrderActionField_OrderActionRef_set)
    OrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcOrderActionField_OrderRef_get, _riskuserapi.CShfeFtdcOrderActionField_OrderRef_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcOrderActionField_RequestID_get, _riskuserapi.CShfeFtdcOrderActionField_RequestID_set)
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcOrderActionField_FrontID_get, _riskuserapi.CShfeFtdcOrderActionField_FrontID_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcOrderActionField_SessionID_get, _riskuserapi.CShfeFtdcOrderActionField_SessionID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcOrderActionField_ExchangeID_get, _riskuserapi.CShfeFtdcOrderActionField_ExchangeID_set)
    OrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcOrderActionField_OrderSysID_get, _riskuserapi.CShfeFtdcOrderActionField_OrderSysID_set)
    ActionFlag: "TShfeFtdcActionFlagType" = property(_riskuserapi.CShfeFtdcOrderActionField_ActionFlag_get, _riskuserapi.CShfeFtdcOrderActionField_ActionFlag_set)
    LimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcOrderActionField_LimitPrice_get, _riskuserapi.CShfeFtdcOrderActionField_LimitPrice_set)
    VolumeChange: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOrderActionField_VolumeChange_get, _riskuserapi.CShfeFtdcOrderActionField_VolumeChange_set)
    ActionDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcOrderActionField_ActionDate_get, _riskuserapi.CShfeFtdcOrderActionField_ActionDate_set)
    ActionTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcOrderActionField_ActionTime_get, _riskuserapi.CShfeFtdcOrderActionField_ActionTime_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcOrderActionField_TraderID_get, _riskuserapi.CShfeFtdcOrderActionField_TraderID_set)
    InstallID: "TShfeFtdcInstallIDType" = property(_riskuserapi.CShfeFtdcOrderActionField_InstallID_get, _riskuserapi.CShfeFtdcOrderActionField_InstallID_set)
    OrderLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcOrderActionField_OrderLocalID_get, _riskuserapi.CShfeFtdcOrderActionField_OrderLocalID_set)
    ActionLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcOrderActionField_ActionLocalID_get, _riskuserapi.CShfeFtdcOrderActionField_ActionLocalID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcOrderActionField_ParticipantID_get, _riskuserapi.CShfeFtdcOrderActionField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcOrderActionField_ClientID_get, _riskuserapi.CShfeFtdcOrderActionField_ClientID_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcOrderActionField_BusinessUnit_get, _riskuserapi.CShfeFtdcOrderActionField_BusinessUnit_set)
    OrderActionStatus: "TShfeFtdcOrderActionStatusType" = property(_riskuserapi.CShfeFtdcOrderActionField_OrderActionStatus_get, _riskuserapi.CShfeFtdcOrderActionField_OrderActionStatus_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcOrderActionField_UserID_get, _riskuserapi.CShfeFtdcOrderActionField_UserID_set)
    StatusMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcOrderActionField_StatusMsg_get, _riskuserapi.CShfeFtdcOrderActionField_StatusMsg_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcOrderActionField_InstrumentID_get, _riskuserapi.CShfeFtdcOrderActionField_InstrumentID_set)
    BranchID: "TShfeFtdcBranchIDType" = property(_riskuserapi.CShfeFtdcOrderActionField_BranchID_get, _riskuserapi.CShfeFtdcOrderActionField_BranchID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcOrderActionField_InvestUnitID_get, _riskuserapi.CShfeFtdcOrderActionField_InvestUnitID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcOrderActionField_IPAddress_get, _riskuserapi.CShfeFtdcOrderActionField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcOrderActionField_MacAddress_get, _riskuserapi.CShfeFtdcOrderActionField_MacAddress_set)
    OrderMemo: "TShfeFtdcOrderMemoType" = property(_riskuserapi.CShfeFtdcOrderActionField_OrderMemo_get, _riskuserapi.CShfeFtdcOrderActionField_OrderMemo_set)
    SessionReqSeq: "TShfeFtdcSequenceNo12Type" = property(_riskuserapi.CShfeFtdcOrderActionField_SessionReqSeq_get, _riskuserapi.CShfeFtdcOrderActionField_SessionReqSeq_set)

    def __eq__(self, ct: "CShfeFtdcOrderActionField") -> "bool":
        return _riskuserapi.CShfeFtdcOrderActionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcOrderActionField_swiginit(self, _riskuserapi.new_CShfeFtdcOrderActionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcOrderActionField

# Register CShfeFtdcOrderActionField in _riskuserapi:
_riskuserapi.CShfeFtdcOrderActionField_swigregister(CShfeFtdcOrderActionField)
class CShfeFtdcExchangeOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_ExchangeID_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_ExchangeID_set)
    OrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_OrderSysID_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_OrderSysID_set)
    ActionFlag: "TShfeFtdcActionFlagType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_ActionFlag_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_ActionFlag_set)
    LimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_LimitPrice_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_LimitPrice_set)
    VolumeChange: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_VolumeChange_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_VolumeChange_set)
    ActionDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_ActionDate_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_ActionDate_set)
    ActionTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_ActionTime_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_ActionTime_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_TraderID_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_TraderID_set)
    InstallID: "TShfeFtdcInstallIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_InstallID_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_InstallID_set)
    OrderLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_OrderLocalID_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_OrderLocalID_set)
    ActionLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_ActionLocalID_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_ActionLocalID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_ParticipantID_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_ClientID_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_ClientID_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_BusinessUnit_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_BusinessUnit_set)
    OrderActionStatus: "TShfeFtdcOrderActionStatusType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_OrderActionStatus_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_OrderActionStatus_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_UserID_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_UserID_set)
    BranchID: "TShfeFtdcBranchIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_BranchID_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_BranchID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_IPAddress_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionField_MacAddress_get, _riskuserapi.CShfeFtdcExchangeOrderActionField_MacAddress_set)

    def __eq__(self, ct: "CShfeFtdcExchangeOrderActionField") -> "bool":
        return _riskuserapi.CShfeFtdcExchangeOrderActionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcExchangeOrderActionField_swiginit(self, _riskuserapi.new_CShfeFtdcExchangeOrderActionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcExchangeOrderActionField

# Register CShfeFtdcExchangeOrderActionField in _riskuserapi:
_riskuserapi.CShfeFtdcExchangeOrderActionField_swigregister(CShfeFtdcExchangeOrderActionField)
class CShfeFtdcExchangeOrderActionErrorField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionErrorField_ExchangeID_get, _riskuserapi.CShfeFtdcExchangeOrderActionErrorField_ExchangeID_set)
    OrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionErrorField_OrderSysID_get, _riskuserapi.CShfeFtdcExchangeOrderActionErrorField_OrderSysID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionErrorField_TraderID_get, _riskuserapi.CShfeFtdcExchangeOrderActionErrorField_TraderID_set)
    InstallID: "TShfeFtdcInstallIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionErrorField_InstallID_get, _riskuserapi.CShfeFtdcExchangeOrderActionErrorField_InstallID_set)
    OrderLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionErrorField_OrderLocalID_get, _riskuserapi.CShfeFtdcExchangeOrderActionErrorField_OrderLocalID_set)
    ActionLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionErrorField_ActionLocalID_get, _riskuserapi.CShfeFtdcExchangeOrderActionErrorField_ActionLocalID_set)
    ErrorID: "TShfeFtdcErrorIDType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionErrorField_ErrorID_get, _riskuserapi.CShfeFtdcExchangeOrderActionErrorField_ErrorID_set)
    ErrorMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcExchangeOrderActionErrorField_ErrorMsg_get, _riskuserapi.CShfeFtdcExchangeOrderActionErrorField_ErrorMsg_set)

    def __eq__(self, ct: "CShfeFtdcExchangeOrderActionErrorField") -> "bool":
        return _riskuserapi.CShfeFtdcExchangeOrderActionErrorField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcExchangeOrderActionErrorField_swiginit(self, _riskuserapi.new_CShfeFtdcExchangeOrderActionErrorField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcExchangeOrderActionErrorField

# Register CShfeFtdcExchangeOrderActionErrorField in _riskuserapi:
_riskuserapi.CShfeFtdcExchangeOrderActionErrorField_swigregister(CShfeFtdcExchangeOrderActionErrorField)
class CShfeFtdcExchangeTradeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_ExchangeID_get, _riskuserapi.CShfeFtdcExchangeTradeField_ExchangeID_set)
    TradeID: "TShfeFtdcTradeIDType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_TradeID_get, _riskuserapi.CShfeFtdcExchangeTradeField_TradeID_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_Direction_get, _riskuserapi.CShfeFtdcExchangeTradeField_Direction_set)
    OrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_OrderSysID_get, _riskuserapi.CShfeFtdcExchangeTradeField_OrderSysID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_ParticipantID_get, _riskuserapi.CShfeFtdcExchangeTradeField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_ClientID_get, _riskuserapi.CShfeFtdcExchangeTradeField_ClientID_set)
    TradingRole: "TShfeFtdcTradingRoleType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_TradingRole_get, _riskuserapi.CShfeFtdcExchangeTradeField_TradingRole_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_ExchangeInstID_get, _riskuserapi.CShfeFtdcExchangeTradeField_ExchangeInstID_set)
    OffsetFlag: "TShfeFtdcOffsetFlagType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_OffsetFlag_get, _riskuserapi.CShfeFtdcExchangeTradeField_OffsetFlag_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_HedgeFlag_get, _riskuserapi.CShfeFtdcExchangeTradeField_HedgeFlag_set)
    Price: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_Price_get, _riskuserapi.CShfeFtdcExchangeTradeField_Price_set)
    Volume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_Volume_get, _riskuserapi.CShfeFtdcExchangeTradeField_Volume_set)
    TradeDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_TradeDate_get, _riskuserapi.CShfeFtdcExchangeTradeField_TradeDate_set)
    TradeTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_TradeTime_get, _riskuserapi.CShfeFtdcExchangeTradeField_TradeTime_set)
    TradeType: "TShfeFtdcTradeTypeType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_TradeType_get, _riskuserapi.CShfeFtdcExchangeTradeField_TradeType_set)
    PriceSource: "TShfeFtdcPriceSourceType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_PriceSource_get, _riskuserapi.CShfeFtdcExchangeTradeField_PriceSource_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_TraderID_get, _riskuserapi.CShfeFtdcExchangeTradeField_TraderID_set)
    OrderLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_OrderLocalID_get, _riskuserapi.CShfeFtdcExchangeTradeField_OrderLocalID_set)
    ClearingPartID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_ClearingPartID_get, _riskuserapi.CShfeFtdcExchangeTradeField_ClearingPartID_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_BusinessUnit_get, _riskuserapi.CShfeFtdcExchangeTradeField_BusinessUnit_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_SequenceNo_get, _riskuserapi.CShfeFtdcExchangeTradeField_SequenceNo_set)
    TradeSource: "TShfeFtdcTradeSourceType" = property(_riskuserapi.CShfeFtdcExchangeTradeField_TradeSource_get, _riskuserapi.CShfeFtdcExchangeTradeField_TradeSource_set)

    def __eq__(self, ct: "CShfeFtdcExchangeTradeField") -> "bool":
        return _riskuserapi.CShfeFtdcExchangeTradeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcExchangeTradeField_swiginit(self, _riskuserapi.new_CShfeFtdcExchangeTradeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcExchangeTradeField

# Register CShfeFtdcExchangeTradeField in _riskuserapi:
_riskuserapi.CShfeFtdcExchangeTradeField_swigregister(CShfeFtdcExchangeTradeField)
class CShfeFtdcTradeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcTradeField_BrokerID_get, _riskuserapi.CShfeFtdcTradeField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcTradeField_InvestorID_get, _riskuserapi.CShfeFtdcTradeField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcTradeField_InstrumentID_get, _riskuserapi.CShfeFtdcTradeField_InstrumentID_set)
    OrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcTradeField_OrderRef_get, _riskuserapi.CShfeFtdcTradeField_OrderRef_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcTradeField_UserID_get, _riskuserapi.CShfeFtdcTradeField_UserID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcTradeField_ExchangeID_get, _riskuserapi.CShfeFtdcTradeField_ExchangeID_set)
    TradeID: "TShfeFtdcTradeIDType" = property(_riskuserapi.CShfeFtdcTradeField_TradeID_get, _riskuserapi.CShfeFtdcTradeField_TradeID_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcTradeField_Direction_get, _riskuserapi.CShfeFtdcTradeField_Direction_set)
    OrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcTradeField_OrderSysID_get, _riskuserapi.CShfeFtdcTradeField_OrderSysID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcTradeField_ParticipantID_get, _riskuserapi.CShfeFtdcTradeField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcTradeField_ClientID_get, _riskuserapi.CShfeFtdcTradeField_ClientID_set)
    TradingRole: "TShfeFtdcTradingRoleType" = property(_riskuserapi.CShfeFtdcTradeField_TradingRole_get, _riskuserapi.CShfeFtdcTradeField_TradingRole_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcTradeField_ExchangeInstID_get, _riskuserapi.CShfeFtdcTradeField_ExchangeInstID_set)
    OffsetFlag: "TShfeFtdcOffsetFlagType" = property(_riskuserapi.CShfeFtdcTradeField_OffsetFlag_get, _riskuserapi.CShfeFtdcTradeField_OffsetFlag_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcTradeField_HedgeFlag_get, _riskuserapi.CShfeFtdcTradeField_HedgeFlag_set)
    Price: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcTradeField_Price_get, _riskuserapi.CShfeFtdcTradeField_Price_set)
    Volume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcTradeField_Volume_get, _riskuserapi.CShfeFtdcTradeField_Volume_set)
    TradeDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcTradeField_TradeDate_get, _riskuserapi.CShfeFtdcTradeField_TradeDate_set)
    TradeTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcTradeField_TradeTime_get, _riskuserapi.CShfeFtdcTradeField_TradeTime_set)
    TradeType: "TShfeFtdcTradeTypeType" = property(_riskuserapi.CShfeFtdcTradeField_TradeType_get, _riskuserapi.CShfeFtdcTradeField_TradeType_set)
    PriceSource: "TShfeFtdcPriceSourceType" = property(_riskuserapi.CShfeFtdcTradeField_PriceSource_get, _riskuserapi.CShfeFtdcTradeField_PriceSource_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcTradeField_TraderID_get, _riskuserapi.CShfeFtdcTradeField_TraderID_set)
    OrderLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcTradeField_OrderLocalID_get, _riskuserapi.CShfeFtdcTradeField_OrderLocalID_set)
    ClearingPartID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcTradeField_ClearingPartID_get, _riskuserapi.CShfeFtdcTradeField_ClearingPartID_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcTradeField_BusinessUnit_get, _riskuserapi.CShfeFtdcTradeField_BusinessUnit_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcTradeField_SequenceNo_get, _riskuserapi.CShfeFtdcTradeField_SequenceNo_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcTradeField_TradingDay_get, _riskuserapi.CShfeFtdcTradeField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcTradeField_SettlementID_get, _riskuserapi.CShfeFtdcTradeField_SettlementID_set)
    BrokerOrderSeq: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcTradeField_BrokerOrderSeq_get, _riskuserapi.CShfeFtdcTradeField_BrokerOrderSeq_set)
    TradeSource: "TShfeFtdcTradeSourceType" = property(_riskuserapi.CShfeFtdcTradeField_TradeSource_get, _riskuserapi.CShfeFtdcTradeField_TradeSource_set)

    def __eq__(self, ct: "CShfeFtdcTradeField") -> "bool":
        return _riskuserapi.CShfeFtdcTradeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTradeField_swiginit(self, _riskuserapi.new_CShfeFtdcTradeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTradeField

# Register CShfeFtdcTradeField in _riskuserapi:
_riskuserapi.CShfeFtdcTradeField_swigregister(CShfeFtdcTradeField)
class CShfeFtdcUserSessionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcUserSessionField_FrontID_get, _riskuserapi.CShfeFtdcUserSessionField_FrontID_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcUserSessionField_SessionID_get, _riskuserapi.CShfeFtdcUserSessionField_SessionID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcUserSessionField_BrokerID_get, _riskuserapi.CShfeFtdcUserSessionField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcUserSessionField_UserID_get, _riskuserapi.CShfeFtdcUserSessionField_UserID_set)
    LoginDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcUserSessionField_LoginDate_get, _riskuserapi.CShfeFtdcUserSessionField_LoginDate_set)
    LoginTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcUserSessionField_LoginTime_get, _riskuserapi.CShfeFtdcUserSessionField_LoginTime_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcUserSessionField_IPAddress_get, _riskuserapi.CShfeFtdcUserSessionField_IPAddress_set)
    UserProductInfo: "TShfeFtdcProductInfoType" = property(_riskuserapi.CShfeFtdcUserSessionField_UserProductInfo_get, _riskuserapi.CShfeFtdcUserSessionField_UserProductInfo_set)
    InterfaceProductInfo: "TShfeFtdcProductInfoType" = property(_riskuserapi.CShfeFtdcUserSessionField_InterfaceProductInfo_get, _riskuserapi.CShfeFtdcUserSessionField_InterfaceProductInfo_set)
    ProtocolInfo: "TShfeFtdcProtocolInfoType" = property(_riskuserapi.CShfeFtdcUserSessionField_ProtocolInfo_get, _riskuserapi.CShfeFtdcUserSessionField_ProtocolInfo_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcUserSessionField_MacAddress_get, _riskuserapi.CShfeFtdcUserSessionField_MacAddress_set)
    LoginRemark: "TShfeFtdcLoginRemarkType" = property(_riskuserapi.CShfeFtdcUserSessionField_LoginRemark_get, _riskuserapi.CShfeFtdcUserSessionField_LoginRemark_set)

    def __eq__(self, ct: "CShfeFtdcUserSessionField") -> "bool":
        return _riskuserapi.CShfeFtdcUserSessionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcUserSessionField_swiginit(self, _riskuserapi.new_CShfeFtdcUserSessionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcUserSessionField

# Register CShfeFtdcUserSessionField in _riskuserapi:
_riskuserapi.CShfeFtdcUserSessionField_swigregister(CShfeFtdcUserSessionField)
class CShfeFtdcQueryMaxOrderVolumeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_BrokerID_get, _riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_InvestorID_get, _riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_InstrumentID_get, _riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_InstrumentID_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_Direction_get, _riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_Direction_set)
    OffsetFlag: "TShfeFtdcOffsetFlagType" = property(_riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_OffsetFlag_get, _riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_OffsetFlag_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_HedgeFlag_get, _riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_HedgeFlag_set)
    MaxVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_MaxVolume_get, _riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_MaxVolume_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_ExchangeID_get, _riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_ExchangeID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_InvestUnitID_get, _riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_InvestUnitID_set)

    def __eq__(self, ct: "CShfeFtdcQueryMaxOrderVolumeField") -> "bool":
        return _riskuserapi.CShfeFtdcQueryMaxOrderVolumeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_swiginit(self, _riskuserapi.new_CShfeFtdcQueryMaxOrderVolumeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQueryMaxOrderVolumeField

# Register CShfeFtdcQueryMaxOrderVolumeField in _riskuserapi:
_riskuserapi.CShfeFtdcQueryMaxOrderVolumeField_swigregister(CShfeFtdcQueryMaxOrderVolumeField)
class CShfeFtdcSettlementInfoConfirmField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSettlementInfoConfirmField_BrokerID_get, _riskuserapi.CShfeFtdcSettlementInfoConfirmField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSettlementInfoConfirmField_InvestorID_get, _riskuserapi.CShfeFtdcSettlementInfoConfirmField_InvestorID_set)
    ConfirmDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSettlementInfoConfirmField_ConfirmDate_get, _riskuserapi.CShfeFtdcSettlementInfoConfirmField_ConfirmDate_set)
    ConfirmTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcSettlementInfoConfirmField_ConfirmTime_get, _riskuserapi.CShfeFtdcSettlementInfoConfirmField_ConfirmTime_set)

    def __eq__(self, ct: "CShfeFtdcSettlementInfoConfirmField") -> "bool":
        return _riskuserapi.CShfeFtdcSettlementInfoConfirmField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSettlementInfoConfirmField_swiginit(self, _riskuserapi.new_CShfeFtdcSettlementInfoConfirmField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSettlementInfoConfirmField

# Register CShfeFtdcSettlementInfoConfirmField in _riskuserapi:
_riskuserapi.CShfeFtdcSettlementInfoConfirmField_swigregister(CShfeFtdcSettlementInfoConfirmField)
class CShfeFtdcSyncDepositField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DepositSeqNo: "TShfeFtdcDepositSeqNoType" = property(_riskuserapi.CShfeFtdcSyncDepositField_DepositSeqNo_get, _riskuserapi.CShfeFtdcSyncDepositField_DepositSeqNo_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSyncDepositField_BrokerID_get, _riskuserapi.CShfeFtdcSyncDepositField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSyncDepositField_InvestorID_get, _riskuserapi.CShfeFtdcSyncDepositField_InvestorID_set)
    Deposit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncDepositField_Deposit_get, _riskuserapi.CShfeFtdcSyncDepositField_Deposit_set)
    IsForce: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSyncDepositField_IsForce_get, _riskuserapi.CShfeFtdcSyncDepositField_IsForce_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcSyncDepositField_CurrencyID_get, _riskuserapi.CShfeFtdcSyncDepositField_CurrencyID_set)
    IsFromSopt: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSyncDepositField_IsFromSopt_get, _riskuserapi.CShfeFtdcSyncDepositField_IsFromSopt_set)
    TradingPassword: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcSyncDepositField_TradingPassword_get, _riskuserapi.CShfeFtdcSyncDepositField_TradingPassword_set)
    IsSecAgentTranfer: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSyncDepositField_IsSecAgentTranfer_get, _riskuserapi.CShfeFtdcSyncDepositField_IsSecAgentTranfer_set)

    def __eq__(self, ct: "CShfeFtdcSyncDepositField") -> "bool":
        return _riskuserapi.CShfeFtdcSyncDepositField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSyncDepositField_swiginit(self, _riskuserapi.new_CShfeFtdcSyncDepositField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSyncDepositField

# Register CShfeFtdcSyncDepositField in _riskuserapi:
_riskuserapi.CShfeFtdcSyncDepositField_swigregister(CShfeFtdcSyncDepositField)
class CShfeFtdcBrokerSyncField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcBrokerSyncField_BrokerID_get, _riskuserapi.CShfeFtdcBrokerSyncField_BrokerID_set)

    def __eq__(self, ct: "CShfeFtdcBrokerSyncField") -> "bool":
        return _riskuserapi.CShfeFtdcBrokerSyncField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcBrokerSyncField_swiginit(self, _riskuserapi.new_CShfeFtdcBrokerSyncField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcBrokerSyncField

# Register CShfeFtdcBrokerSyncField in _riskuserapi:
_riskuserapi.CShfeFtdcBrokerSyncField_swigregister(CShfeFtdcBrokerSyncField)
class CShfeFtdcSyncingInvestorField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSyncingInvestorField_InvestorID_get, _riskuserapi.CShfeFtdcSyncingInvestorField_InvestorID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSyncingInvestorField_BrokerID_get, _riskuserapi.CShfeFtdcSyncingInvestorField_BrokerID_set)
    InvestorGroupID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSyncingInvestorField_InvestorGroupID_get, _riskuserapi.CShfeFtdcSyncingInvestorField_InvestorGroupID_set)
    InvestorName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcSyncingInvestorField_InvestorName_get, _riskuserapi.CShfeFtdcSyncingInvestorField_InvestorName_set)
    IdentifiedCardType: "TShfeFtdcIdCardTypeType" = property(_riskuserapi.CShfeFtdcSyncingInvestorField_IdentifiedCardType_get, _riskuserapi.CShfeFtdcSyncingInvestorField_IdentifiedCardType_set)
    IdentifiedCardNo: "TShfeFtdcIdentifiedCardNoType" = property(_riskuserapi.CShfeFtdcSyncingInvestorField_IdentifiedCardNo_get, _riskuserapi.CShfeFtdcSyncingInvestorField_IdentifiedCardNo_set)
    IsActive: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSyncingInvestorField_IsActive_get, _riskuserapi.CShfeFtdcSyncingInvestorField_IsActive_set)
    Telephone: "TShfeFtdcTelephoneType" = property(_riskuserapi.CShfeFtdcSyncingInvestorField_Telephone_get, _riskuserapi.CShfeFtdcSyncingInvestorField_Telephone_set)
    Address: "TShfeFtdcAddressType" = property(_riskuserapi.CShfeFtdcSyncingInvestorField_Address_get, _riskuserapi.CShfeFtdcSyncingInvestorField_Address_set)
    OpenDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSyncingInvestorField_OpenDate_get, _riskuserapi.CShfeFtdcSyncingInvestorField_OpenDate_set)
    Mobile: "TShfeFtdcMobileType" = property(_riskuserapi.CShfeFtdcSyncingInvestorField_Mobile_get, _riskuserapi.CShfeFtdcSyncingInvestorField_Mobile_set)
    CommModelID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSyncingInvestorField_CommModelID_get, _riskuserapi.CShfeFtdcSyncingInvestorField_CommModelID_set)
    MarginModelID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSyncingInvestorField_MarginModelID_get, _riskuserapi.CShfeFtdcSyncingInvestorField_MarginModelID_set)
    IsOrderFreq: "TShfeFtdcEnumBoolType" = property(_riskuserapi.CShfeFtdcSyncingInvestorField_IsOrderFreq_get, _riskuserapi.CShfeFtdcSyncingInvestorField_IsOrderFreq_set)
    IsOpenVolLimit: "TShfeFtdcEnumBoolType" = property(_riskuserapi.CShfeFtdcSyncingInvestorField_IsOpenVolLimit_get, _riskuserapi.CShfeFtdcSyncingInvestorField_IsOpenVolLimit_set)

    def __eq__(self, ct: "CShfeFtdcSyncingInvestorField") -> "bool":
        return _riskuserapi.CShfeFtdcSyncingInvestorField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSyncingInvestorField_swiginit(self, _riskuserapi.new_CShfeFtdcSyncingInvestorField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSyncingInvestorField

# Register CShfeFtdcSyncingInvestorField in _riskuserapi:
_riskuserapi.CShfeFtdcSyncingInvestorField_swigregister(CShfeFtdcSyncingInvestorField)
class CShfeFtdcSyncingTradingCodeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSyncingTradingCodeField_InvestorID_get, _riskuserapi.CShfeFtdcSyncingTradingCodeField_InvestorID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSyncingTradingCodeField_BrokerID_get, _riskuserapi.CShfeFtdcSyncingTradingCodeField_BrokerID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSyncingTradingCodeField_ExchangeID_get, _riskuserapi.CShfeFtdcSyncingTradingCodeField_ExchangeID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcSyncingTradingCodeField_ClientID_get, _riskuserapi.CShfeFtdcSyncingTradingCodeField_ClientID_set)
    IsActive: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSyncingTradingCodeField_IsActive_get, _riskuserapi.CShfeFtdcSyncingTradingCodeField_IsActive_set)
    ClientIDType: "TShfeFtdcClientIDTypeType" = property(_riskuserapi.CShfeFtdcSyncingTradingCodeField_ClientIDType_get, _riskuserapi.CShfeFtdcSyncingTradingCodeField_ClientIDType_set)

    def __eq__(self, ct: "CShfeFtdcSyncingTradingCodeField") -> "bool":
        return _riskuserapi.CShfeFtdcSyncingTradingCodeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSyncingTradingCodeField_swiginit(self, _riskuserapi.new_CShfeFtdcSyncingTradingCodeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSyncingTradingCodeField

# Register CShfeFtdcSyncingTradingCodeField in _riskuserapi:
_riskuserapi.CShfeFtdcSyncingTradingCodeField_swigregister(CShfeFtdcSyncingTradingCodeField)
class CShfeFtdcSyncingInvestorGroupField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSyncingInvestorGroupField_BrokerID_get, _riskuserapi.CShfeFtdcSyncingInvestorGroupField_BrokerID_set)
    InvestorGroupID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSyncingInvestorGroupField_InvestorGroupID_get, _riskuserapi.CShfeFtdcSyncingInvestorGroupField_InvestorGroupID_set)
    InvestorGroupName: "TShfeFtdcInvestorGroupNameType" = property(_riskuserapi.CShfeFtdcSyncingInvestorGroupField_InvestorGroupName_get, _riskuserapi.CShfeFtdcSyncingInvestorGroupField_InvestorGroupName_set)

    def __eq__(self, ct: "CShfeFtdcSyncingInvestorGroupField") -> "bool":
        return _riskuserapi.CShfeFtdcSyncingInvestorGroupField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSyncingInvestorGroupField_swiginit(self, _riskuserapi.new_CShfeFtdcSyncingInvestorGroupField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSyncingInvestorGroupField

# Register CShfeFtdcSyncingInvestorGroupField in _riskuserapi:
_riskuserapi.CShfeFtdcSyncingInvestorGroupField_swigregister(CShfeFtdcSyncingInvestorGroupField)
class CShfeFtdcSyncingTradingAccountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_BrokerID_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_BrokerID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_AccountID_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_AccountID_set)
    PreMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_PreMortgage_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_PreMortgage_set)
    PreCredit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_PreCredit_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_PreCredit_set)
    PreDeposit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_PreDeposit_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_PreDeposit_set)
    PreBalance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_PreBalance_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_PreBalance_set)
    PreMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_PreMargin_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_PreMargin_set)
    InterestBase: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_InterestBase_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_InterestBase_set)
    Interest: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_Interest_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_Interest_set)
    Deposit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_Deposit_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_Deposit_set)
    Withdraw: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_Withdraw_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_Withdraw_set)
    FrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_FrozenMargin_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_FrozenMargin_set)
    FrozenCash: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_FrozenCash_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_FrozenCash_set)
    FrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_FrozenCommission_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_FrozenCommission_set)
    CurrMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_CurrMargin_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_CurrMargin_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_CashIn_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_CashIn_set)
    Commission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_Commission_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_Commission_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_CloseProfit_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_CloseProfit_set)
    PositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_PositionProfit_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_PositionProfit_set)
    Balance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_Balance_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_Balance_set)
    Available: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_Available_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_Available_set)
    WithdrawQuota: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_WithdrawQuota_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_WithdrawQuota_set)
    Reserve: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_Reserve_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_Reserve_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_TradingDay_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_SettlementID_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_SettlementID_set)
    Credit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_Credit_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_Credit_set)
    Mortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_Mortgage_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_Mortgage_set)
    ExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_ExchangeMargin_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_ExchangeMargin_set)
    DeliveryMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_DeliveryMargin_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_DeliveryMargin_set)
    ExchangeDeliveryMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_set)
    ReserveBalance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_ReserveBalance_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_ReserveBalance_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_CurrencyID_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_CurrencyID_set)
    PreFundMortgageIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_PreFundMortgageIn_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_PreFundMortgageIn_set)
    PreFundMortgageOut: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_PreFundMortgageOut_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_PreFundMortgageOut_set)
    FundMortgageIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_FundMortgageIn_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_FundMortgageIn_set)
    FundMortgageOut: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_FundMortgageOut_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_FundMortgageOut_set)
    FundMortgageAvailable: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_FundMortgageAvailable_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_FundMortgageAvailable_set)
    MortgageableFund: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_MortgageableFund_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_MortgageableFund_set)
    SpecProductMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_SpecProductMargin_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_SpecProductMargin_set)
    SpecProductFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_SpecProductFrozenMargin_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_SpecProductFrozenMargin_set)
    SpecProductCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_SpecProductCommission_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_SpecProductCommission_set)
    SpecProductFrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_SpecProductFrozenCommission_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_SpecProductFrozenCommission_set)
    SpecProductPositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_SpecProductPositionProfit_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_SpecProductPositionProfit_set)
    SpecProductCloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_SpecProductCloseProfit_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_SpecProductCloseProfit_set)
    SpecProductPositionProfitByAlg: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_SpecProductPositionProfitByAlg_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_SpecProductPositionProfitByAlg_set)
    SpecProductExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_SpecProductExchangeMargin_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_SpecProductExchangeMargin_set)
    FrozenSwap: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_FrozenSwap_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_FrozenSwap_set)
    RemainSwap: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_RemainSwap_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_RemainSwap_set)
    OptionCloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_OptionCloseProfit_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_OptionCloseProfit_set)
    OptionValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_OptionValue_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_OptionValue_set)
    NCombMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingTradingAccountField_NCombMargin_get, _riskuserapi.CShfeFtdcSyncingTradingAccountField_NCombMargin_set)

    def __eq__(self, ct: "CShfeFtdcSyncingTradingAccountField") -> "bool":
        return _riskuserapi.CShfeFtdcSyncingTradingAccountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSyncingTradingAccountField_swiginit(self, _riskuserapi.new_CShfeFtdcSyncingTradingAccountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSyncingTradingAccountField

# Register CShfeFtdcSyncingTradingAccountField in _riskuserapi:
_riskuserapi.CShfeFtdcSyncingTradingAccountField_swigregister(CShfeFtdcSyncingTradingAccountField)
class CShfeFtdcSyncingInvestorPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_InstrumentID_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_InstrumentID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_BrokerID_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_InvestorID_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_InvestorID_set)
    PosiDirection: "TShfeFtdcPosiDirectionType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_PosiDirection_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_PosiDirection_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_HedgeFlag_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_HedgeFlag_set)
    PositionDate: "TShfeFtdcPositionDateType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_PositionDate_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_PositionDate_set)
    YdPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_YdPosition_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_YdPosition_set)
    Position: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_Position_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_Position_set)
    LongFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_LongFrozen_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_LongFrozen_set)
    ShortFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_ShortFrozen_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_ShortFrozen_set)
    LongFrozenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_LongFrozenAmount_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_LongFrozenAmount_set)
    ShortFrozenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_ShortFrozenAmount_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_ShortFrozenAmount_set)
    OpenVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_OpenVolume_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_OpenVolume_set)
    CloseVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_CloseVolume_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_CloseVolume_set)
    OpenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_OpenAmount_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_OpenAmount_set)
    CloseAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_CloseAmount_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_CloseAmount_set)
    PositionCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_PositionCost_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_PositionCost_set)
    PreMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_PreMargin_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_PreMargin_set)
    UseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_UseMargin_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_UseMargin_set)
    FrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_FrozenMargin_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_FrozenMargin_set)
    FrozenCash: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_FrozenCash_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_FrozenCash_set)
    FrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_FrozenCommission_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_FrozenCommission_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_CashIn_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_CashIn_set)
    Commission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_Commission_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_Commission_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_CloseProfit_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_CloseProfit_set)
    PositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_PositionProfit_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_PositionProfit_set)
    PreSettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_PreSettlementPrice_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_PreSettlementPrice_set)
    SettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_SettlementPrice_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_SettlementPrice_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_TradingDay_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_SettlementID_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_SettlementID_set)
    OpenCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_OpenCost_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_OpenCost_set)
    ExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_ExchangeMargin_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_ExchangeMargin_set)
    CombPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_CombPosition_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_CombPosition_set)
    CombLongFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_CombLongFrozen_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_CombLongFrozen_set)
    CombShortFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_CombShortFrozen_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_CombShortFrozen_set)
    CloseProfitByDate: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_CloseProfitByDate_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_CloseProfitByDate_set)
    CloseProfitByTrade: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_CloseProfitByTrade_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_CloseProfitByTrade_set)
    TodayPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_TodayPosition_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_TodayPosition_set)
    MarginRateByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_MarginRateByMoney_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_MarginRateByMoney_set)
    MarginRateByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_MarginRateByVolume_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_MarginRateByVolume_set)
    StrikeFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_StrikeFrozen_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_StrikeFrozen_set)
    StrikeFrozenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_StrikeFrozenAmount_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_StrikeFrozenAmount_set)
    AbandonFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_AbandonFrozen_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_AbandonFrozen_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_ExchangeID_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_ExchangeID_set)
    YdStrikeFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_YdStrikeFrozen_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_YdStrikeFrozen_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_InvestUnitID_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_InvestUnitID_set)
    OptionValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_OptionValue_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_OptionValue_set)
    PositionCostOffset: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_PositionCostOffset_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_PositionCostOffset_set)
    TasPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_TasPosition_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_TasPosition_set)
    TasPositionCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInvestorPositionField_TasPositionCost_get, _riskuserapi.CShfeFtdcSyncingInvestorPositionField_TasPositionCost_set)

    def __eq__(self, ct: "CShfeFtdcSyncingInvestorPositionField") -> "bool":
        return _riskuserapi.CShfeFtdcSyncingInvestorPositionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSyncingInvestorPositionField_swiginit(self, _riskuserapi.new_CShfeFtdcSyncingInvestorPositionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSyncingInvestorPositionField

# Register CShfeFtdcSyncingInvestorPositionField in _riskuserapi:
_riskuserapi.CShfeFtdcSyncingInvestorPositionField_swigregister(CShfeFtdcSyncingInvestorPositionField)
class CShfeFtdcSyncingInstrumentMarginRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_InstrumentID_get, _riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_InstrumentID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_InvestorRange_get, _riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_InvestorRange_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_BrokerID_get, _riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_InvestorID_get, _riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_InvestorID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_HedgeFlag_get, _riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_HedgeFlag_set)
    LongMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_get, _riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_set)
    LongMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_get, _riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_set)
    ShortMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_get, _riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_set)
    ShortMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_get, _riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_set)
    IsRelative: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_IsRelative_get, _riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_IsRelative_set)

    def __eq__(self, ct: "CShfeFtdcSyncingInstrumentMarginRateField") -> "bool":
        return _riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_swiginit(self, _riskuserapi.new_CShfeFtdcSyncingInstrumentMarginRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSyncingInstrumentMarginRateField

# Register CShfeFtdcSyncingInstrumentMarginRateField in _riskuserapi:
_riskuserapi.CShfeFtdcSyncingInstrumentMarginRateField_swigregister(CShfeFtdcSyncingInstrumentMarginRateField)
class CShfeFtdcSyncingInstrumentCommissionRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_InstrumentID_get, _riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_InstrumentID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_InvestorRange_get, _riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_InvestorRange_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_BrokerID_get, _riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_InvestorID_get, _riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_InvestorID_set)
    OpenRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_get, _riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_set)
    OpenRatioByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_get, _riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_set)
    CloseRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_get, _riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_set)
    CloseRatioByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_get, _riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_set)
    CloseTodayRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_get, _riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_set)
    CloseTodayRatioByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_get, _riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_set)

    def __eq__(self, ct: "CShfeFtdcSyncingInstrumentCommissionRateField") -> "bool":
        return _riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_swiginit(self, _riskuserapi.new_CShfeFtdcSyncingInstrumentCommissionRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSyncingInstrumentCommissionRateField

# Register CShfeFtdcSyncingInstrumentCommissionRateField in _riskuserapi:
_riskuserapi.CShfeFtdcSyncingInstrumentCommissionRateField_swigregister(CShfeFtdcSyncingInstrumentCommissionRateField)
class CShfeFtdcSyncingInstrumentTradingRightField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentTradingRightField_InstrumentID_get, _riskuserapi.CShfeFtdcSyncingInstrumentTradingRightField_InstrumentID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentTradingRightField_InvestorRange_get, _riskuserapi.CShfeFtdcSyncingInstrumentTradingRightField_InvestorRange_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentTradingRightField_BrokerID_get, _riskuserapi.CShfeFtdcSyncingInstrumentTradingRightField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentTradingRightField_InvestorID_get, _riskuserapi.CShfeFtdcSyncingInstrumentTradingRightField_InvestorID_set)
    TradingRight: "TShfeFtdcTradingRightType" = property(_riskuserapi.CShfeFtdcSyncingInstrumentTradingRightField_TradingRight_get, _riskuserapi.CShfeFtdcSyncingInstrumentTradingRightField_TradingRight_set)

    def __eq__(self, ct: "CShfeFtdcSyncingInstrumentTradingRightField") -> "bool":
        return _riskuserapi.CShfeFtdcSyncingInstrumentTradingRightField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSyncingInstrumentTradingRightField_swiginit(self, _riskuserapi.new_CShfeFtdcSyncingInstrumentTradingRightField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSyncingInstrumentTradingRightField

# Register CShfeFtdcSyncingInstrumentTradingRightField in _riskuserapi:
_riskuserapi.CShfeFtdcSyncingInstrumentTradingRightField_swigregister(CShfeFtdcSyncingInstrumentTradingRightField)
class CShfeFtdcQryOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryOrderField_BrokerID_get, _riskuserapi.CShfeFtdcQryOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryOrderField_InvestorID_get, _riskuserapi.CShfeFtdcQryOrderField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryOrderField_InstrumentID_get, _riskuserapi.CShfeFtdcQryOrderField_InstrumentID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcQryOrderField_ExchangeID_set)
    OrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcQryOrderField_OrderSysID_get, _riskuserapi.CShfeFtdcQryOrderField_OrderSysID_set)
    InsertTimeStart: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcQryOrderField_InsertTimeStart_get, _riskuserapi.CShfeFtdcQryOrderField_InsertTimeStart_set)
    InsertTimeEnd: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcQryOrderField_InsertTimeEnd_get, _riskuserapi.CShfeFtdcQryOrderField_InsertTimeEnd_set)

    def __eq__(self, ct: "CShfeFtdcQryOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcQryOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcQryOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryOrderField

# Register CShfeFtdcQryOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcQryOrderField_swigregister(CShfeFtdcQryOrderField)
class CShfeFtdcQryTradeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryTradeField_BrokerID_get, _riskuserapi.CShfeFtdcQryTradeField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryTradeField_InvestorID_get, _riskuserapi.CShfeFtdcQryTradeField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryTradeField_InstrumentID_get, _riskuserapi.CShfeFtdcQryTradeField_InstrumentID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryTradeField_ExchangeID_get, _riskuserapi.CShfeFtdcQryTradeField_ExchangeID_set)
    TradeID: "TShfeFtdcTradeIDType" = property(_riskuserapi.CShfeFtdcQryTradeField_TradeID_get, _riskuserapi.CShfeFtdcQryTradeField_TradeID_set)
    TradeTimeStart: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcQryTradeField_TradeTimeStart_get, _riskuserapi.CShfeFtdcQryTradeField_TradeTimeStart_set)
    TradeTimeEnd: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcQryTradeField_TradeTimeEnd_get, _riskuserapi.CShfeFtdcQryTradeField_TradeTimeEnd_set)

    def __eq__(self, ct: "CShfeFtdcQryTradeField") -> "bool":
        return _riskuserapi.CShfeFtdcQryTradeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryTradeField_swiginit(self, _riskuserapi.new_CShfeFtdcQryTradeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryTradeField

# Register CShfeFtdcQryTradeField in _riskuserapi:
_riskuserapi.CShfeFtdcQryTradeField_swigregister(CShfeFtdcQryTradeField)
class CShfeFtdcQryInvestorPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInvestorPositionField_BrokerID_get, _riskuserapi.CShfeFtdcQryInvestorPositionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryInvestorPositionField_InvestorID_get, _riskuserapi.CShfeFtdcQryInvestorPositionField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryInvestorPositionField_InstrumentID_get, _riskuserapi.CShfeFtdcQryInvestorPositionField_InstrumentID_set)

    def __eq__(self, ct: "CShfeFtdcQryInvestorPositionField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInvestorPositionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInvestorPositionField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInvestorPositionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInvestorPositionField

# Register CShfeFtdcQryInvestorPositionField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInvestorPositionField_swigregister(CShfeFtdcQryInvestorPositionField)
class CShfeFtdcQryTradingAccountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryTradingAccountField_BrokerID_get, _riskuserapi.CShfeFtdcQryTradingAccountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryTradingAccountField_InvestorID_get, _riskuserapi.CShfeFtdcQryTradingAccountField_InvestorID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcQryTradingAccountField_CurrencyID_get, _riskuserapi.CShfeFtdcQryTradingAccountField_CurrencyID_set)

    def __eq__(self, ct: "CShfeFtdcQryTradingAccountField") -> "bool":
        return _riskuserapi.CShfeFtdcQryTradingAccountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryTradingAccountField_swiginit(self, _riskuserapi.new_CShfeFtdcQryTradingAccountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryTradingAccountField

# Register CShfeFtdcQryTradingAccountField in _riskuserapi:
_riskuserapi.CShfeFtdcQryTradingAccountField_swigregister(CShfeFtdcQryTradingAccountField)
class CShfeFtdcQryInvestorField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInvestorField_BrokerID_get, _riskuserapi.CShfeFtdcQryInvestorField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryInvestorField_InvestorID_get, _riskuserapi.CShfeFtdcQryInvestorField_InvestorID_set)

    def __eq__(self, ct: "CShfeFtdcQryInvestorField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInvestorField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInvestorField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInvestorField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInvestorField

# Register CShfeFtdcQryInvestorField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInvestorField_swigregister(CShfeFtdcQryInvestorField)
class CShfeFtdcQryTradingCodeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryTradingCodeField_BrokerID_get, _riskuserapi.CShfeFtdcQryTradingCodeField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryTradingCodeField_InvestorID_get, _riskuserapi.CShfeFtdcQryTradingCodeField_InvestorID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryTradingCodeField_ExchangeID_get, _riskuserapi.CShfeFtdcQryTradingCodeField_ExchangeID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcQryTradingCodeField_ClientID_get, _riskuserapi.CShfeFtdcQryTradingCodeField_ClientID_set)
    ClientIDType: "TShfeFtdcClientIDTypeType" = property(_riskuserapi.CShfeFtdcQryTradingCodeField_ClientIDType_get, _riskuserapi.CShfeFtdcQryTradingCodeField_ClientIDType_set)

    def __eq__(self, ct: "CShfeFtdcQryTradingCodeField") -> "bool":
        return _riskuserapi.CShfeFtdcQryTradingCodeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryTradingCodeField_swiginit(self, _riskuserapi.new_CShfeFtdcQryTradingCodeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryTradingCodeField

# Register CShfeFtdcQryTradingCodeField in _riskuserapi:
_riskuserapi.CShfeFtdcQryTradingCodeField_swigregister(CShfeFtdcQryTradingCodeField)
class CShfeFtdcQryInvestorGroupField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInvestorGroupField_BrokerID_get, _riskuserapi.CShfeFtdcQryInvestorGroupField_BrokerID_set)

    def __eq__(self, ct: "CShfeFtdcQryInvestorGroupField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInvestorGroupField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInvestorGroupField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInvestorGroupField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInvestorGroupField

# Register CShfeFtdcQryInvestorGroupField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInvestorGroupField_swigregister(CShfeFtdcQryInvestorGroupField)
class CShfeFtdcQryInstrumentMarginRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInstrumentMarginRateField_BrokerID_get, _riskuserapi.CShfeFtdcQryInstrumentMarginRateField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryInstrumentMarginRateField_InvestorID_get, _riskuserapi.CShfeFtdcQryInstrumentMarginRateField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryInstrumentMarginRateField_InstrumentID_get, _riskuserapi.CShfeFtdcQryInstrumentMarginRateField_InstrumentID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcQryInstrumentMarginRateField_HedgeFlag_get, _riskuserapi.CShfeFtdcQryInstrumentMarginRateField_HedgeFlag_set)

    def __eq__(self, ct: "CShfeFtdcQryInstrumentMarginRateField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInstrumentMarginRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInstrumentMarginRateField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInstrumentMarginRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInstrumentMarginRateField

# Register CShfeFtdcQryInstrumentMarginRateField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInstrumentMarginRateField_swigregister(CShfeFtdcQryInstrumentMarginRateField)
class CShfeFtdcQryInstrumentCommissionRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInstrumentCommissionRateField_BrokerID_get, _riskuserapi.CShfeFtdcQryInstrumentCommissionRateField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryInstrumentCommissionRateField_InvestorID_get, _riskuserapi.CShfeFtdcQryInstrumentCommissionRateField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryInstrumentCommissionRateField_InstrumentID_get, _riskuserapi.CShfeFtdcQryInstrumentCommissionRateField_InstrumentID_set)

    def __eq__(self, ct: "CShfeFtdcQryInstrumentCommissionRateField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInstrumentCommissionRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInstrumentCommissionRateField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInstrumentCommissionRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInstrumentCommissionRateField

# Register CShfeFtdcQryInstrumentCommissionRateField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInstrumentCommissionRateField_swigregister(CShfeFtdcQryInstrumentCommissionRateField)
class CShfeFtdcQryInstrumentTradingRightField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInstrumentTradingRightField_BrokerID_get, _riskuserapi.CShfeFtdcQryInstrumentTradingRightField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryInstrumentTradingRightField_InvestorID_get, _riskuserapi.CShfeFtdcQryInstrumentTradingRightField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryInstrumentTradingRightField_InstrumentID_get, _riskuserapi.CShfeFtdcQryInstrumentTradingRightField_InstrumentID_set)

    def __eq__(self, ct: "CShfeFtdcQryInstrumentTradingRightField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInstrumentTradingRightField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInstrumentTradingRightField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInstrumentTradingRightField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInstrumentTradingRightField

# Register CShfeFtdcQryInstrumentTradingRightField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInstrumentTradingRightField_swigregister(CShfeFtdcQryInstrumentTradingRightField)
class CShfeFtdcQryBrokerField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryBrokerField_BrokerID_get, _riskuserapi.CShfeFtdcQryBrokerField_BrokerID_set)

    def __eq__(self, ct: "CShfeFtdcQryBrokerField") -> "bool":
        return _riskuserapi.CShfeFtdcQryBrokerField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryBrokerField_swiginit(self, _riskuserapi.new_CShfeFtdcQryBrokerField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryBrokerField

# Register CShfeFtdcQryBrokerField in _riskuserapi:
_riskuserapi.CShfeFtdcQryBrokerField_swigregister(CShfeFtdcQryBrokerField)
class CShfeFtdcQryTraderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryTraderField_ExchangeID_get, _riskuserapi.CShfeFtdcQryTraderField_ExchangeID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcQryTraderField_ParticipantID_get, _riskuserapi.CShfeFtdcQryTraderField_ParticipantID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcQryTraderField_TraderID_get, _riskuserapi.CShfeFtdcQryTraderField_TraderID_set)

    def __eq__(self, ct: "CShfeFtdcQryTraderField") -> "bool":
        return _riskuserapi.CShfeFtdcQryTraderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryTraderField_swiginit(self, _riskuserapi.new_CShfeFtdcQryTraderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryTraderField

# Register CShfeFtdcQryTraderField in _riskuserapi:
_riskuserapi.CShfeFtdcQryTraderField_swigregister(CShfeFtdcQryTraderField)
class CShfeFtdcQrySuperUserFunctionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcQrySuperUserFunctionField_UserID_get, _riskuserapi.CShfeFtdcQrySuperUserFunctionField_UserID_set)

    def __eq__(self, ct: "CShfeFtdcQrySuperUserFunctionField") -> "bool":
        return _riskuserapi.CShfeFtdcQrySuperUserFunctionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQrySuperUserFunctionField_swiginit(self, _riskuserapi.new_CShfeFtdcQrySuperUserFunctionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQrySuperUserFunctionField

# Register CShfeFtdcQrySuperUserFunctionField in _riskuserapi:
_riskuserapi.CShfeFtdcQrySuperUserFunctionField_swigregister(CShfeFtdcQrySuperUserFunctionField)
class CShfeFtdcQryUserSessionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcQryUserSessionField_FrontID_get, _riskuserapi.CShfeFtdcQryUserSessionField_FrontID_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcQryUserSessionField_SessionID_get, _riskuserapi.CShfeFtdcQryUserSessionField_SessionID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryUserSessionField_BrokerID_get, _riskuserapi.CShfeFtdcQryUserSessionField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcQryUserSessionField_UserID_get, _riskuserapi.CShfeFtdcQryUserSessionField_UserID_set)

    def __eq__(self, ct: "CShfeFtdcQryUserSessionField") -> "bool":
        return _riskuserapi.CShfeFtdcQryUserSessionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryUserSessionField_swiginit(self, _riskuserapi.new_CShfeFtdcQryUserSessionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryUserSessionField

# Register CShfeFtdcQryUserSessionField in _riskuserapi:
_riskuserapi.CShfeFtdcQryUserSessionField_swigregister(CShfeFtdcQryUserSessionField)
class CShfeFtdcQryPartBrokerField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryPartBrokerField_ExchangeID_get, _riskuserapi.CShfeFtdcQryPartBrokerField_ExchangeID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryPartBrokerField_BrokerID_get, _riskuserapi.CShfeFtdcQryPartBrokerField_BrokerID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcQryPartBrokerField_ParticipantID_get, _riskuserapi.CShfeFtdcQryPartBrokerField_ParticipantID_set)

    def __eq__(self, ct: "CShfeFtdcQryPartBrokerField") -> "bool":
        return _riskuserapi.CShfeFtdcQryPartBrokerField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryPartBrokerField_swiginit(self, _riskuserapi.new_CShfeFtdcQryPartBrokerField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryPartBrokerField

# Register CShfeFtdcQryPartBrokerField in _riskuserapi:
_riskuserapi.CShfeFtdcQryPartBrokerField_swigregister(CShfeFtdcQryPartBrokerField)
class CShfeFtdcQryFrontStatusField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcQryFrontStatusField_FrontID_get, _riskuserapi.CShfeFtdcQryFrontStatusField_FrontID_set)

    def __eq__(self, ct: "CShfeFtdcQryFrontStatusField") -> "bool":
        return _riskuserapi.CShfeFtdcQryFrontStatusField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryFrontStatusField_swiginit(self, _riskuserapi.new_CShfeFtdcQryFrontStatusField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryFrontStatusField

# Register CShfeFtdcQryFrontStatusField in _riskuserapi:
_riskuserapi.CShfeFtdcQryFrontStatusField_swigregister(CShfeFtdcQryFrontStatusField)
class CShfeFtdcQryExchangeOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcQryExchangeOrderField_ParticipantID_get, _riskuserapi.CShfeFtdcQryExchangeOrderField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcQryExchangeOrderField_ClientID_get, _riskuserapi.CShfeFtdcQryExchangeOrderField_ClientID_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcQryExchangeOrderField_ExchangeInstID_get, _riskuserapi.CShfeFtdcQryExchangeOrderField_ExchangeInstID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryExchangeOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcQryExchangeOrderField_ExchangeID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcQryExchangeOrderField_TraderID_get, _riskuserapi.CShfeFtdcQryExchangeOrderField_TraderID_set)

    def __eq__(self, ct: "CShfeFtdcQryExchangeOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcQryExchangeOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryExchangeOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcQryExchangeOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryExchangeOrderField

# Register CShfeFtdcQryExchangeOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcQryExchangeOrderField_swigregister(CShfeFtdcQryExchangeOrderField)
class CShfeFtdcQryOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryOrderActionField_BrokerID_get, _riskuserapi.CShfeFtdcQryOrderActionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryOrderActionField_InvestorID_get, _riskuserapi.CShfeFtdcQryOrderActionField_InvestorID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryOrderActionField_ExchangeID_get, _riskuserapi.CShfeFtdcQryOrderActionField_ExchangeID_set)

    def __eq__(self, ct: "CShfeFtdcQryOrderActionField") -> "bool":
        return _riskuserapi.CShfeFtdcQryOrderActionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryOrderActionField_swiginit(self, _riskuserapi.new_CShfeFtdcQryOrderActionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryOrderActionField

# Register CShfeFtdcQryOrderActionField in _riskuserapi:
_riskuserapi.CShfeFtdcQryOrderActionField_swigregister(CShfeFtdcQryOrderActionField)
class CShfeFtdcQryExchangeOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcQryExchangeOrderActionField_ParticipantID_get, _riskuserapi.CShfeFtdcQryExchangeOrderActionField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcQryExchangeOrderActionField_ClientID_get, _riskuserapi.CShfeFtdcQryExchangeOrderActionField_ClientID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryExchangeOrderActionField_ExchangeID_get, _riskuserapi.CShfeFtdcQryExchangeOrderActionField_ExchangeID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcQryExchangeOrderActionField_TraderID_get, _riskuserapi.CShfeFtdcQryExchangeOrderActionField_TraderID_set)

    def __eq__(self, ct: "CShfeFtdcQryExchangeOrderActionField") -> "bool":
        return _riskuserapi.CShfeFtdcQryExchangeOrderActionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryExchangeOrderActionField_swiginit(self, _riskuserapi.new_CShfeFtdcQryExchangeOrderActionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryExchangeOrderActionField

# Register CShfeFtdcQryExchangeOrderActionField in _riskuserapi:
_riskuserapi.CShfeFtdcQryExchangeOrderActionField_swigregister(CShfeFtdcQryExchangeOrderActionField)
class CShfeFtdcQrySuperUserField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcQrySuperUserField_UserID_get, _riskuserapi.CShfeFtdcQrySuperUserField_UserID_set)

    def __eq__(self, ct: "CShfeFtdcQrySuperUserField") -> "bool":
        return _riskuserapi.CShfeFtdcQrySuperUserField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQrySuperUserField_swiginit(self, _riskuserapi.new_CShfeFtdcQrySuperUserField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQrySuperUserField

# Register CShfeFtdcQrySuperUserField in _riskuserapi:
_riskuserapi.CShfeFtdcQrySuperUserField_swigregister(CShfeFtdcQrySuperUserField)
class CShfeFtdcQryExchangeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryExchangeField_ExchangeID_get, _riskuserapi.CShfeFtdcQryExchangeField_ExchangeID_set)

    def __eq__(self, ct: "CShfeFtdcQryExchangeField") -> "bool":
        return _riskuserapi.CShfeFtdcQryExchangeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryExchangeField_swiginit(self, _riskuserapi.new_CShfeFtdcQryExchangeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryExchangeField

# Register CShfeFtdcQryExchangeField in _riskuserapi:
_riskuserapi.CShfeFtdcQryExchangeField_swigregister(CShfeFtdcQryExchangeField)
class CShfeFtdcQryProductField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryProductField_ProductID_get, _riskuserapi.CShfeFtdcQryProductField_ProductID_set)
    ProductClass: "TShfeFtdcProductClassType" = property(_riskuserapi.CShfeFtdcQryProductField_ProductClass_get, _riskuserapi.CShfeFtdcQryProductField_ProductClass_set)

    def __eq__(self, ct: "CShfeFtdcQryProductField") -> "bool":
        return _riskuserapi.CShfeFtdcQryProductField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryProductField_swiginit(self, _riskuserapi.new_CShfeFtdcQryProductField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryProductField

# Register CShfeFtdcQryProductField in _riskuserapi:
_riskuserapi.CShfeFtdcQryProductField_swigregister(CShfeFtdcQryProductField)
class CShfeFtdcQryInstrumentField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryInstrumentField_InstrumentID_get, _riskuserapi.CShfeFtdcQryInstrumentField_InstrumentID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryInstrumentField_ExchangeID_get, _riskuserapi.CShfeFtdcQryInstrumentField_ExchangeID_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcQryInstrumentField_ExchangeInstID_get, _riskuserapi.CShfeFtdcQryInstrumentField_ExchangeInstID_set)
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryInstrumentField_ProductID_get, _riskuserapi.CShfeFtdcQryInstrumentField_ProductID_set)

    def __eq__(self, ct: "CShfeFtdcQryInstrumentField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInstrumentField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInstrumentField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInstrumentField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInstrumentField

# Register CShfeFtdcQryInstrumentField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInstrumentField_swigregister(CShfeFtdcQryInstrumentField)
class CShfeFtdcQryDepthMarketDataField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryDepthMarketDataField_InstrumentID_get, _riskuserapi.CShfeFtdcQryDepthMarketDataField_InstrumentID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryDepthMarketDataField_ExchangeID_get, _riskuserapi.CShfeFtdcQryDepthMarketDataField_ExchangeID_set)
    ProductClass: "TShfeFtdcProductClassType" = property(_riskuserapi.CShfeFtdcQryDepthMarketDataField_ProductClass_get, _riskuserapi.CShfeFtdcQryDepthMarketDataField_ProductClass_set)

    def __eq__(self, ct: "CShfeFtdcQryDepthMarketDataField") -> "bool":
        return _riskuserapi.CShfeFtdcQryDepthMarketDataField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryDepthMarketDataField_swiginit(self, _riskuserapi.new_CShfeFtdcQryDepthMarketDataField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryDepthMarketDataField

# Register CShfeFtdcQryDepthMarketDataField in _riskuserapi:
_riskuserapi.CShfeFtdcQryDepthMarketDataField_swigregister(CShfeFtdcQryDepthMarketDataField)
class CShfeFtdcQryBrokerUserField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryBrokerUserField_BrokerID_get, _riskuserapi.CShfeFtdcQryBrokerUserField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcQryBrokerUserField_UserID_get, _riskuserapi.CShfeFtdcQryBrokerUserField_UserID_set)

    def __eq__(self, ct: "CShfeFtdcQryBrokerUserField") -> "bool":
        return _riskuserapi.CShfeFtdcQryBrokerUserField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryBrokerUserField_swiginit(self, _riskuserapi.new_CShfeFtdcQryBrokerUserField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryBrokerUserField

# Register CShfeFtdcQryBrokerUserField in _riskuserapi:
_riskuserapi.CShfeFtdcQryBrokerUserField_swigregister(CShfeFtdcQryBrokerUserField)
class CShfeFtdcQryBrokerUserFunctionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryBrokerUserFunctionField_BrokerID_get, _riskuserapi.CShfeFtdcQryBrokerUserFunctionField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcQryBrokerUserFunctionField_UserID_get, _riskuserapi.CShfeFtdcQryBrokerUserFunctionField_UserID_set)

    def __eq__(self, ct: "CShfeFtdcQryBrokerUserFunctionField") -> "bool":
        return _riskuserapi.CShfeFtdcQryBrokerUserFunctionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryBrokerUserFunctionField_swiginit(self, _riskuserapi.new_CShfeFtdcQryBrokerUserFunctionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryBrokerUserFunctionField

# Register CShfeFtdcQryBrokerUserFunctionField in _riskuserapi:
_riskuserapi.CShfeFtdcQryBrokerUserFunctionField_swigregister(CShfeFtdcQryBrokerUserFunctionField)
class CShfeFtdcQryTraderOfferField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryTraderOfferField_ExchangeID_get, _riskuserapi.CShfeFtdcQryTraderOfferField_ExchangeID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcQryTraderOfferField_ParticipantID_get, _riskuserapi.CShfeFtdcQryTraderOfferField_ParticipantID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcQryTraderOfferField_TraderID_get, _riskuserapi.CShfeFtdcQryTraderOfferField_TraderID_set)

    def __eq__(self, ct: "CShfeFtdcQryTraderOfferField") -> "bool":
        return _riskuserapi.CShfeFtdcQryTraderOfferField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryTraderOfferField_swiginit(self, _riskuserapi.new_CShfeFtdcQryTraderOfferField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryTraderOfferField

# Register CShfeFtdcQryTraderOfferField in _riskuserapi:
_riskuserapi.CShfeFtdcQryTraderOfferField_swigregister(CShfeFtdcQryTraderOfferField)
class CShfeFtdcQrySyncDepositField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQrySyncDepositField_BrokerID_get, _riskuserapi.CShfeFtdcQrySyncDepositField_BrokerID_set)
    DepositSeqNo: "TShfeFtdcDepositSeqNoType" = property(_riskuserapi.CShfeFtdcQrySyncDepositField_DepositSeqNo_get, _riskuserapi.CShfeFtdcQrySyncDepositField_DepositSeqNo_set)

    def __eq__(self, ct: "CShfeFtdcQrySyncDepositField") -> "bool":
        return _riskuserapi.CShfeFtdcQrySyncDepositField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQrySyncDepositField_swiginit(self, _riskuserapi.new_CShfeFtdcQrySyncDepositField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQrySyncDepositField

# Register CShfeFtdcQrySyncDepositField in _riskuserapi:
_riskuserapi.CShfeFtdcQrySyncDepositField_swigregister(CShfeFtdcQrySyncDepositField)
class CShfeFtdcQrySettlementInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQrySettlementInfoField_BrokerID_get, _riskuserapi.CShfeFtdcQrySettlementInfoField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQrySettlementInfoField_InvestorID_get, _riskuserapi.CShfeFtdcQrySettlementInfoField_InvestorID_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcQrySettlementInfoField_TradingDay_get, _riskuserapi.CShfeFtdcQrySettlementInfoField_TradingDay_set)

    def __eq__(self, ct: "CShfeFtdcQrySettlementInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcQrySettlementInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQrySettlementInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcQrySettlementInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQrySettlementInfoField

# Register CShfeFtdcQrySettlementInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcQrySettlementInfoField_swigregister(CShfeFtdcQrySettlementInfoField)
class CShfeFtdcQryHisOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryHisOrderField_BrokerID_get, _riskuserapi.CShfeFtdcQryHisOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryHisOrderField_InvestorID_get, _riskuserapi.CShfeFtdcQryHisOrderField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryHisOrderField_InstrumentID_get, _riskuserapi.CShfeFtdcQryHisOrderField_InstrumentID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryHisOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcQryHisOrderField_ExchangeID_set)
    OrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcQryHisOrderField_OrderSysID_get, _riskuserapi.CShfeFtdcQryHisOrderField_OrderSysID_set)
    InsertTimeStart: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcQryHisOrderField_InsertTimeStart_get, _riskuserapi.CShfeFtdcQryHisOrderField_InsertTimeStart_set)
    InsertTimeEnd: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcQryHisOrderField_InsertTimeEnd_get, _riskuserapi.CShfeFtdcQryHisOrderField_InsertTimeEnd_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcQryHisOrderField_TradingDay_get, _riskuserapi.CShfeFtdcQryHisOrderField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcQryHisOrderField_SettlementID_get, _riskuserapi.CShfeFtdcQryHisOrderField_SettlementID_set)

    def __eq__(self, ct: "CShfeFtdcQryHisOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcQryHisOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryHisOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcQryHisOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryHisOrderField

# Register CShfeFtdcQryHisOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcQryHisOrderField_swigregister(CShfeFtdcQryHisOrderField)
class CShfeFtdcInvestorDepartmentFlatField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorDepartmentFlatField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorDepartmentFlatField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorDepartmentFlatField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorDepartmentFlatField_InvestorID_set)
    DepartmentID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorDepartmentFlatField_DepartmentID_get, _riskuserapi.CShfeFtdcInvestorDepartmentFlatField_DepartmentID_set)

    def __eq__(self, ct: "CShfeFtdcInvestorDepartmentFlatField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorDepartmentFlatField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorDepartmentFlatField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorDepartmentFlatField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorDepartmentFlatField

# Register CShfeFtdcInvestorDepartmentFlatField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorDepartmentFlatField_swigregister(CShfeFtdcInvestorDepartmentFlatField)
class CShfeFtdcDepartmentUserField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcDepartmentUserField_BrokerID_get, _riskuserapi.CShfeFtdcDepartmentUserField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcDepartmentUserField_UserID_get, _riskuserapi.CShfeFtdcDepartmentUserField_UserID_set)
    InvestorRange: "TShfeFtdcDepartmentRangeType" = property(_riskuserapi.CShfeFtdcDepartmentUserField_InvestorRange_get, _riskuserapi.CShfeFtdcDepartmentUserField_InvestorRange_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcDepartmentUserField_InvestorID_get, _riskuserapi.CShfeFtdcDepartmentUserField_InvestorID_set)

    def __eq__(self, ct: "CShfeFtdcDepartmentUserField") -> "bool":
        return _riskuserapi.CShfeFtdcDepartmentUserField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcDepartmentUserField_swiginit(self, _riskuserapi.new_CShfeFtdcDepartmentUserField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcDepartmentUserField

# Register CShfeFtdcDepartmentUserField in _riskuserapi:
_riskuserapi.CShfeFtdcDepartmentUserField_swigregister(CShfeFtdcDepartmentUserField)
class CShfeFtdcDepartmentField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcDepartmentField_BrokerID_get, _riskuserapi.CShfeFtdcDepartmentField_BrokerID_set)
    DepartmentID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcDepartmentField_DepartmentID_get, _riskuserapi.CShfeFtdcDepartmentField_DepartmentID_set)
    DepartmentName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcDepartmentField_DepartmentName_get, _riskuserapi.CShfeFtdcDepartmentField_DepartmentName_set)

    def __eq__(self, ct: "CShfeFtdcDepartmentField") -> "bool":
        return _riskuserapi.CShfeFtdcDepartmentField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcDepartmentField_swiginit(self, _riskuserapi.new_CShfeFtdcDepartmentField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcDepartmentField

# Register CShfeFtdcDepartmentField in _riskuserapi:
_riskuserapi.CShfeFtdcDepartmentField_swigregister(CShfeFtdcDepartmentField)
class CShfeFtdcQueryBrokerDepositField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQueryBrokerDepositField_BrokerID_get, _riskuserapi.CShfeFtdcQueryBrokerDepositField_BrokerID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQueryBrokerDepositField_ExchangeID_get, _riskuserapi.CShfeFtdcQueryBrokerDepositField_ExchangeID_set)

    def __eq__(self, ct: "CShfeFtdcQueryBrokerDepositField") -> "bool":
        return _riskuserapi.CShfeFtdcQueryBrokerDepositField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQueryBrokerDepositField_swiginit(self, _riskuserapi.new_CShfeFtdcQueryBrokerDepositField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQueryBrokerDepositField

# Register CShfeFtdcQueryBrokerDepositField in _riskuserapi:
_riskuserapi.CShfeFtdcQueryBrokerDepositField_swigregister(CShfeFtdcQueryBrokerDepositField)
class CShfeFtdcBrokerDepositField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcTradeDateType" = property(_riskuserapi.CShfeFtdcBrokerDepositField_TradingDay_get, _riskuserapi.CShfeFtdcBrokerDepositField_TradingDay_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcBrokerDepositField_BrokerID_get, _riskuserapi.CShfeFtdcBrokerDepositField_BrokerID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcBrokerDepositField_ParticipantID_get, _riskuserapi.CShfeFtdcBrokerDepositField_ParticipantID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcBrokerDepositField_ExchangeID_get, _riskuserapi.CShfeFtdcBrokerDepositField_ExchangeID_set)
    PreBalance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcBrokerDepositField_PreBalance_get, _riskuserapi.CShfeFtdcBrokerDepositField_PreBalance_set)
    CurrMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcBrokerDepositField_CurrMargin_get, _riskuserapi.CShfeFtdcBrokerDepositField_CurrMargin_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcBrokerDepositField_CloseProfit_get, _riskuserapi.CShfeFtdcBrokerDepositField_CloseProfit_set)
    Balance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcBrokerDepositField_Balance_get, _riskuserapi.CShfeFtdcBrokerDepositField_Balance_set)
    Deposit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcBrokerDepositField_Deposit_get, _riskuserapi.CShfeFtdcBrokerDepositField_Deposit_set)
    Withdraw: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcBrokerDepositField_Withdraw_get, _riskuserapi.CShfeFtdcBrokerDepositField_Withdraw_set)
    Available: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcBrokerDepositField_Available_get, _riskuserapi.CShfeFtdcBrokerDepositField_Available_set)
    Reserve: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcBrokerDepositField_Reserve_get, _riskuserapi.CShfeFtdcBrokerDepositField_Reserve_set)
    FrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcBrokerDepositField_FrozenMargin_get, _riskuserapi.CShfeFtdcBrokerDepositField_FrozenMargin_set)
    CurrDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcBrokerDepositField_CurrDate_get, _riskuserapi.CShfeFtdcBrokerDepositField_CurrDate_set)
    CurrTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcBrokerDepositField_CurrTime_get, _riskuserapi.CShfeFtdcBrokerDepositField_CurrTime_set)
    CurrMillisec: "TShfeFtdcMillisecType" = property(_riskuserapi.CShfeFtdcBrokerDepositField_CurrMillisec_get, _riskuserapi.CShfeFtdcBrokerDepositField_CurrMillisec_set)
    ActionDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcBrokerDepositField_ActionDay_get, _riskuserapi.CShfeFtdcBrokerDepositField_ActionDay_set)

    def __eq__(self, ct: "CShfeFtdcBrokerDepositField") -> "bool":
        return _riskuserapi.CShfeFtdcBrokerDepositField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcBrokerDepositField_swiginit(self, _riskuserapi.new_CShfeFtdcBrokerDepositField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcBrokerDepositField

# Register CShfeFtdcBrokerDepositField in _riskuserapi:
_riskuserapi.CShfeFtdcBrokerDepositField_swigregister(CShfeFtdcBrokerDepositField)
class CShfeFtdcMarketDataField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcMarketDataField_TradingDay_get, _riskuserapi.CShfeFtdcMarketDataField_TradingDay_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcMarketDataField_InstrumentID_get, _riskuserapi.CShfeFtdcMarketDataField_InstrumentID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcMarketDataField_ExchangeID_get, _riskuserapi.CShfeFtdcMarketDataField_ExchangeID_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcMarketDataField_ExchangeInstID_get, _riskuserapi.CShfeFtdcMarketDataField_ExchangeInstID_set)
    LastPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataField_LastPrice_get, _riskuserapi.CShfeFtdcMarketDataField_LastPrice_set)
    PreSettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataField_PreSettlementPrice_get, _riskuserapi.CShfeFtdcMarketDataField_PreSettlementPrice_set)
    PreClosePrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataField_PreClosePrice_get, _riskuserapi.CShfeFtdcMarketDataField_PreClosePrice_set)
    PreOpenInterest: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcMarketDataField_PreOpenInterest_get, _riskuserapi.CShfeFtdcMarketDataField_PreOpenInterest_set)
    OpenPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataField_OpenPrice_get, _riskuserapi.CShfeFtdcMarketDataField_OpenPrice_set)
    HighestPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataField_HighestPrice_get, _riskuserapi.CShfeFtdcMarketDataField_HighestPrice_set)
    LowestPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataField_LowestPrice_get, _riskuserapi.CShfeFtdcMarketDataField_LowestPrice_set)
    Volume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcMarketDataField_Volume_get, _riskuserapi.CShfeFtdcMarketDataField_Volume_set)
    Turnover: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcMarketDataField_Turnover_get, _riskuserapi.CShfeFtdcMarketDataField_Turnover_set)
    OpenInterest: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcMarketDataField_OpenInterest_get, _riskuserapi.CShfeFtdcMarketDataField_OpenInterest_set)
    ClosePrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataField_ClosePrice_get, _riskuserapi.CShfeFtdcMarketDataField_ClosePrice_set)
    SettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataField_SettlementPrice_get, _riskuserapi.CShfeFtdcMarketDataField_SettlementPrice_set)
    UpperLimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataField_UpperLimitPrice_get, _riskuserapi.CShfeFtdcMarketDataField_UpperLimitPrice_set)
    LowerLimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataField_LowerLimitPrice_get, _riskuserapi.CShfeFtdcMarketDataField_LowerLimitPrice_set)
    PreDelta: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcMarketDataField_PreDelta_get, _riskuserapi.CShfeFtdcMarketDataField_PreDelta_set)
    CurrDelta: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcMarketDataField_CurrDelta_get, _riskuserapi.CShfeFtdcMarketDataField_CurrDelta_set)
    UpdateTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcMarketDataField_UpdateTime_get, _riskuserapi.CShfeFtdcMarketDataField_UpdateTime_set)
    UpdateMillisec: "TShfeFtdcMillisecType" = property(_riskuserapi.CShfeFtdcMarketDataField_UpdateMillisec_get, _riskuserapi.CShfeFtdcMarketDataField_UpdateMillisec_set)
    ActionDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcMarketDataField_ActionDay_get, _riskuserapi.CShfeFtdcMarketDataField_ActionDay_set)

    def __eq__(self, ct: "CShfeFtdcMarketDataField") -> "bool":
        return _riskuserapi.CShfeFtdcMarketDataField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcMarketDataField_swiginit(self, _riskuserapi.new_CShfeFtdcMarketDataField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcMarketDataField

# Register CShfeFtdcMarketDataField in _riskuserapi:
_riskuserapi.CShfeFtdcMarketDataField_swigregister(CShfeFtdcMarketDataField)
class CShfeFtdcMarketDataBaseField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcMarketDataBaseField_TradingDay_get, _riskuserapi.CShfeFtdcMarketDataBaseField_TradingDay_set)
    PreSettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataBaseField_PreSettlementPrice_get, _riskuserapi.CShfeFtdcMarketDataBaseField_PreSettlementPrice_set)
    PreClosePrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataBaseField_PreClosePrice_get, _riskuserapi.CShfeFtdcMarketDataBaseField_PreClosePrice_set)
    PreOpenInterest: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcMarketDataBaseField_PreOpenInterest_get, _riskuserapi.CShfeFtdcMarketDataBaseField_PreOpenInterest_set)
    PreDelta: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcMarketDataBaseField_PreDelta_get, _riskuserapi.CShfeFtdcMarketDataBaseField_PreDelta_set)

    def __eq__(self, ct: "CShfeFtdcMarketDataBaseField") -> "bool":
        return _riskuserapi.CShfeFtdcMarketDataBaseField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcMarketDataBaseField_swiginit(self, _riskuserapi.new_CShfeFtdcMarketDataBaseField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcMarketDataBaseField

# Register CShfeFtdcMarketDataBaseField in _riskuserapi:
_riskuserapi.CShfeFtdcMarketDataBaseField_swigregister(CShfeFtdcMarketDataBaseField)
class CShfeFtdcMarketDataStaticField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    OpenPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataStaticField_OpenPrice_get, _riskuserapi.CShfeFtdcMarketDataStaticField_OpenPrice_set)
    HighestPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataStaticField_HighestPrice_get, _riskuserapi.CShfeFtdcMarketDataStaticField_HighestPrice_set)
    LowestPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataStaticField_LowestPrice_get, _riskuserapi.CShfeFtdcMarketDataStaticField_LowestPrice_set)
    ClosePrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataStaticField_ClosePrice_get, _riskuserapi.CShfeFtdcMarketDataStaticField_ClosePrice_set)
    UpperLimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataStaticField_UpperLimitPrice_get, _riskuserapi.CShfeFtdcMarketDataStaticField_UpperLimitPrice_set)
    LowerLimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataStaticField_LowerLimitPrice_get, _riskuserapi.CShfeFtdcMarketDataStaticField_LowerLimitPrice_set)
    SettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataStaticField_SettlementPrice_get, _riskuserapi.CShfeFtdcMarketDataStaticField_SettlementPrice_set)
    CurrDelta: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcMarketDataStaticField_CurrDelta_get, _riskuserapi.CShfeFtdcMarketDataStaticField_CurrDelta_set)

    def __eq__(self, ct: "CShfeFtdcMarketDataStaticField") -> "bool":
        return _riskuserapi.CShfeFtdcMarketDataStaticField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcMarketDataStaticField_swiginit(self, _riskuserapi.new_CShfeFtdcMarketDataStaticField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcMarketDataStaticField

# Register CShfeFtdcMarketDataStaticField in _riskuserapi:
_riskuserapi.CShfeFtdcMarketDataStaticField_swigregister(CShfeFtdcMarketDataStaticField)
class CShfeFtdcMarketDataLastMatchField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    LastPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataLastMatchField_LastPrice_get, _riskuserapi.CShfeFtdcMarketDataLastMatchField_LastPrice_set)
    Volume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcMarketDataLastMatchField_Volume_get, _riskuserapi.CShfeFtdcMarketDataLastMatchField_Volume_set)
    Turnover: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcMarketDataLastMatchField_Turnover_get, _riskuserapi.CShfeFtdcMarketDataLastMatchField_Turnover_set)
    OpenInterest: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcMarketDataLastMatchField_OpenInterest_get, _riskuserapi.CShfeFtdcMarketDataLastMatchField_OpenInterest_set)

    def __eq__(self, ct: "CShfeFtdcMarketDataLastMatchField") -> "bool":
        return _riskuserapi.CShfeFtdcMarketDataLastMatchField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcMarketDataLastMatchField_swiginit(self, _riskuserapi.new_CShfeFtdcMarketDataLastMatchField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcMarketDataLastMatchField

# Register CShfeFtdcMarketDataLastMatchField in _riskuserapi:
_riskuserapi.CShfeFtdcMarketDataLastMatchField_swigregister(CShfeFtdcMarketDataLastMatchField)
class CShfeFtdcMarketDataBestPriceField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BidPrice1: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataBestPriceField_BidPrice1_get, _riskuserapi.CShfeFtdcMarketDataBestPriceField_BidPrice1_set)
    BidVolume1: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcMarketDataBestPriceField_BidVolume1_get, _riskuserapi.CShfeFtdcMarketDataBestPriceField_BidVolume1_set)
    AskPrice1: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataBestPriceField_AskPrice1_get, _riskuserapi.CShfeFtdcMarketDataBestPriceField_AskPrice1_set)
    AskVolume1: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcMarketDataBestPriceField_AskVolume1_get, _riskuserapi.CShfeFtdcMarketDataBestPriceField_AskVolume1_set)

    def __eq__(self, ct: "CShfeFtdcMarketDataBestPriceField") -> "bool":
        return _riskuserapi.CShfeFtdcMarketDataBestPriceField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcMarketDataBestPriceField_swiginit(self, _riskuserapi.new_CShfeFtdcMarketDataBestPriceField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcMarketDataBestPriceField

# Register CShfeFtdcMarketDataBestPriceField in _riskuserapi:
_riskuserapi.CShfeFtdcMarketDataBestPriceField_swigregister(CShfeFtdcMarketDataBestPriceField)
class CShfeFtdcMarketDataBid23Field(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BidPrice2: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataBid23Field_BidPrice2_get, _riskuserapi.CShfeFtdcMarketDataBid23Field_BidPrice2_set)
    BidVolume2: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcMarketDataBid23Field_BidVolume2_get, _riskuserapi.CShfeFtdcMarketDataBid23Field_BidVolume2_set)
    BidPrice3: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataBid23Field_BidPrice3_get, _riskuserapi.CShfeFtdcMarketDataBid23Field_BidPrice3_set)
    BidVolume3: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcMarketDataBid23Field_BidVolume3_get, _riskuserapi.CShfeFtdcMarketDataBid23Field_BidVolume3_set)

    def __eq__(self, ct: "CShfeFtdcMarketDataBid23Field") -> "bool":
        return _riskuserapi.CShfeFtdcMarketDataBid23Field___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcMarketDataBid23Field_swiginit(self, _riskuserapi.new_CShfeFtdcMarketDataBid23Field())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcMarketDataBid23Field

# Register CShfeFtdcMarketDataBid23Field in _riskuserapi:
_riskuserapi.CShfeFtdcMarketDataBid23Field_swigregister(CShfeFtdcMarketDataBid23Field)
class CShfeFtdcMarketDataAsk23Field(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AskPrice2: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataAsk23Field_AskPrice2_get, _riskuserapi.CShfeFtdcMarketDataAsk23Field_AskPrice2_set)
    AskVolume2: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcMarketDataAsk23Field_AskVolume2_get, _riskuserapi.CShfeFtdcMarketDataAsk23Field_AskVolume2_set)
    AskPrice3: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataAsk23Field_AskPrice3_get, _riskuserapi.CShfeFtdcMarketDataAsk23Field_AskPrice3_set)
    AskVolume3: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcMarketDataAsk23Field_AskVolume3_get, _riskuserapi.CShfeFtdcMarketDataAsk23Field_AskVolume3_set)

    def __eq__(self, ct: "CShfeFtdcMarketDataAsk23Field") -> "bool":
        return _riskuserapi.CShfeFtdcMarketDataAsk23Field___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcMarketDataAsk23Field_swiginit(self, _riskuserapi.new_CShfeFtdcMarketDataAsk23Field())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcMarketDataAsk23Field

# Register CShfeFtdcMarketDataAsk23Field in _riskuserapi:
_riskuserapi.CShfeFtdcMarketDataAsk23Field_swigregister(CShfeFtdcMarketDataAsk23Field)
class CShfeFtdcMarketDataBid45Field(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BidPrice4: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataBid45Field_BidPrice4_get, _riskuserapi.CShfeFtdcMarketDataBid45Field_BidPrice4_set)
    BidVolume4: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcMarketDataBid45Field_BidVolume4_get, _riskuserapi.CShfeFtdcMarketDataBid45Field_BidVolume4_set)
    BidPrice5: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataBid45Field_BidPrice5_get, _riskuserapi.CShfeFtdcMarketDataBid45Field_BidPrice5_set)
    BidVolume5: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcMarketDataBid45Field_BidVolume5_get, _riskuserapi.CShfeFtdcMarketDataBid45Field_BidVolume5_set)

    def __eq__(self, ct: "CShfeFtdcMarketDataBid45Field") -> "bool":
        return _riskuserapi.CShfeFtdcMarketDataBid45Field___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcMarketDataBid45Field_swiginit(self, _riskuserapi.new_CShfeFtdcMarketDataBid45Field())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcMarketDataBid45Field

# Register CShfeFtdcMarketDataBid45Field in _riskuserapi:
_riskuserapi.CShfeFtdcMarketDataBid45Field_swigregister(CShfeFtdcMarketDataBid45Field)
class CShfeFtdcMarketDataAsk45Field(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AskPrice4: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataAsk45Field_AskPrice4_get, _riskuserapi.CShfeFtdcMarketDataAsk45Field_AskPrice4_set)
    AskVolume4: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcMarketDataAsk45Field_AskVolume4_get, _riskuserapi.CShfeFtdcMarketDataAsk45Field_AskVolume4_set)
    AskPrice5: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataAsk45Field_AskPrice5_get, _riskuserapi.CShfeFtdcMarketDataAsk45Field_AskPrice5_set)
    AskVolume5: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcMarketDataAsk45Field_AskVolume5_get, _riskuserapi.CShfeFtdcMarketDataAsk45Field_AskVolume5_set)

    def __eq__(self, ct: "CShfeFtdcMarketDataAsk45Field") -> "bool":
        return _riskuserapi.CShfeFtdcMarketDataAsk45Field___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcMarketDataAsk45Field_swiginit(self, _riskuserapi.new_CShfeFtdcMarketDataAsk45Field())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcMarketDataAsk45Field

# Register CShfeFtdcMarketDataAsk45Field in _riskuserapi:
_riskuserapi.CShfeFtdcMarketDataAsk45Field_swigregister(CShfeFtdcMarketDataAsk45Field)
class CShfeFtdcMarketDataUpdateTimeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcMarketDataUpdateTimeField_InstrumentID_get, _riskuserapi.CShfeFtdcMarketDataUpdateTimeField_InstrumentID_set)
    UpdateTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcMarketDataUpdateTimeField_UpdateTime_get, _riskuserapi.CShfeFtdcMarketDataUpdateTimeField_UpdateTime_set)
    UpdateMillisec: "TShfeFtdcMillisecType" = property(_riskuserapi.CShfeFtdcMarketDataUpdateTimeField_UpdateMillisec_get, _riskuserapi.CShfeFtdcMarketDataUpdateTimeField_UpdateMillisec_set)
    ActionDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcMarketDataUpdateTimeField_ActionDay_get, _riskuserapi.CShfeFtdcMarketDataUpdateTimeField_ActionDay_set)

    def __eq__(self, ct: "CShfeFtdcMarketDataUpdateTimeField") -> "bool":
        return _riskuserapi.CShfeFtdcMarketDataUpdateTimeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcMarketDataUpdateTimeField_swiginit(self, _riskuserapi.new_CShfeFtdcMarketDataUpdateTimeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcMarketDataUpdateTimeField

# Register CShfeFtdcMarketDataUpdateTimeField in _riskuserapi:
_riskuserapi.CShfeFtdcMarketDataUpdateTimeField_swigregister(CShfeFtdcMarketDataUpdateTimeField)
class CShfeFtdcSpecificInstrumentField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSpecificInstrumentField_InstrumentID_get, _riskuserapi.CShfeFtdcSpecificInstrumentField_InstrumentID_set)

    def __eq__(self, ct: "CShfeFtdcSpecificInstrumentField") -> "bool":
        return _riskuserapi.CShfeFtdcSpecificInstrumentField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSpecificInstrumentField_swiginit(self, _riskuserapi.new_CShfeFtdcSpecificInstrumentField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSpecificInstrumentField

# Register CShfeFtdcSpecificInstrumentField in _riskuserapi:
_riskuserapi.CShfeFtdcSpecificInstrumentField_swigregister(CShfeFtdcSpecificInstrumentField)
class CShfeFtdcInstrumentStatusField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcInstrumentStatusField_ExchangeID_get, _riskuserapi.CShfeFtdcInstrumentStatusField_ExchangeID_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcInstrumentStatusField_ExchangeInstID_get, _riskuserapi.CShfeFtdcInstrumentStatusField_ExchangeInstID_set)
    SettlementGroupID: "TShfeFtdcSettlementGroupIDType" = property(_riskuserapi.CShfeFtdcInstrumentStatusField_SettlementGroupID_get, _riskuserapi.CShfeFtdcInstrumentStatusField_SettlementGroupID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInstrumentStatusField_InstrumentID_get, _riskuserapi.CShfeFtdcInstrumentStatusField_InstrumentID_set)
    InstrumentStatus: "TShfeFtdcInstrumentStatusType" = property(_riskuserapi.CShfeFtdcInstrumentStatusField_InstrumentStatus_get, _riskuserapi.CShfeFtdcInstrumentStatusField_InstrumentStatus_set)
    TradingSegmentSN: "TShfeFtdcTradingSegmentSNType" = property(_riskuserapi.CShfeFtdcInstrumentStatusField_TradingSegmentSN_get, _riskuserapi.CShfeFtdcInstrumentStatusField_TradingSegmentSN_set)
    EnterTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcInstrumentStatusField_EnterTime_get, _riskuserapi.CShfeFtdcInstrumentStatusField_EnterTime_set)
    EnterReason: "TShfeFtdcInstStatusEnterReasonType" = property(_riskuserapi.CShfeFtdcInstrumentStatusField_EnterReason_get, _riskuserapi.CShfeFtdcInstrumentStatusField_EnterReason_set)

    def __eq__(self, ct: "CShfeFtdcInstrumentStatusField") -> "bool":
        return _riskuserapi.CShfeFtdcInstrumentStatusField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInstrumentStatusField_swiginit(self, _riskuserapi.new_CShfeFtdcInstrumentStatusField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInstrumentStatusField

# Register CShfeFtdcInstrumentStatusField in _riskuserapi:
_riskuserapi.CShfeFtdcInstrumentStatusField_swigregister(CShfeFtdcInstrumentStatusField)
class CShfeFtdcQryInstrumentStatusField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryInstrumentStatusField_ExchangeID_get, _riskuserapi.CShfeFtdcQryInstrumentStatusField_ExchangeID_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcQryInstrumentStatusField_ExchangeInstID_get, _riskuserapi.CShfeFtdcQryInstrumentStatusField_ExchangeInstID_set)

    def __eq__(self, ct: "CShfeFtdcQryInstrumentStatusField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInstrumentStatusField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInstrumentStatusField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInstrumentStatusField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInstrumentStatusField

# Register CShfeFtdcQryInstrumentStatusField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInstrumentStatusField_swigregister(CShfeFtdcQryInstrumentStatusField)
class CShfeFtdcInvestorAccountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorAccountField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorAccountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorAccountField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorAccountField_InvestorID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcInvestorAccountField_AccountID_get, _riskuserapi.CShfeFtdcInvestorAccountField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcInvestorAccountField_CurrencyID_get, _riskuserapi.CShfeFtdcInvestorAccountField_CurrencyID_set)

    def __eq__(self, ct: "CShfeFtdcInvestorAccountField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorAccountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorAccountField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorAccountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorAccountField

# Register CShfeFtdcInvestorAccountField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorAccountField_swigregister(CShfeFtdcInvestorAccountField)
class CShfeFtdcPositionProfitAlgorithmField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcPositionProfitAlgorithmField_BrokerID_get, _riskuserapi.CShfeFtdcPositionProfitAlgorithmField_BrokerID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcPositionProfitAlgorithmField_AccountID_get, _riskuserapi.CShfeFtdcPositionProfitAlgorithmField_AccountID_set)
    Algorithm: "TShfeFtdcAlgorithmType" = property(_riskuserapi.CShfeFtdcPositionProfitAlgorithmField_Algorithm_get, _riskuserapi.CShfeFtdcPositionProfitAlgorithmField_Algorithm_set)
    Memo: "TShfeFtdcMemoType" = property(_riskuserapi.CShfeFtdcPositionProfitAlgorithmField_Memo_get, _riskuserapi.CShfeFtdcPositionProfitAlgorithmField_Memo_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcPositionProfitAlgorithmField_CurrencyID_get, _riskuserapi.CShfeFtdcPositionProfitAlgorithmField_CurrencyID_set)

    def __eq__(self, ct: "CShfeFtdcPositionProfitAlgorithmField") -> "bool":
        return _riskuserapi.CShfeFtdcPositionProfitAlgorithmField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcPositionProfitAlgorithmField_swiginit(self, _riskuserapi.new_CShfeFtdcPositionProfitAlgorithmField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcPositionProfitAlgorithmField

# Register CShfeFtdcPositionProfitAlgorithmField in _riskuserapi:
_riskuserapi.CShfeFtdcPositionProfitAlgorithmField_swigregister(CShfeFtdcPositionProfitAlgorithmField)
class CShfeFtdcDiscountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcDiscountField_BrokerID_get, _riskuserapi.CShfeFtdcDiscountField_BrokerID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcDiscountField_InvestorRange_get, _riskuserapi.CShfeFtdcDiscountField_InvestorRange_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcDiscountField_InvestorID_get, _riskuserapi.CShfeFtdcDiscountField_InvestorID_set)
    Discount: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcDiscountField_Discount_get, _riskuserapi.CShfeFtdcDiscountField_Discount_set)

    def __eq__(self, ct: "CShfeFtdcDiscountField") -> "bool":
        return _riskuserapi.CShfeFtdcDiscountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcDiscountField_swiginit(self, _riskuserapi.new_CShfeFtdcDiscountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcDiscountField

# Register CShfeFtdcDiscountField in _riskuserapi:
_riskuserapi.CShfeFtdcDiscountField_swigregister(CShfeFtdcDiscountField)
class CShfeFtdcQryTransferBankField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BankID: "TShfeFtdcBankIDType" = property(_riskuserapi.CShfeFtdcQryTransferBankField_BankID_get, _riskuserapi.CShfeFtdcQryTransferBankField_BankID_set)
    BankBrchID: "TShfeFtdcBankBrchIDType" = property(_riskuserapi.CShfeFtdcQryTransferBankField_BankBrchID_get, _riskuserapi.CShfeFtdcQryTransferBankField_BankBrchID_set)

    def __eq__(self, ct: "CShfeFtdcQryTransferBankField") -> "bool":
        return _riskuserapi.CShfeFtdcQryTransferBankField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryTransferBankField_swiginit(self, _riskuserapi.new_CShfeFtdcQryTransferBankField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryTransferBankField

# Register CShfeFtdcQryTransferBankField in _riskuserapi:
_riskuserapi.CShfeFtdcQryTransferBankField_swigregister(CShfeFtdcQryTransferBankField)
class CShfeFtdcTransferBankField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BankID: "TShfeFtdcBankIDType" = property(_riskuserapi.CShfeFtdcTransferBankField_BankID_get, _riskuserapi.CShfeFtdcTransferBankField_BankID_set)
    BankBrchID: "TShfeFtdcBankBrchIDType" = property(_riskuserapi.CShfeFtdcTransferBankField_BankBrchID_get, _riskuserapi.CShfeFtdcTransferBankField_BankBrchID_set)
    BankName: "TShfeFtdcBankNameType" = property(_riskuserapi.CShfeFtdcTransferBankField_BankName_get, _riskuserapi.CShfeFtdcTransferBankField_BankName_set)
    IsActive: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcTransferBankField_IsActive_get, _riskuserapi.CShfeFtdcTransferBankField_IsActive_set)

    def __eq__(self, ct: "CShfeFtdcTransferBankField") -> "bool":
        return _riskuserapi.CShfeFtdcTransferBankField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTransferBankField_swiginit(self, _riskuserapi.new_CShfeFtdcTransferBankField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTransferBankField

# Register CShfeFtdcTransferBankField in _riskuserapi:
_riskuserapi.CShfeFtdcTransferBankField_swigregister(CShfeFtdcTransferBankField)
class CShfeFtdcQryInvestorPositionDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInvestorPositionDetailField_BrokerID_get, _riskuserapi.CShfeFtdcQryInvestorPositionDetailField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryInvestorPositionDetailField_InvestorID_get, _riskuserapi.CShfeFtdcQryInvestorPositionDetailField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryInvestorPositionDetailField_InstrumentID_get, _riskuserapi.CShfeFtdcQryInvestorPositionDetailField_InstrumentID_set)

    def __eq__(self, ct: "CShfeFtdcQryInvestorPositionDetailField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInvestorPositionDetailField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInvestorPositionDetailField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInvestorPositionDetailField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInvestorPositionDetailField

# Register CShfeFtdcQryInvestorPositionDetailField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInvestorPositionDetailField_swigregister(CShfeFtdcQryInvestorPositionDetailField)
class CShfeFtdcInvestorPositionDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_InstrumentID_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_InstrumentID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_InvestorID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_HedgeFlag_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_HedgeFlag_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_Direction_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_Direction_set)
    OpenDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_OpenDate_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_OpenDate_set)
    TradeID: "TShfeFtdcTradeIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_TradeID_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_TradeID_set)
    Volume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_Volume_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_Volume_set)
    OpenPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_OpenPrice_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_OpenPrice_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_TradingDay_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_SettlementID_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_SettlementID_set)
    TradeType: "TShfeFtdcTradeTypeType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_TradeType_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_TradeType_set)
    CombInstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_CombInstrumentID_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_CombInstrumentID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_ExchangeID_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_ExchangeID_set)
    CloseProfitByDate: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_CloseProfitByDate_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_CloseProfitByDate_set)
    CloseProfitByTrade: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_CloseProfitByTrade_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_CloseProfitByTrade_set)
    PositionProfitByDate: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_PositionProfitByDate_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_PositionProfitByDate_set)
    PositionProfitByTrade: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_PositionProfitByTrade_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_PositionProfitByTrade_set)
    Margin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_Margin_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_Margin_set)
    ExchMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_ExchMargin_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_ExchMargin_set)
    MarginRateByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_MarginRateByMoney_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_MarginRateByMoney_set)
    MarginRateByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_MarginRateByVolume_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_MarginRateByVolume_set)
    LastSettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_LastSettlementPrice_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_LastSettlementPrice_set)
    SettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_SettlementPrice_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_SettlementPrice_set)
    CloseVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_CloseVolume_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_CloseVolume_set)
    CloseAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_CloseAmount_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_CloseAmount_set)
    TimeFirstVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_TimeFirstVolume_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_TimeFirstVolume_set)
    SpecPosiType: "TShfeFtdcSpecPosiTypeType" = property(_riskuserapi.CShfeFtdcInvestorPositionDetailField_SpecPosiType_get, _riskuserapi.CShfeFtdcInvestorPositionDetailField_SpecPosiType_set)

    def __eq__(self, ct: "CShfeFtdcInvestorPositionDetailField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorPositionDetailField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorPositionDetailField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorPositionDetailField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorPositionDetailField

# Register CShfeFtdcInvestorPositionDetailField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorPositionDetailField_swigregister(CShfeFtdcInvestorPositionDetailField)
class CShfeFtdcTradingAccountPasswordField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcTradingAccountPasswordField_BrokerID_get, _riskuserapi.CShfeFtdcTradingAccountPasswordField_BrokerID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcTradingAccountPasswordField_AccountID_get, _riskuserapi.CShfeFtdcTradingAccountPasswordField_AccountID_set)
    Password: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcTradingAccountPasswordField_Password_get, _riskuserapi.CShfeFtdcTradingAccountPasswordField_Password_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcTradingAccountPasswordField_CurrencyID_get, _riskuserapi.CShfeFtdcTradingAccountPasswordField_CurrencyID_set)

    def __eq__(self, ct: "CShfeFtdcTradingAccountPasswordField") -> "bool":
        return _riskuserapi.CShfeFtdcTradingAccountPasswordField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTradingAccountPasswordField_swiginit(self, _riskuserapi.new_CShfeFtdcTradingAccountPasswordField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTradingAccountPasswordField

# Register CShfeFtdcTradingAccountPasswordField in _riskuserapi:
_riskuserapi.CShfeFtdcTradingAccountPasswordField_swigregister(CShfeFtdcTradingAccountPasswordField)
class CShfeFtdcMDTraderOfferField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_ExchangeID_get, _riskuserapi.CShfeFtdcMDTraderOfferField_ExchangeID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_TraderID_get, _riskuserapi.CShfeFtdcMDTraderOfferField_TraderID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_ParticipantID_get, _riskuserapi.CShfeFtdcMDTraderOfferField_ParticipantID_set)
    Password: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_Password_get, _riskuserapi.CShfeFtdcMDTraderOfferField_Password_set)
    InstallID: "TShfeFtdcInstallIDType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_InstallID_get, _riskuserapi.CShfeFtdcMDTraderOfferField_InstallID_set)
    OrderLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_OrderLocalID_get, _riskuserapi.CShfeFtdcMDTraderOfferField_OrderLocalID_set)
    TraderConnectStatus: "TShfeFtdcTraderConnectStatusType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_TraderConnectStatus_get, _riskuserapi.CShfeFtdcMDTraderOfferField_TraderConnectStatus_set)
    ConnectRequestDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_ConnectRequestDate_get, _riskuserapi.CShfeFtdcMDTraderOfferField_ConnectRequestDate_set)
    ConnectRequestTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_ConnectRequestTime_get, _riskuserapi.CShfeFtdcMDTraderOfferField_ConnectRequestTime_set)
    LastReportDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_LastReportDate_get, _riskuserapi.CShfeFtdcMDTraderOfferField_LastReportDate_set)
    LastReportTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_LastReportTime_get, _riskuserapi.CShfeFtdcMDTraderOfferField_LastReportTime_set)
    ConnectDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_ConnectDate_get, _riskuserapi.CShfeFtdcMDTraderOfferField_ConnectDate_set)
    ConnectTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_ConnectTime_get, _riskuserapi.CShfeFtdcMDTraderOfferField_ConnectTime_set)
    StartDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_StartDate_get, _riskuserapi.CShfeFtdcMDTraderOfferField_StartDate_set)
    StartTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_StartTime_get, _riskuserapi.CShfeFtdcMDTraderOfferField_StartTime_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_TradingDay_get, _riskuserapi.CShfeFtdcMDTraderOfferField_TradingDay_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_BrokerID_get, _riskuserapi.CShfeFtdcMDTraderOfferField_BrokerID_set)
    MaxTradeID: "TShfeFtdcTradeIDType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_MaxTradeID_get, _riskuserapi.CShfeFtdcMDTraderOfferField_MaxTradeID_set)
    MaxOrderMessageReference: "TShfeFtdcReturnCodeType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_MaxOrderMessageReference_get, _riskuserapi.CShfeFtdcMDTraderOfferField_MaxOrderMessageReference_set)
    OrderCancelAlg: "TShfeFtdcOrderCancelAlgType" = property(_riskuserapi.CShfeFtdcMDTraderOfferField_OrderCancelAlg_get, _riskuserapi.CShfeFtdcMDTraderOfferField_OrderCancelAlg_set)

    def __eq__(self, ct: "CShfeFtdcMDTraderOfferField") -> "bool":
        return _riskuserapi.CShfeFtdcMDTraderOfferField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcMDTraderOfferField_swiginit(self, _riskuserapi.new_CShfeFtdcMDTraderOfferField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcMDTraderOfferField

# Register CShfeFtdcMDTraderOfferField in _riskuserapi:
_riskuserapi.CShfeFtdcMDTraderOfferField_swigregister(CShfeFtdcMDTraderOfferField)
class CShfeFtdcQryMDTraderOfferField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryMDTraderOfferField_ExchangeID_get, _riskuserapi.CShfeFtdcQryMDTraderOfferField_ExchangeID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcQryMDTraderOfferField_ParticipantID_get, _riskuserapi.CShfeFtdcQryMDTraderOfferField_ParticipantID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcQryMDTraderOfferField_TraderID_get, _riskuserapi.CShfeFtdcQryMDTraderOfferField_TraderID_set)

    def __eq__(self, ct: "CShfeFtdcQryMDTraderOfferField") -> "bool":
        return _riskuserapi.CShfeFtdcQryMDTraderOfferField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryMDTraderOfferField_swiginit(self, _riskuserapi.new_CShfeFtdcQryMDTraderOfferField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryMDTraderOfferField

# Register CShfeFtdcQryMDTraderOfferField in _riskuserapi:
_riskuserapi.CShfeFtdcQryMDTraderOfferField_swigregister(CShfeFtdcQryMDTraderOfferField)
class CShfeFtdcQryNoticeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryNoticeField_BrokerID_get, _riskuserapi.CShfeFtdcQryNoticeField_BrokerID_set)

    def __eq__(self, ct: "CShfeFtdcQryNoticeField") -> "bool":
        return _riskuserapi.CShfeFtdcQryNoticeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryNoticeField_swiginit(self, _riskuserapi.new_CShfeFtdcQryNoticeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryNoticeField

# Register CShfeFtdcQryNoticeField in _riskuserapi:
_riskuserapi.CShfeFtdcQryNoticeField_swigregister(CShfeFtdcQryNoticeField)
class CShfeFtdcNoticeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcNoticeField_BrokerID_get, _riskuserapi.CShfeFtdcNoticeField_BrokerID_set)
    Content: "TShfeFtdcContentType" = property(_riskuserapi.CShfeFtdcNoticeField_Content_get, _riskuserapi.CShfeFtdcNoticeField_Content_set)
    SequenceLabel: "TShfeFtdcSequenceLabelType" = property(_riskuserapi.CShfeFtdcNoticeField_SequenceLabel_get, _riskuserapi.CShfeFtdcNoticeField_SequenceLabel_set)

    def __eq__(self, ct: "CShfeFtdcNoticeField") -> "bool":
        return _riskuserapi.CShfeFtdcNoticeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcNoticeField_swiginit(self, _riskuserapi.new_CShfeFtdcNoticeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcNoticeField

# Register CShfeFtdcNoticeField in _riskuserapi:
_riskuserapi.CShfeFtdcNoticeField_swigregister(CShfeFtdcNoticeField)
class CShfeFtdcUserRightField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcUserRightField_BrokerID_get, _riskuserapi.CShfeFtdcUserRightField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcUserRightField_UserID_get, _riskuserapi.CShfeFtdcUserRightField_UserID_set)
    UserRightType: "TShfeFtdcUserRightTypeType" = property(_riskuserapi.CShfeFtdcUserRightField_UserRightType_get, _riskuserapi.CShfeFtdcUserRightField_UserRightType_set)
    IsForbidden: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcUserRightField_IsForbidden_get, _riskuserapi.CShfeFtdcUserRightField_IsForbidden_set)

    def __eq__(self, ct: "CShfeFtdcUserRightField") -> "bool":
        return _riskuserapi.CShfeFtdcUserRightField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcUserRightField_swiginit(self, _riskuserapi.new_CShfeFtdcUserRightField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcUserRightField

# Register CShfeFtdcUserRightField in _riskuserapi:
_riskuserapi.CShfeFtdcUserRightField_swigregister(CShfeFtdcUserRightField)
class CShfeFtdcQrySettlementInfoConfirmField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQrySettlementInfoConfirmField_BrokerID_get, _riskuserapi.CShfeFtdcQrySettlementInfoConfirmField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQrySettlementInfoConfirmField_InvestorID_get, _riskuserapi.CShfeFtdcQrySettlementInfoConfirmField_InvestorID_set)

    def __eq__(self, ct: "CShfeFtdcQrySettlementInfoConfirmField") -> "bool":
        return _riskuserapi.CShfeFtdcQrySettlementInfoConfirmField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQrySettlementInfoConfirmField_swiginit(self, _riskuserapi.new_CShfeFtdcQrySettlementInfoConfirmField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQrySettlementInfoConfirmField

# Register CShfeFtdcQrySettlementInfoConfirmField in _riskuserapi:
_riskuserapi.CShfeFtdcQrySettlementInfoConfirmField_swigregister(CShfeFtdcQrySettlementInfoConfirmField)
class CShfeFtdcLoadSettlementInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcLoadSettlementInfoField_BrokerID_get, _riskuserapi.CShfeFtdcLoadSettlementInfoField_BrokerID_set)

    def __eq__(self, ct: "CShfeFtdcLoadSettlementInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcLoadSettlementInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcLoadSettlementInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcLoadSettlementInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcLoadSettlementInfoField

# Register CShfeFtdcLoadSettlementInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcLoadSettlementInfoField_swigregister(CShfeFtdcLoadSettlementInfoField)
class CShfeFtdcBrokerWithdrawAlgorithmField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_BrokerID_get, _riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_BrokerID_set)
    WithdrawAlgorithm: "TShfeFtdcAlgorithmType" = property(_riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_get, _riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_set)
    UsingRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_UsingRatio_get, _riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_UsingRatio_set)
    IncludeCloseProfit: "TShfeFtdcIncludeCloseProfitType" = property(_riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_get, _riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_set)
    AllWithoutTrade: "TShfeFtdcAllWithoutTradeType" = property(_riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_get, _riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_set)
    AvailIncludeCloseProfit: "TShfeFtdcIncludeCloseProfitType" = property(_riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_get, _riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_set)
    IsBrokerUserEvent: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_get, _riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_CurrencyID_get, _riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_CurrencyID_set)
    FundMortgageRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_FundMortgageRatio_get, _riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_FundMortgageRatio_set)
    BalanceAlgorithm: "TShfeFtdcBalanceAlgorithmType" = property(_riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_BalanceAlgorithm_get, _riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_BalanceAlgorithm_set)

    def __eq__(self, ct: "CShfeFtdcBrokerWithdrawAlgorithmField") -> "bool":
        return _riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_swiginit(self, _riskuserapi.new_CShfeFtdcBrokerWithdrawAlgorithmField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcBrokerWithdrawAlgorithmField

# Register CShfeFtdcBrokerWithdrawAlgorithmField in _riskuserapi:
_riskuserapi.CShfeFtdcBrokerWithdrawAlgorithmField_swigregister(CShfeFtdcBrokerWithdrawAlgorithmField)
class CShfeFtdcTradingAccountPasswordUpdateV1Field(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcTradingAccountPasswordUpdateV1Field_BrokerID_get, _riskuserapi.CShfeFtdcTradingAccountPasswordUpdateV1Field_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcTradingAccountPasswordUpdateV1Field_InvestorID_get, _riskuserapi.CShfeFtdcTradingAccountPasswordUpdateV1Field_InvestorID_set)
    OldPassword: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcTradingAccountPasswordUpdateV1Field_OldPassword_get, _riskuserapi.CShfeFtdcTradingAccountPasswordUpdateV1Field_OldPassword_set)
    NewPassword: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcTradingAccountPasswordUpdateV1Field_NewPassword_get, _riskuserapi.CShfeFtdcTradingAccountPasswordUpdateV1Field_NewPassword_set)

    def __eq__(self, ct: "CShfeFtdcTradingAccountPasswordUpdateV1Field") -> "bool":
        return _riskuserapi.CShfeFtdcTradingAccountPasswordUpdateV1Field___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTradingAccountPasswordUpdateV1Field_swiginit(self, _riskuserapi.new_CShfeFtdcTradingAccountPasswordUpdateV1Field())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTradingAccountPasswordUpdateV1Field

# Register CShfeFtdcTradingAccountPasswordUpdateV1Field in _riskuserapi:
_riskuserapi.CShfeFtdcTradingAccountPasswordUpdateV1Field_swigregister(CShfeFtdcTradingAccountPasswordUpdateV1Field)
class CShfeFtdcTradingAccountPasswordUpdateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcTradingAccountPasswordUpdateField_BrokerID_get, _riskuserapi.CShfeFtdcTradingAccountPasswordUpdateField_BrokerID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcTradingAccountPasswordUpdateField_AccountID_get, _riskuserapi.CShfeFtdcTradingAccountPasswordUpdateField_AccountID_set)
    OldPassword: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcTradingAccountPasswordUpdateField_OldPassword_get, _riskuserapi.CShfeFtdcTradingAccountPasswordUpdateField_OldPassword_set)
    NewPassword: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcTradingAccountPasswordUpdateField_NewPassword_get, _riskuserapi.CShfeFtdcTradingAccountPasswordUpdateField_NewPassword_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcTradingAccountPasswordUpdateField_CurrencyID_get, _riskuserapi.CShfeFtdcTradingAccountPasswordUpdateField_CurrencyID_set)

    def __eq__(self, ct: "CShfeFtdcTradingAccountPasswordUpdateField") -> "bool":
        return _riskuserapi.CShfeFtdcTradingAccountPasswordUpdateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTradingAccountPasswordUpdateField_swiginit(self, _riskuserapi.new_CShfeFtdcTradingAccountPasswordUpdateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTradingAccountPasswordUpdateField

# Register CShfeFtdcTradingAccountPasswordUpdateField in _riskuserapi:
_riskuserapi.CShfeFtdcTradingAccountPasswordUpdateField_swigregister(CShfeFtdcTradingAccountPasswordUpdateField)
class CShfeFtdcQryCombinationLegField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CombInstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryCombinationLegField_CombInstrumentID_get, _riskuserapi.CShfeFtdcQryCombinationLegField_CombInstrumentID_set)
    LegID: "TShfeFtdcLegIDType" = property(_riskuserapi.CShfeFtdcQryCombinationLegField_LegID_get, _riskuserapi.CShfeFtdcQryCombinationLegField_LegID_set)
    LegInstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryCombinationLegField_LegInstrumentID_get, _riskuserapi.CShfeFtdcQryCombinationLegField_LegInstrumentID_set)

    def __eq__(self, ct: "CShfeFtdcQryCombinationLegField") -> "bool":
        return _riskuserapi.CShfeFtdcQryCombinationLegField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryCombinationLegField_swiginit(self, _riskuserapi.new_CShfeFtdcQryCombinationLegField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryCombinationLegField

# Register CShfeFtdcQryCombinationLegField in _riskuserapi:
_riskuserapi.CShfeFtdcQryCombinationLegField_swigregister(CShfeFtdcQryCombinationLegField)
class CShfeFtdcQrySyncStatusField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcQrySyncStatusField_TradingDay_get, _riskuserapi.CShfeFtdcQrySyncStatusField_TradingDay_set)

    def __eq__(self, ct: "CShfeFtdcQrySyncStatusField") -> "bool":
        return _riskuserapi.CShfeFtdcQrySyncStatusField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQrySyncStatusField_swiginit(self, _riskuserapi.new_CShfeFtdcQrySyncStatusField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQrySyncStatusField

# Register CShfeFtdcQrySyncStatusField in _riskuserapi:
_riskuserapi.CShfeFtdcQrySyncStatusField_swigregister(CShfeFtdcQrySyncStatusField)
class CShfeFtdcCombinationLegField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CombInstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcCombinationLegField_CombInstrumentID_get, _riskuserapi.CShfeFtdcCombinationLegField_CombInstrumentID_set)
    LegID: "TShfeFtdcLegIDType" = property(_riskuserapi.CShfeFtdcCombinationLegField_LegID_get, _riskuserapi.CShfeFtdcCombinationLegField_LegID_set)
    LegInstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcCombinationLegField_LegInstrumentID_get, _riskuserapi.CShfeFtdcCombinationLegField_LegInstrumentID_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcCombinationLegField_Direction_get, _riskuserapi.CShfeFtdcCombinationLegField_Direction_set)
    LegMultiple: "TShfeFtdcLegMultipleType" = property(_riskuserapi.CShfeFtdcCombinationLegField_LegMultiple_get, _riskuserapi.CShfeFtdcCombinationLegField_LegMultiple_set)
    ImplyLevel: "TShfeFtdcImplyLevelType" = property(_riskuserapi.CShfeFtdcCombinationLegField_ImplyLevel_get, _riskuserapi.CShfeFtdcCombinationLegField_ImplyLevel_set)

    def __eq__(self, ct: "CShfeFtdcCombinationLegField") -> "bool":
        return _riskuserapi.CShfeFtdcCombinationLegField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcCombinationLegField_swiginit(self, _riskuserapi.new_CShfeFtdcCombinationLegField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcCombinationLegField

# Register CShfeFtdcCombinationLegField in _riskuserapi:
_riskuserapi.CShfeFtdcCombinationLegField_swigregister(CShfeFtdcCombinationLegField)
class CShfeFtdcSyncStatusField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSyncStatusField_TradingDay_get, _riskuserapi.CShfeFtdcSyncStatusField_TradingDay_set)
    DataSyncStatus: "TShfeFtdcDataSyncStatusType" = property(_riskuserapi.CShfeFtdcSyncStatusField_DataSyncStatus_get, _riskuserapi.CShfeFtdcSyncStatusField_DataSyncStatus_set)

    def __eq__(self, ct: "CShfeFtdcSyncStatusField") -> "bool":
        return _riskuserapi.CShfeFtdcSyncStatusField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSyncStatusField_swiginit(self, _riskuserapi.new_CShfeFtdcSyncStatusField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSyncStatusField

# Register CShfeFtdcSyncStatusField in _riskuserapi:
_riskuserapi.CShfeFtdcSyncStatusField_swigregister(CShfeFtdcSyncStatusField)
class CShfeFtdcQryLinkManField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryLinkManField_BrokerID_get, _riskuserapi.CShfeFtdcQryLinkManField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryLinkManField_InvestorID_get, _riskuserapi.CShfeFtdcQryLinkManField_InvestorID_set)

    def __eq__(self, ct: "CShfeFtdcQryLinkManField") -> "bool":
        return _riskuserapi.CShfeFtdcQryLinkManField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryLinkManField_swiginit(self, _riskuserapi.new_CShfeFtdcQryLinkManField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryLinkManField

# Register CShfeFtdcQryLinkManField in _riskuserapi:
_riskuserapi.CShfeFtdcQryLinkManField_swigregister(CShfeFtdcQryLinkManField)
class CShfeFtdcLinkManField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcLinkManField_BrokerID_get, _riskuserapi.CShfeFtdcLinkManField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcLinkManField_InvestorID_get, _riskuserapi.CShfeFtdcLinkManField_InvestorID_set)
    PersonType: "TShfeFtdcPersonTypeType" = property(_riskuserapi.CShfeFtdcLinkManField_PersonType_get, _riskuserapi.CShfeFtdcLinkManField_PersonType_set)
    IdentifiedCardType: "TShfeFtdcIdCardTypeType" = property(_riskuserapi.CShfeFtdcLinkManField_IdentifiedCardType_get, _riskuserapi.CShfeFtdcLinkManField_IdentifiedCardType_set)
    IdentifiedCardNo: "TShfeFtdcIdentifiedCardNoType" = property(_riskuserapi.CShfeFtdcLinkManField_IdentifiedCardNo_get, _riskuserapi.CShfeFtdcLinkManField_IdentifiedCardNo_set)
    PersonName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcLinkManField_PersonName_get, _riskuserapi.CShfeFtdcLinkManField_PersonName_set)
    Telephone: "TShfeFtdcTelephoneType" = property(_riskuserapi.CShfeFtdcLinkManField_Telephone_get, _riskuserapi.CShfeFtdcLinkManField_Telephone_set)
    Address: "TShfeFtdcAddressType" = property(_riskuserapi.CShfeFtdcLinkManField_Address_get, _riskuserapi.CShfeFtdcLinkManField_Address_set)
    ZipCode: "TShfeFtdcZipCodeType" = property(_riskuserapi.CShfeFtdcLinkManField_ZipCode_get, _riskuserapi.CShfeFtdcLinkManField_ZipCode_set)
    Priority: "TShfeFtdcPriorityType" = property(_riskuserapi.CShfeFtdcLinkManField_Priority_get, _riskuserapi.CShfeFtdcLinkManField_Priority_set)
    UOAZipCode: "TShfeFtdcUOAZipCodeType" = property(_riskuserapi.CShfeFtdcLinkManField_UOAZipCode_get, _riskuserapi.CShfeFtdcLinkManField_UOAZipCode_set)
    PersonFullName: "TShfeFtdcInvestorFullNameType" = property(_riskuserapi.CShfeFtdcLinkManField_PersonFullName_get, _riskuserapi.CShfeFtdcLinkManField_PersonFullName_set)

    def __eq__(self, ct: "CShfeFtdcLinkManField") -> "bool":
        return _riskuserapi.CShfeFtdcLinkManField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcLinkManField_swiginit(self, _riskuserapi.new_CShfeFtdcLinkManField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcLinkManField

# Register CShfeFtdcLinkManField in _riskuserapi:
_riskuserapi.CShfeFtdcLinkManField_swigregister(CShfeFtdcLinkManField)
class CShfeFtdcQryBrokerUserEventField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryBrokerUserEventField_BrokerID_get, _riskuserapi.CShfeFtdcQryBrokerUserEventField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcQryBrokerUserEventField_UserID_get, _riskuserapi.CShfeFtdcQryBrokerUserEventField_UserID_set)
    UserEventType: "TShfeFtdcUserEventTypeType" = property(_riskuserapi.CShfeFtdcQryBrokerUserEventField_UserEventType_get, _riskuserapi.CShfeFtdcQryBrokerUserEventField_UserEventType_set)

    def __eq__(self, ct: "CShfeFtdcQryBrokerUserEventField") -> "bool":
        return _riskuserapi.CShfeFtdcQryBrokerUserEventField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryBrokerUserEventField_swiginit(self, _riskuserapi.new_CShfeFtdcQryBrokerUserEventField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryBrokerUserEventField

# Register CShfeFtdcQryBrokerUserEventField in _riskuserapi:
_riskuserapi.CShfeFtdcQryBrokerUserEventField_swigregister(CShfeFtdcQryBrokerUserEventField)
class CShfeFtdcBrokerUserEventField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcBrokerUserEventField_BrokerID_get, _riskuserapi.CShfeFtdcBrokerUserEventField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcBrokerUserEventField_UserID_get, _riskuserapi.CShfeFtdcBrokerUserEventField_UserID_set)
    UserEventType: "TShfeFtdcUserEventTypeType" = property(_riskuserapi.CShfeFtdcBrokerUserEventField_UserEventType_get, _riskuserapi.CShfeFtdcBrokerUserEventField_UserEventType_set)
    EventSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcBrokerUserEventField_EventSequenceNo_get, _riskuserapi.CShfeFtdcBrokerUserEventField_EventSequenceNo_set)
    EventDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcBrokerUserEventField_EventDate_get, _riskuserapi.CShfeFtdcBrokerUserEventField_EventDate_set)
    EventTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcBrokerUserEventField_EventTime_get, _riskuserapi.CShfeFtdcBrokerUserEventField_EventTime_set)
    UserEventInfo: "TShfeFtdcUserEventInfoType" = property(_riskuserapi.CShfeFtdcBrokerUserEventField_UserEventInfo_get, _riskuserapi.CShfeFtdcBrokerUserEventField_UserEventInfo_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcBrokerUserEventField_InvestorID_get, _riskuserapi.CShfeFtdcBrokerUserEventField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcBrokerUserEventField_InstrumentID_get, _riskuserapi.CShfeFtdcBrokerUserEventField_InstrumentID_set)
    DRIdentityID: "TShfeFtdcDRIdentityIDType" = property(_riskuserapi.CShfeFtdcBrokerUserEventField_DRIdentityID_get, _riskuserapi.CShfeFtdcBrokerUserEventField_DRIdentityID_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcBrokerUserEventField_TradingDay_get, _riskuserapi.CShfeFtdcBrokerUserEventField_TradingDay_set)

    def __eq__(self, ct: "CShfeFtdcBrokerUserEventField") -> "bool":
        return _riskuserapi.CShfeFtdcBrokerUserEventField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcBrokerUserEventField_swiginit(self, _riskuserapi.new_CShfeFtdcBrokerUserEventField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcBrokerUserEventField

# Register CShfeFtdcBrokerUserEventField in _riskuserapi:
_riskuserapi.CShfeFtdcBrokerUserEventField_swigregister(CShfeFtdcBrokerUserEventField)
class CShfeFtdcQryContractBankField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryContractBankField_BrokerID_get, _riskuserapi.CShfeFtdcQryContractBankField_BrokerID_set)
    BankID: "TShfeFtdcBankIDType" = property(_riskuserapi.CShfeFtdcQryContractBankField_BankID_get, _riskuserapi.CShfeFtdcQryContractBankField_BankID_set)
    BankBrchID: "TShfeFtdcBankBrchIDType" = property(_riskuserapi.CShfeFtdcQryContractBankField_BankBrchID_get, _riskuserapi.CShfeFtdcQryContractBankField_BankBrchID_set)

    def __eq__(self, ct: "CShfeFtdcQryContractBankField") -> "bool":
        return _riskuserapi.CShfeFtdcQryContractBankField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryContractBankField_swiginit(self, _riskuserapi.new_CShfeFtdcQryContractBankField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryContractBankField

# Register CShfeFtdcQryContractBankField in _riskuserapi:
_riskuserapi.CShfeFtdcQryContractBankField_swigregister(CShfeFtdcQryContractBankField)
class CShfeFtdcContractBankField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcContractBankField_BrokerID_get, _riskuserapi.CShfeFtdcContractBankField_BrokerID_set)
    BankID: "TShfeFtdcBankIDType" = property(_riskuserapi.CShfeFtdcContractBankField_BankID_get, _riskuserapi.CShfeFtdcContractBankField_BankID_set)
    BankBrchID: "TShfeFtdcBankBrchIDType" = property(_riskuserapi.CShfeFtdcContractBankField_BankBrchID_get, _riskuserapi.CShfeFtdcContractBankField_BankBrchID_set)
    BankName: "TShfeFtdcBankNameType" = property(_riskuserapi.CShfeFtdcContractBankField_BankName_get, _riskuserapi.CShfeFtdcContractBankField_BankName_set)

    def __eq__(self, ct: "CShfeFtdcContractBankField") -> "bool":
        return _riskuserapi.CShfeFtdcContractBankField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcContractBankField_swiginit(self, _riskuserapi.new_CShfeFtdcContractBankField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcContractBankField

# Register CShfeFtdcContractBankField in _riskuserapi:
_riskuserapi.CShfeFtdcContractBankField_swigregister(CShfeFtdcContractBankField)
class CShfeFtdcInvestorPositionCombineDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_TradingDay_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_TradingDay_set)
    OpenDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_OpenDate_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_OpenDate_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_ExchangeID_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_ExchangeID_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_SettlementID_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_SettlementID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_InvestorID_set)
    ComTradeID: "TShfeFtdcTradeIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_ComTradeID_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_ComTradeID_set)
    TradeID: "TShfeFtdcTradeIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_TradeID_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_TradeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_InstrumentID_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_InstrumentID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_HedgeFlag_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_HedgeFlag_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_Direction_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_Direction_set)
    TotalAmt: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_TotalAmt_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_TotalAmt_set)
    Margin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_Margin_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_Margin_set)
    ExchMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_ExchMargin_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_ExchMargin_set)
    MarginRateByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_MarginRateByMoney_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_MarginRateByMoney_set)
    MarginRateByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_MarginRateByVolume_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_MarginRateByVolume_set)
    LegID: "TShfeFtdcLegIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_LegID_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_LegID_set)
    LegMultiple: "TShfeFtdcLegMultipleType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_LegMultiple_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_LegMultiple_set)
    CombInstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_CombInstrumentID_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_CombInstrumentID_set)
    TradeGroupID: "TShfeFtdcTradeGroupIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_TradeGroupID_get, _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_TradeGroupID_set)

    def __eq__(self, ct: "CShfeFtdcInvestorPositionCombineDetailField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorPositionCombineDetailField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorPositionCombineDetailField

# Register CShfeFtdcInvestorPositionCombineDetailField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorPositionCombineDetailField_swigregister(CShfeFtdcInvestorPositionCombineDetailField)
class CShfeFtdcParkedOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcParkedOrderField_BrokerID_get, _riskuserapi.CShfeFtdcParkedOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcParkedOrderField_InvestorID_get, _riskuserapi.CShfeFtdcParkedOrderField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcParkedOrderField_InstrumentID_get, _riskuserapi.CShfeFtdcParkedOrderField_InstrumentID_set)
    OrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcParkedOrderField_OrderRef_get, _riskuserapi.CShfeFtdcParkedOrderField_OrderRef_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcParkedOrderField_UserID_get, _riskuserapi.CShfeFtdcParkedOrderField_UserID_set)
    OrderPriceType: "TShfeFtdcOrderPriceTypeType" = property(_riskuserapi.CShfeFtdcParkedOrderField_OrderPriceType_get, _riskuserapi.CShfeFtdcParkedOrderField_OrderPriceType_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcParkedOrderField_Direction_get, _riskuserapi.CShfeFtdcParkedOrderField_Direction_set)
    CombOffsetFlag: "TShfeFtdcCombOffsetFlagType" = property(_riskuserapi.CShfeFtdcParkedOrderField_CombOffsetFlag_get, _riskuserapi.CShfeFtdcParkedOrderField_CombOffsetFlag_set)
    CombHedgeFlag: "TShfeFtdcCombHedgeFlagType" = property(_riskuserapi.CShfeFtdcParkedOrderField_CombHedgeFlag_get, _riskuserapi.CShfeFtdcParkedOrderField_CombHedgeFlag_set)
    LimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcParkedOrderField_LimitPrice_get, _riskuserapi.CShfeFtdcParkedOrderField_LimitPrice_set)
    VolumeTotalOriginal: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcParkedOrderField_VolumeTotalOriginal_get, _riskuserapi.CShfeFtdcParkedOrderField_VolumeTotalOriginal_set)
    TimeCondition: "TShfeFtdcTimeConditionType" = property(_riskuserapi.CShfeFtdcParkedOrderField_TimeCondition_get, _riskuserapi.CShfeFtdcParkedOrderField_TimeCondition_set)
    GTDDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcParkedOrderField_GTDDate_get, _riskuserapi.CShfeFtdcParkedOrderField_GTDDate_set)
    VolumeCondition: "TShfeFtdcVolumeConditionType" = property(_riskuserapi.CShfeFtdcParkedOrderField_VolumeCondition_get, _riskuserapi.CShfeFtdcParkedOrderField_VolumeCondition_set)
    MinVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcParkedOrderField_MinVolume_get, _riskuserapi.CShfeFtdcParkedOrderField_MinVolume_set)
    ContingentCondition: "TShfeFtdcContingentConditionType" = property(_riskuserapi.CShfeFtdcParkedOrderField_ContingentCondition_get, _riskuserapi.CShfeFtdcParkedOrderField_ContingentCondition_set)
    StopPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcParkedOrderField_StopPrice_get, _riskuserapi.CShfeFtdcParkedOrderField_StopPrice_set)
    ForceCloseReason: "TShfeFtdcForceCloseReasonType" = property(_riskuserapi.CShfeFtdcParkedOrderField_ForceCloseReason_get, _riskuserapi.CShfeFtdcParkedOrderField_ForceCloseReason_set)
    IsAutoSuspend: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcParkedOrderField_IsAutoSuspend_get, _riskuserapi.CShfeFtdcParkedOrderField_IsAutoSuspend_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcParkedOrderField_BusinessUnit_get, _riskuserapi.CShfeFtdcParkedOrderField_BusinessUnit_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcParkedOrderField_RequestID_get, _riskuserapi.CShfeFtdcParkedOrderField_RequestID_set)
    UserForceClose: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcParkedOrderField_UserForceClose_get, _riskuserapi.CShfeFtdcParkedOrderField_UserForceClose_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcParkedOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcParkedOrderField_ExchangeID_set)
    ParkedOrderID: "TShfeFtdcParkedOrderIDType" = property(_riskuserapi.CShfeFtdcParkedOrderField_ParkedOrderID_get, _riskuserapi.CShfeFtdcParkedOrderField_ParkedOrderID_set)
    UserType: "TShfeFtdcUserTypeType" = property(_riskuserapi.CShfeFtdcParkedOrderField_UserType_get, _riskuserapi.CShfeFtdcParkedOrderField_UserType_set)
    Status: "TShfeFtdcParkedOrderStatusType" = property(_riskuserapi.CShfeFtdcParkedOrderField_Status_get, _riskuserapi.CShfeFtdcParkedOrderField_Status_set)
    ErrorID: "TShfeFtdcErrorIDType" = property(_riskuserapi.CShfeFtdcParkedOrderField_ErrorID_get, _riskuserapi.CShfeFtdcParkedOrderField_ErrorID_set)
    ErrorMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcParkedOrderField_ErrorMsg_get, _riskuserapi.CShfeFtdcParkedOrderField_ErrorMsg_set)
    IsSwapOrder: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcParkedOrderField_IsSwapOrder_get, _riskuserapi.CShfeFtdcParkedOrderField_IsSwapOrder_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcParkedOrderField_AccountID_get, _riskuserapi.CShfeFtdcParkedOrderField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcParkedOrderField_CurrencyID_get, _riskuserapi.CShfeFtdcParkedOrderField_CurrencyID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcParkedOrderField_ClientID_get, _riskuserapi.CShfeFtdcParkedOrderField_ClientID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcParkedOrderField_InvestUnitID_get, _riskuserapi.CShfeFtdcParkedOrderField_InvestUnitID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcParkedOrderField_IPAddress_get, _riskuserapi.CShfeFtdcParkedOrderField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcParkedOrderField_MacAddress_get, _riskuserapi.CShfeFtdcParkedOrderField_MacAddress_set)

    def __eq__(self, ct: "CShfeFtdcParkedOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcParkedOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcParkedOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcParkedOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcParkedOrderField

# Register CShfeFtdcParkedOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcParkedOrderField_swigregister(CShfeFtdcParkedOrderField)
class CShfeFtdcParkedOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_BrokerID_get, _riskuserapi.CShfeFtdcParkedOrderActionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_InvestorID_get, _riskuserapi.CShfeFtdcParkedOrderActionField_InvestorID_set)
    OrderActionRef: "TShfeFtdcOrderActionRefType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_OrderActionRef_get, _riskuserapi.CShfeFtdcParkedOrderActionField_OrderActionRef_set)
    OrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_OrderRef_get, _riskuserapi.CShfeFtdcParkedOrderActionField_OrderRef_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_RequestID_get, _riskuserapi.CShfeFtdcParkedOrderActionField_RequestID_set)
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_FrontID_get, _riskuserapi.CShfeFtdcParkedOrderActionField_FrontID_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_SessionID_get, _riskuserapi.CShfeFtdcParkedOrderActionField_SessionID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_ExchangeID_get, _riskuserapi.CShfeFtdcParkedOrderActionField_ExchangeID_set)
    OrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_OrderSysID_get, _riskuserapi.CShfeFtdcParkedOrderActionField_OrderSysID_set)
    ActionFlag: "TShfeFtdcActionFlagType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_ActionFlag_get, _riskuserapi.CShfeFtdcParkedOrderActionField_ActionFlag_set)
    LimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_LimitPrice_get, _riskuserapi.CShfeFtdcParkedOrderActionField_LimitPrice_set)
    VolumeChange: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_VolumeChange_get, _riskuserapi.CShfeFtdcParkedOrderActionField_VolumeChange_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_UserID_get, _riskuserapi.CShfeFtdcParkedOrderActionField_UserID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_InstrumentID_get, _riskuserapi.CShfeFtdcParkedOrderActionField_InstrumentID_set)
    ParkedOrderActionID: "TShfeFtdcParkedOrderActionIDType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_ParkedOrderActionID_get, _riskuserapi.CShfeFtdcParkedOrderActionField_ParkedOrderActionID_set)
    UserType: "TShfeFtdcUserTypeType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_UserType_get, _riskuserapi.CShfeFtdcParkedOrderActionField_UserType_set)
    Status: "TShfeFtdcParkedOrderStatusType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_Status_get, _riskuserapi.CShfeFtdcParkedOrderActionField_Status_set)
    ErrorID: "TShfeFtdcErrorIDType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_ErrorID_get, _riskuserapi.CShfeFtdcParkedOrderActionField_ErrorID_set)
    ErrorMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_ErrorMsg_get, _riskuserapi.CShfeFtdcParkedOrderActionField_ErrorMsg_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_InvestUnitID_get, _riskuserapi.CShfeFtdcParkedOrderActionField_InvestUnitID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_IPAddress_get, _riskuserapi.CShfeFtdcParkedOrderActionField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcParkedOrderActionField_MacAddress_get, _riskuserapi.CShfeFtdcParkedOrderActionField_MacAddress_set)

    def __eq__(self, ct: "CShfeFtdcParkedOrderActionField") -> "bool":
        return _riskuserapi.CShfeFtdcParkedOrderActionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcParkedOrderActionField_swiginit(self, _riskuserapi.new_CShfeFtdcParkedOrderActionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcParkedOrderActionField

# Register CShfeFtdcParkedOrderActionField in _riskuserapi:
_riskuserapi.CShfeFtdcParkedOrderActionField_swigregister(CShfeFtdcParkedOrderActionField)
class CShfeFtdcQryParkedOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryParkedOrderField_BrokerID_get, _riskuserapi.CShfeFtdcQryParkedOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryParkedOrderField_InvestorID_get, _riskuserapi.CShfeFtdcQryParkedOrderField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryParkedOrderField_InstrumentID_get, _riskuserapi.CShfeFtdcQryParkedOrderField_InstrumentID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryParkedOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcQryParkedOrderField_ExchangeID_set)

    def __eq__(self, ct: "CShfeFtdcQryParkedOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcQryParkedOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryParkedOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcQryParkedOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryParkedOrderField

# Register CShfeFtdcQryParkedOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcQryParkedOrderField_swigregister(CShfeFtdcQryParkedOrderField)
class CShfeFtdcQryParkedOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryParkedOrderActionField_BrokerID_get, _riskuserapi.CShfeFtdcQryParkedOrderActionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryParkedOrderActionField_InvestorID_get, _riskuserapi.CShfeFtdcQryParkedOrderActionField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryParkedOrderActionField_InstrumentID_get, _riskuserapi.CShfeFtdcQryParkedOrderActionField_InstrumentID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryParkedOrderActionField_ExchangeID_get, _riskuserapi.CShfeFtdcQryParkedOrderActionField_ExchangeID_set)

    def __eq__(self, ct: "CShfeFtdcQryParkedOrderActionField") -> "bool":
        return _riskuserapi.CShfeFtdcQryParkedOrderActionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryParkedOrderActionField_swiginit(self, _riskuserapi.new_CShfeFtdcQryParkedOrderActionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryParkedOrderActionField

# Register CShfeFtdcQryParkedOrderActionField in _riskuserapi:
_riskuserapi.CShfeFtdcQryParkedOrderActionField_swigregister(CShfeFtdcQryParkedOrderActionField)
class CShfeFtdcRemoveParkedOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRemoveParkedOrderField_BrokerID_get, _riskuserapi.CShfeFtdcRemoveParkedOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRemoveParkedOrderField_InvestorID_get, _riskuserapi.CShfeFtdcRemoveParkedOrderField_InvestorID_set)
    ParkedOrderID: "TShfeFtdcParkedOrderIDType" = property(_riskuserapi.CShfeFtdcRemoveParkedOrderField_ParkedOrderID_get, _riskuserapi.CShfeFtdcRemoveParkedOrderField_ParkedOrderID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcRemoveParkedOrderField_InvestUnitID_get, _riskuserapi.CShfeFtdcRemoveParkedOrderField_InvestUnitID_set)

    def __eq__(self, ct: "CShfeFtdcRemoveParkedOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcRemoveParkedOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRemoveParkedOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcRemoveParkedOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRemoveParkedOrderField

# Register CShfeFtdcRemoveParkedOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcRemoveParkedOrderField_swigregister(CShfeFtdcRemoveParkedOrderField)
class CShfeFtdcRemoveParkedOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRemoveParkedOrderActionField_BrokerID_get, _riskuserapi.CShfeFtdcRemoveParkedOrderActionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRemoveParkedOrderActionField_InvestorID_get, _riskuserapi.CShfeFtdcRemoveParkedOrderActionField_InvestorID_set)
    ParkedOrderActionID: "TShfeFtdcParkedOrderActionIDType" = property(_riskuserapi.CShfeFtdcRemoveParkedOrderActionField_ParkedOrderActionID_get, _riskuserapi.CShfeFtdcRemoveParkedOrderActionField_ParkedOrderActionID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcRemoveParkedOrderActionField_InvestUnitID_get, _riskuserapi.CShfeFtdcRemoveParkedOrderActionField_InvestUnitID_set)

    def __eq__(self, ct: "CShfeFtdcRemoveParkedOrderActionField") -> "bool":
        return _riskuserapi.CShfeFtdcRemoveParkedOrderActionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRemoveParkedOrderActionField_swiginit(self, _riskuserapi.new_CShfeFtdcRemoveParkedOrderActionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRemoveParkedOrderActionField

# Register CShfeFtdcRemoveParkedOrderActionField in _riskuserapi:
_riskuserapi.CShfeFtdcRemoveParkedOrderActionField_swigregister(CShfeFtdcRemoveParkedOrderActionField)
class CShfeFtdcInvestorWithdrawAlgorithmField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorWithdrawAlgorithmField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorWithdrawAlgorithmField_BrokerID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcInvestorWithdrawAlgorithmField_InvestorRange_get, _riskuserapi.CShfeFtdcInvestorWithdrawAlgorithmField_InvestorRange_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorWithdrawAlgorithmField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorWithdrawAlgorithmField_InvestorID_set)
    UsingRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInvestorWithdrawAlgorithmField_UsingRatio_get, _riskuserapi.CShfeFtdcInvestorWithdrawAlgorithmField_UsingRatio_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcInvestorWithdrawAlgorithmField_CurrencyID_get, _riskuserapi.CShfeFtdcInvestorWithdrawAlgorithmField_CurrencyID_set)
    FundMortgageRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInvestorWithdrawAlgorithmField_FundMortgageRatio_get, _riskuserapi.CShfeFtdcInvestorWithdrawAlgorithmField_FundMortgageRatio_set)

    def __eq__(self, ct: "CShfeFtdcInvestorWithdrawAlgorithmField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorWithdrawAlgorithmField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorWithdrawAlgorithmField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorWithdrawAlgorithmField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorWithdrawAlgorithmField

# Register CShfeFtdcInvestorWithdrawAlgorithmField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorWithdrawAlgorithmField_swigregister(CShfeFtdcInvestorWithdrawAlgorithmField)
class CShfeFtdcQryInvestorPositionCombineDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInvestorPositionCombineDetailField_BrokerID_get, _riskuserapi.CShfeFtdcQryInvestorPositionCombineDetailField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryInvestorPositionCombineDetailField_InvestorID_get, _riskuserapi.CShfeFtdcQryInvestorPositionCombineDetailField_InvestorID_set)
    CombInstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_get, _riskuserapi.CShfeFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_set)

    def __eq__(self, ct: "CShfeFtdcQryInvestorPositionCombineDetailField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInvestorPositionCombineDetailField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInvestorPositionCombineDetailField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInvestorPositionCombineDetailField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInvestorPositionCombineDetailField

# Register CShfeFtdcQryInvestorPositionCombineDetailField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInvestorPositionCombineDetailField_swigregister(CShfeFtdcQryInvestorPositionCombineDetailField)
class CShfeFtdcMarketDataAveragePriceField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AveragePrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcMarketDataAveragePriceField_AveragePrice_get, _riskuserapi.CShfeFtdcMarketDataAveragePriceField_AveragePrice_set)

    def __eq__(self, ct: "CShfeFtdcMarketDataAveragePriceField") -> "bool":
        return _riskuserapi.CShfeFtdcMarketDataAveragePriceField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcMarketDataAveragePriceField_swiginit(self, _riskuserapi.new_CShfeFtdcMarketDataAveragePriceField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcMarketDataAveragePriceField

# Register CShfeFtdcMarketDataAveragePriceField in _riskuserapi:
_riskuserapi.CShfeFtdcMarketDataAveragePriceField_swigregister(CShfeFtdcMarketDataAveragePriceField)
class CShfeFtdcVerifyInvestorPasswordField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcVerifyInvestorPasswordField_BrokerID_get, _riskuserapi.CShfeFtdcVerifyInvestorPasswordField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcVerifyInvestorPasswordField_InvestorID_get, _riskuserapi.CShfeFtdcVerifyInvestorPasswordField_InvestorID_set)
    Password: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcVerifyInvestorPasswordField_Password_get, _riskuserapi.CShfeFtdcVerifyInvestorPasswordField_Password_set)

    def __eq__(self, ct: "CShfeFtdcVerifyInvestorPasswordField") -> "bool":
        return _riskuserapi.CShfeFtdcVerifyInvestorPasswordField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcVerifyInvestorPasswordField_swiginit(self, _riskuserapi.new_CShfeFtdcVerifyInvestorPasswordField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcVerifyInvestorPasswordField

# Register CShfeFtdcVerifyInvestorPasswordField in _riskuserapi:
_riskuserapi.CShfeFtdcVerifyInvestorPasswordField_swigregister(CShfeFtdcVerifyInvestorPasswordField)
class CShfeFtdcUserIPField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcUserIPField_BrokerID_get, _riskuserapi.CShfeFtdcUserIPField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcUserIPField_UserID_get, _riskuserapi.CShfeFtdcUserIPField_UserID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcUserIPField_IPAddress_get, _riskuserapi.CShfeFtdcUserIPField_IPAddress_set)
    IPMask: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcUserIPField_IPMask_get, _riskuserapi.CShfeFtdcUserIPField_IPMask_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcUserIPField_MacAddress_get, _riskuserapi.CShfeFtdcUserIPField_MacAddress_set)

    def __eq__(self, ct: "CShfeFtdcUserIPField") -> "bool":
        return _riskuserapi.CShfeFtdcUserIPField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcUserIPField_swiginit(self, _riskuserapi.new_CShfeFtdcUserIPField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcUserIPField

# Register CShfeFtdcUserIPField in _riskuserapi:
_riskuserapi.CShfeFtdcUserIPField_swigregister(CShfeFtdcUserIPField)
class CShfeFtdcTradingNoticeInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcTradingNoticeInfoField_BrokerID_get, _riskuserapi.CShfeFtdcTradingNoticeInfoField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcTradingNoticeInfoField_InvestorID_get, _riskuserapi.CShfeFtdcTradingNoticeInfoField_InvestorID_set)
    SendTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcTradingNoticeInfoField_SendTime_get, _riskuserapi.CShfeFtdcTradingNoticeInfoField_SendTime_set)
    FieldContent: "TShfeFtdcContentType" = property(_riskuserapi.CShfeFtdcTradingNoticeInfoField_FieldContent_get, _riskuserapi.CShfeFtdcTradingNoticeInfoField_FieldContent_set)
    SequenceSeries: "TShfeFtdcSequenceSeriesType" = property(_riskuserapi.CShfeFtdcTradingNoticeInfoField_SequenceSeries_get, _riskuserapi.CShfeFtdcTradingNoticeInfoField_SequenceSeries_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcTradingNoticeInfoField_SequenceNo_get, _riskuserapi.CShfeFtdcTradingNoticeInfoField_SequenceNo_set)

    def __eq__(self, ct: "CShfeFtdcTradingNoticeInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcTradingNoticeInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTradingNoticeInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcTradingNoticeInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTradingNoticeInfoField

# Register CShfeFtdcTradingNoticeInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcTradingNoticeInfoField_swigregister(CShfeFtdcTradingNoticeInfoField)
class CShfeFtdcTradingNoticeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcTradingNoticeField_BrokerID_get, _riskuserapi.CShfeFtdcTradingNoticeField_BrokerID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcTradingNoticeField_InvestorRange_get, _riskuserapi.CShfeFtdcTradingNoticeField_InvestorRange_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcTradingNoticeField_InvestorID_get, _riskuserapi.CShfeFtdcTradingNoticeField_InvestorID_set)
    SequenceSeries: "TShfeFtdcSequenceSeriesType" = property(_riskuserapi.CShfeFtdcTradingNoticeField_SequenceSeries_get, _riskuserapi.CShfeFtdcTradingNoticeField_SequenceSeries_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcTradingNoticeField_UserID_get, _riskuserapi.CShfeFtdcTradingNoticeField_UserID_set)
    SendTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcTradingNoticeField_SendTime_get, _riskuserapi.CShfeFtdcTradingNoticeField_SendTime_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcTradingNoticeField_SequenceNo_get, _riskuserapi.CShfeFtdcTradingNoticeField_SequenceNo_set)
    FieldContent: "TShfeFtdcContentType" = property(_riskuserapi.CShfeFtdcTradingNoticeField_FieldContent_get, _riskuserapi.CShfeFtdcTradingNoticeField_FieldContent_set)

    def __eq__(self, ct: "CShfeFtdcTradingNoticeField") -> "bool":
        return _riskuserapi.CShfeFtdcTradingNoticeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTradingNoticeField_swiginit(self, _riskuserapi.new_CShfeFtdcTradingNoticeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTradingNoticeField

# Register CShfeFtdcTradingNoticeField in _riskuserapi:
_riskuserapi.CShfeFtdcTradingNoticeField_swigregister(CShfeFtdcTradingNoticeField)
class CShfeFtdcQryTradingNoticeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryTradingNoticeField_BrokerID_get, _riskuserapi.CShfeFtdcQryTradingNoticeField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryTradingNoticeField_InvestorID_get, _riskuserapi.CShfeFtdcQryTradingNoticeField_InvestorID_set)

    def __eq__(self, ct: "CShfeFtdcQryTradingNoticeField") -> "bool":
        return _riskuserapi.CShfeFtdcQryTradingNoticeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryTradingNoticeField_swiginit(self, _riskuserapi.new_CShfeFtdcQryTradingNoticeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryTradingNoticeField

# Register CShfeFtdcQryTradingNoticeField in _riskuserapi:
_riskuserapi.CShfeFtdcQryTradingNoticeField_swigregister(CShfeFtdcQryTradingNoticeField)
class CShfeFtdcQryErrOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryErrOrderField_BrokerID_get, _riskuserapi.CShfeFtdcQryErrOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryErrOrderField_InvestorID_get, _riskuserapi.CShfeFtdcQryErrOrderField_InvestorID_set)

    def __eq__(self, ct: "CShfeFtdcQryErrOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcQryErrOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryErrOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcQryErrOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryErrOrderField

# Register CShfeFtdcQryErrOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcQryErrOrderField_swigregister(CShfeFtdcQryErrOrderField)
class CShfeFtdcErrOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcErrOrderField_BrokerID_get, _riskuserapi.CShfeFtdcErrOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcErrOrderField_InvestorID_get, _riskuserapi.CShfeFtdcErrOrderField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcErrOrderField_InstrumentID_get, _riskuserapi.CShfeFtdcErrOrderField_InstrumentID_set)
    OrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcErrOrderField_OrderRef_get, _riskuserapi.CShfeFtdcErrOrderField_OrderRef_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcErrOrderField_UserID_get, _riskuserapi.CShfeFtdcErrOrderField_UserID_set)
    OrderPriceType: "TShfeFtdcOrderPriceTypeType" = property(_riskuserapi.CShfeFtdcErrOrderField_OrderPriceType_get, _riskuserapi.CShfeFtdcErrOrderField_OrderPriceType_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcErrOrderField_Direction_get, _riskuserapi.CShfeFtdcErrOrderField_Direction_set)
    CombOffsetFlag: "TShfeFtdcCombOffsetFlagType" = property(_riskuserapi.CShfeFtdcErrOrderField_CombOffsetFlag_get, _riskuserapi.CShfeFtdcErrOrderField_CombOffsetFlag_set)
    CombHedgeFlag: "TShfeFtdcCombHedgeFlagType" = property(_riskuserapi.CShfeFtdcErrOrderField_CombHedgeFlag_get, _riskuserapi.CShfeFtdcErrOrderField_CombHedgeFlag_set)
    LimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcErrOrderField_LimitPrice_get, _riskuserapi.CShfeFtdcErrOrderField_LimitPrice_set)
    VolumeTotalOriginal: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcErrOrderField_VolumeTotalOriginal_get, _riskuserapi.CShfeFtdcErrOrderField_VolumeTotalOriginal_set)
    TimeCondition: "TShfeFtdcTimeConditionType" = property(_riskuserapi.CShfeFtdcErrOrderField_TimeCondition_get, _riskuserapi.CShfeFtdcErrOrderField_TimeCondition_set)
    GTDDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcErrOrderField_GTDDate_get, _riskuserapi.CShfeFtdcErrOrderField_GTDDate_set)
    VolumeCondition: "TShfeFtdcVolumeConditionType" = property(_riskuserapi.CShfeFtdcErrOrderField_VolumeCondition_get, _riskuserapi.CShfeFtdcErrOrderField_VolumeCondition_set)
    MinVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcErrOrderField_MinVolume_get, _riskuserapi.CShfeFtdcErrOrderField_MinVolume_set)
    ContingentCondition: "TShfeFtdcContingentConditionType" = property(_riskuserapi.CShfeFtdcErrOrderField_ContingentCondition_get, _riskuserapi.CShfeFtdcErrOrderField_ContingentCondition_set)
    StopPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcErrOrderField_StopPrice_get, _riskuserapi.CShfeFtdcErrOrderField_StopPrice_set)
    ForceCloseReason: "TShfeFtdcForceCloseReasonType" = property(_riskuserapi.CShfeFtdcErrOrderField_ForceCloseReason_get, _riskuserapi.CShfeFtdcErrOrderField_ForceCloseReason_set)
    IsAutoSuspend: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcErrOrderField_IsAutoSuspend_get, _riskuserapi.CShfeFtdcErrOrderField_IsAutoSuspend_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcErrOrderField_BusinessUnit_get, _riskuserapi.CShfeFtdcErrOrderField_BusinessUnit_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcErrOrderField_RequestID_get, _riskuserapi.CShfeFtdcErrOrderField_RequestID_set)
    UserForceClose: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcErrOrderField_UserForceClose_get, _riskuserapi.CShfeFtdcErrOrderField_UserForceClose_set)
    ErrorID: "TShfeFtdcErrorIDType" = property(_riskuserapi.CShfeFtdcErrOrderField_ErrorID_get, _riskuserapi.CShfeFtdcErrOrderField_ErrorID_set)
    ErrorMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcErrOrderField_ErrorMsg_get, _riskuserapi.CShfeFtdcErrOrderField_ErrorMsg_set)
    IsSwapOrder: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcErrOrderField_IsSwapOrder_get, _riskuserapi.CShfeFtdcErrOrderField_IsSwapOrder_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcErrOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcErrOrderField_ExchangeID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcErrOrderField_InvestUnitID_get, _riskuserapi.CShfeFtdcErrOrderField_InvestUnitID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcErrOrderField_AccountID_get, _riskuserapi.CShfeFtdcErrOrderField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcErrOrderField_CurrencyID_get, _riskuserapi.CShfeFtdcErrOrderField_CurrencyID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcErrOrderField_ClientID_get, _riskuserapi.CShfeFtdcErrOrderField_ClientID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcErrOrderField_IPAddress_get, _riskuserapi.CShfeFtdcErrOrderField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcErrOrderField_MacAddress_get, _riskuserapi.CShfeFtdcErrOrderField_MacAddress_set)
    OrderMemo: "TShfeFtdcOrderMemoType" = property(_riskuserapi.CShfeFtdcErrOrderField_OrderMemo_get, _riskuserapi.CShfeFtdcErrOrderField_OrderMemo_set)
    SessionReqSeq: "TShfeFtdcSequenceNo12Type" = property(_riskuserapi.CShfeFtdcErrOrderField_SessionReqSeq_get, _riskuserapi.CShfeFtdcErrOrderField_SessionReqSeq_set)

    def __eq__(self, ct: "CShfeFtdcErrOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcErrOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcErrOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcErrOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcErrOrderField

# Register CShfeFtdcErrOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcErrOrderField_swigregister(CShfeFtdcErrOrderField)
class CShfeFtdcQryErrOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryErrOrderActionField_BrokerID_get, _riskuserapi.CShfeFtdcQryErrOrderActionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryErrOrderActionField_InvestorID_get, _riskuserapi.CShfeFtdcQryErrOrderActionField_InvestorID_set)

    def __eq__(self, ct: "CShfeFtdcQryErrOrderActionField") -> "bool":
        return _riskuserapi.CShfeFtdcQryErrOrderActionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryErrOrderActionField_swiginit(self, _riskuserapi.new_CShfeFtdcQryErrOrderActionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryErrOrderActionField

# Register CShfeFtdcQryErrOrderActionField in _riskuserapi:
_riskuserapi.CShfeFtdcQryErrOrderActionField_swigregister(CShfeFtdcQryErrOrderActionField)
class CShfeFtdcErrOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_BrokerID_get, _riskuserapi.CShfeFtdcErrOrderActionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_InvestorID_get, _riskuserapi.CShfeFtdcErrOrderActionField_InvestorID_set)
    OrderActionRef: "TShfeFtdcOrderActionRefType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_OrderActionRef_get, _riskuserapi.CShfeFtdcErrOrderActionField_OrderActionRef_set)
    OrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_OrderRef_get, _riskuserapi.CShfeFtdcErrOrderActionField_OrderRef_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_RequestID_get, _riskuserapi.CShfeFtdcErrOrderActionField_RequestID_set)
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_FrontID_get, _riskuserapi.CShfeFtdcErrOrderActionField_FrontID_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_SessionID_get, _riskuserapi.CShfeFtdcErrOrderActionField_SessionID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_ExchangeID_get, _riskuserapi.CShfeFtdcErrOrderActionField_ExchangeID_set)
    OrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_OrderSysID_get, _riskuserapi.CShfeFtdcErrOrderActionField_OrderSysID_set)
    ActionFlag: "TShfeFtdcActionFlagType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_ActionFlag_get, _riskuserapi.CShfeFtdcErrOrderActionField_ActionFlag_set)
    LimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_LimitPrice_get, _riskuserapi.CShfeFtdcErrOrderActionField_LimitPrice_set)
    VolumeChange: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_VolumeChange_get, _riskuserapi.CShfeFtdcErrOrderActionField_VolumeChange_set)
    ActionDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_ActionDate_get, _riskuserapi.CShfeFtdcErrOrderActionField_ActionDate_set)
    ActionTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_ActionTime_get, _riskuserapi.CShfeFtdcErrOrderActionField_ActionTime_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_TraderID_get, _riskuserapi.CShfeFtdcErrOrderActionField_TraderID_set)
    InstallID: "TShfeFtdcInstallIDType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_InstallID_get, _riskuserapi.CShfeFtdcErrOrderActionField_InstallID_set)
    OrderLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_OrderLocalID_get, _riskuserapi.CShfeFtdcErrOrderActionField_OrderLocalID_set)
    ActionLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_ActionLocalID_get, _riskuserapi.CShfeFtdcErrOrderActionField_ActionLocalID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_ParticipantID_get, _riskuserapi.CShfeFtdcErrOrderActionField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_ClientID_get, _riskuserapi.CShfeFtdcErrOrderActionField_ClientID_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_BusinessUnit_get, _riskuserapi.CShfeFtdcErrOrderActionField_BusinessUnit_set)
    OrderActionStatus: "TShfeFtdcOrderActionStatusType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_OrderActionStatus_get, _riskuserapi.CShfeFtdcErrOrderActionField_OrderActionStatus_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_UserID_get, _riskuserapi.CShfeFtdcErrOrderActionField_UserID_set)
    StatusMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_StatusMsg_get, _riskuserapi.CShfeFtdcErrOrderActionField_StatusMsg_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_InstrumentID_get, _riskuserapi.CShfeFtdcErrOrderActionField_InstrumentID_set)
    BranchID: "TShfeFtdcBranchIDType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_BranchID_get, _riskuserapi.CShfeFtdcErrOrderActionField_BranchID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_InvestUnitID_get, _riskuserapi.CShfeFtdcErrOrderActionField_InvestUnitID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_IPAddress_get, _riskuserapi.CShfeFtdcErrOrderActionField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_MacAddress_get, _riskuserapi.CShfeFtdcErrOrderActionField_MacAddress_set)
    OrderMemo: "TShfeFtdcOrderMemoType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_OrderMemo_get, _riskuserapi.CShfeFtdcErrOrderActionField_OrderMemo_set)
    SessionReqSeq: "TShfeFtdcSequenceNo12Type" = property(_riskuserapi.CShfeFtdcErrOrderActionField_SessionReqSeq_get, _riskuserapi.CShfeFtdcErrOrderActionField_SessionReqSeq_set)
    ErrorID: "TShfeFtdcErrorIDType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_ErrorID_get, _riskuserapi.CShfeFtdcErrOrderActionField_ErrorID_set)
    ErrorMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcErrOrderActionField_ErrorMsg_get, _riskuserapi.CShfeFtdcErrOrderActionField_ErrorMsg_set)

    def __eq__(self, ct: "CShfeFtdcErrOrderActionField") -> "bool":
        return _riskuserapi.CShfeFtdcErrOrderActionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcErrOrderActionField_swiginit(self, _riskuserapi.new_CShfeFtdcErrOrderActionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcErrOrderActionField

# Register CShfeFtdcErrOrderActionField in _riskuserapi:
_riskuserapi.CShfeFtdcErrOrderActionField_swigregister(CShfeFtdcErrOrderActionField)
class CShfeFtdcAuthUserIDField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcAuthUserIDField_BrokerID_get, _riskuserapi.CShfeFtdcAuthUserIDField_BrokerID_set)
    AppID: "TShfeFtdcAppIDType" = property(_riskuserapi.CShfeFtdcAuthUserIDField_AppID_get, _riskuserapi.CShfeFtdcAuthUserIDField_AppID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcAuthUserIDField_UserID_get, _riskuserapi.CShfeFtdcAuthUserIDField_UserID_set)
    AuthType: "TShfeFtdcAuthTypeType" = property(_riskuserapi.CShfeFtdcAuthUserIDField_AuthType_get, _riskuserapi.CShfeFtdcAuthUserIDField_AuthType_set)

    def __eq__(self, ct: "CShfeFtdcAuthUserIDField") -> "bool":
        return _riskuserapi.CShfeFtdcAuthUserIDField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcAuthUserIDField_swiginit(self, _riskuserapi.new_CShfeFtdcAuthUserIDField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcAuthUserIDField

# Register CShfeFtdcAuthUserIDField in _riskuserapi:
_riskuserapi.CShfeFtdcAuthUserIDField_swigregister(CShfeFtdcAuthUserIDField)
class CShfeFtdcAuthIPField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcAuthIPField_BrokerID_get, _riskuserapi.CShfeFtdcAuthIPField_BrokerID_set)
    AppID: "TShfeFtdcAppIDType" = property(_riskuserapi.CShfeFtdcAuthIPField_AppID_get, _riskuserapi.CShfeFtdcAuthIPField_AppID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcAuthIPField_IPAddress_get, _riskuserapi.CShfeFtdcAuthIPField_IPAddress_set)

    def __eq__(self, ct: "CShfeFtdcAuthIPField") -> "bool":
        return _riskuserapi.CShfeFtdcAuthIPField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcAuthIPField_swiginit(self, _riskuserapi.new_CShfeFtdcAuthIPField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcAuthIPField

# Register CShfeFtdcAuthIPField in _riskuserapi:
_riskuserapi.CShfeFtdcAuthIPField_swigregister(CShfeFtdcAuthIPField)
class CShfeFtdcInvestorSumInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Count: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorSumInfoField_Count_get, _riskuserapi.CShfeFtdcInvestorSumInfoField_Count_set)
    md5_1: "TShfeFtdcMD5Type" = property(_riskuserapi.CShfeFtdcInvestorSumInfoField_md5_1_get, _riskuserapi.CShfeFtdcInvestorSumInfoField_md5_1_set)
    md5_2: "TShfeFtdcMD5Type" = property(_riskuserapi.CShfeFtdcInvestorSumInfoField_md5_2_get, _riskuserapi.CShfeFtdcInvestorSumInfoField_md5_2_set)
    md5_3: "TShfeFtdcMD5Type" = property(_riskuserapi.CShfeFtdcInvestorSumInfoField_md5_3_get, _riskuserapi.CShfeFtdcInvestorSumInfoField_md5_3_set)
    md5_4: "TShfeFtdcMD5Type" = property(_riskuserapi.CShfeFtdcInvestorSumInfoField_md5_4_get, _riskuserapi.CShfeFtdcInvestorSumInfoField_md5_4_set)
    md5_5: "TShfeFtdcMD5Type" = property(_riskuserapi.CShfeFtdcInvestorSumInfoField_md5_5_get, _riskuserapi.CShfeFtdcInvestorSumInfoField_md5_5_set)
    md5_6: "TShfeFtdcMD5Type" = property(_riskuserapi.CShfeFtdcInvestorSumInfoField_md5_6_get, _riskuserapi.CShfeFtdcInvestorSumInfoField_md5_6_set)
    md5_7: "TShfeFtdcMD5Type" = property(_riskuserapi.CShfeFtdcInvestorSumInfoField_md5_7_get, _riskuserapi.CShfeFtdcInvestorSumInfoField_md5_7_set)
    md5_8: "TShfeFtdcMD5Type" = property(_riskuserapi.CShfeFtdcInvestorSumInfoField_md5_8_get, _riskuserapi.CShfeFtdcInvestorSumInfoField_md5_8_set)
    md5_9: "TShfeFtdcMD5Type" = property(_riskuserapi.CShfeFtdcInvestorSumInfoField_md5_9_get, _riskuserapi.CShfeFtdcInvestorSumInfoField_md5_9_set)
    md5_10: "TShfeFtdcMD5Type" = property(_riskuserapi.CShfeFtdcInvestorSumInfoField_md5_10_get, _riskuserapi.CShfeFtdcInvestorSumInfoField_md5_10_set)
    md5_11: "TShfeFtdcMD5Type" = property(_riskuserapi.CShfeFtdcInvestorSumInfoField_md5_11_get, _riskuserapi.CShfeFtdcInvestorSumInfoField_md5_11_set)
    md5_12: "TShfeFtdcMD5Type" = property(_riskuserapi.CShfeFtdcInvestorSumInfoField_md5_12_get, _riskuserapi.CShfeFtdcInvestorSumInfoField_md5_12_set)
    md5_13: "TShfeFtdcMD5Type" = property(_riskuserapi.CShfeFtdcInvestorSumInfoField_md5_13_get, _riskuserapi.CShfeFtdcInvestorSumInfoField_md5_13_set)
    md5_14: "TShfeFtdcMD5Type" = property(_riskuserapi.CShfeFtdcInvestorSumInfoField_md5_14_get, _riskuserapi.CShfeFtdcInvestorSumInfoField_md5_14_set)
    md5_15: "TShfeFtdcMD5Type" = property(_riskuserapi.CShfeFtdcInvestorSumInfoField_md5_15_get, _riskuserapi.CShfeFtdcInvestorSumInfoField_md5_15_set)
    md5_16: "TShfeFtdcMD5Type" = property(_riskuserapi.CShfeFtdcInvestorSumInfoField_md5_16_get, _riskuserapi.CShfeFtdcInvestorSumInfoField_md5_16_set)

    def __eq__(self, ct: "CShfeFtdcInvestorSumInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorSumInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorSumInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorSumInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorSumInfoField

# Register CShfeFtdcInvestorSumInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorSumInfoField_swigregister(CShfeFtdcInvestorSumInfoField)
class CShfeFtdcSettlementSessionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSettlementSessionField_TradingDay_get, _riskuserapi.CShfeFtdcSettlementSessionField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcSettlementSessionField_SettlementID_get, _riskuserapi.CShfeFtdcSettlementSessionField_SettlementID_set)

    def __eq__(self, ct: "CShfeFtdcSettlementSessionField") -> "bool":
        return _riskuserapi.CShfeFtdcSettlementSessionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSettlementSessionField_swiginit(self, _riskuserapi.new_CShfeFtdcSettlementSessionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSettlementSessionField

# Register CShfeFtdcSettlementSessionField in _riskuserapi:
_riskuserapi.CShfeFtdcSettlementSessionField_swigregister(CShfeFtdcSettlementSessionField)
class CShfeFtdcReqRiskUserLoginField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcReqRiskUserLoginField_BrokerID_get, _riskuserapi.CShfeFtdcReqRiskUserLoginField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcReqRiskUserLoginField_UserID_get, _riskuserapi.CShfeFtdcReqRiskUserLoginField_UserID_set)
    Password: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcReqRiskUserLoginField_Password_get, _riskuserapi.CShfeFtdcReqRiskUserLoginField_Password_set)
    Version: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcReqRiskUserLoginField_Version_get, _riskuserapi.CShfeFtdcReqRiskUserLoginField_Version_set)
    LocalSessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcReqRiskUserLoginField_LocalSessionID_get, _riskuserapi.CShfeFtdcReqRiskUserLoginField_LocalSessionID_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcReqRiskUserLoginField_MacAddress_get, _riskuserapi.CShfeFtdcReqRiskUserLoginField_MacAddress_set)
    ClientIPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcReqRiskUserLoginField_ClientIPAddress_get, _riskuserapi.CShfeFtdcReqRiskUserLoginField_ClientIPAddress_set)
    ApiVersion: "TShfeFtdcApiVersionType" = property(_riskuserapi.CShfeFtdcReqRiskUserLoginField_ApiVersion_get, _riskuserapi.CShfeFtdcReqRiskUserLoginField_ApiVersion_set)

    def __eq__(self, ct: "CShfeFtdcReqRiskUserLoginField") -> "bool":
        return _riskuserapi.CShfeFtdcReqRiskUserLoginField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcReqRiskUserLoginField_swiginit(self, _riskuserapi.new_CShfeFtdcReqRiskUserLoginField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcReqRiskUserLoginField

# Register CShfeFtdcReqRiskUserLoginField in _riskuserapi:
_riskuserapi.CShfeFtdcReqRiskUserLoginField_swigregister(CShfeFtdcReqRiskUserLoginField)
class CShfeFtdcRspRiskUserLoginField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRspRiskUserLoginField_TradingDay_get, _riskuserapi.CShfeFtdcRspRiskUserLoginField_TradingDay_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRspRiskUserLoginField_BrokerID_get, _riskuserapi.CShfeFtdcRspRiskUserLoginField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRspRiskUserLoginField_UserID_get, _riskuserapi.CShfeFtdcRspRiskUserLoginField_UserID_set)
    Version: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspRiskUserLoginField_Version_get, _riskuserapi.CShfeFtdcRspRiskUserLoginField_Version_set)
    FrontType: "TShfeFtdcFrontTypeType" = property(_riskuserapi.CShfeFtdcRspRiskUserLoginField_FrontType_get, _riskuserapi.CShfeFtdcRspRiskUserLoginField_FrontType_set)
    SysVersion: "TShfeFtdcSysVersionType" = property(_riskuserapi.CShfeFtdcRspRiskUserLoginField_SysVersion_get, _riskuserapi.CShfeFtdcRspRiskUserLoginField_SysVersion_set)
    ApiVersion: "TShfeFtdcApiVersionType" = property(_riskuserapi.CShfeFtdcRspRiskUserLoginField_ApiVersion_get, _riskuserapi.CShfeFtdcRspRiskUserLoginField_ApiVersion_set)

    def __eq__(self, ct: "CShfeFtdcRspRiskUserLoginField") -> "bool":
        return _riskuserapi.CShfeFtdcRspRiskUserLoginField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRspRiskUserLoginField_swiginit(self, _riskuserapi.new_CShfeFtdcRspRiskUserLoginField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRspRiskUserLoginField

# Register CShfeFtdcRspRiskUserLoginField in _riskuserapi:
_riskuserapi.CShfeFtdcRspRiskUserLoginField_swigregister(CShfeFtdcRspRiskUserLoginField)
class CShfeFtdcInvestorRangeSumInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    startindex: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorRangeSumInfoField_startindex_get, _riskuserapi.CShfeFtdcInvestorRangeSumInfoField_startindex_set)
    endindex: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorRangeSumInfoField_endindex_get, _riskuserapi.CShfeFtdcInvestorRangeSumInfoField_endindex_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorRangeSumInfoField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorRangeSumInfoField_BrokerID_set)

    def __eq__(self, ct: "CShfeFtdcInvestorRangeSumInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorRangeSumInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorRangeSumInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorRangeSumInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorRangeSumInfoField

# Register CShfeFtdcInvestorRangeSumInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorRangeSumInfoField_swigregister(CShfeFtdcInvestorRangeSumInfoField)
class CShfeFtdcReqInvestorAccountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcReqInvestorAccountField_BrokerID_get, _riskuserapi.CShfeFtdcReqInvestorAccountField_BrokerID_set)
    TradingDayStart: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcReqInvestorAccountField_TradingDayStart_get, _riskuserapi.CShfeFtdcReqInvestorAccountField_TradingDayStart_set)
    TradingDayEnd: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcReqInvestorAccountField_TradingDayEnd_get, _riskuserapi.CShfeFtdcReqInvestorAccountField_TradingDayEnd_set)
    InvestorIDStart: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcReqInvestorAccountField_InvestorIDStart_get, _riskuserapi.CShfeFtdcReqInvestorAccountField_InvestorIDStart_set)
    InvestorIDEnd: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcReqInvestorAccountField_InvestorIDEnd_get, _riskuserapi.CShfeFtdcReqInvestorAccountField_InvestorIDEnd_set)
    SortType: "TShfeFtdcAccountSortTypeType" = property(_riskuserapi.CShfeFtdcReqInvestorAccountField_SortType_get, _riskuserapi.CShfeFtdcReqInvestorAccountField_SortType_set)
    ResultCount: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcReqInvestorAccountField_ResultCount_get, _riskuserapi.CShfeFtdcReqInvestorAccountField_ResultCount_set)
    ResultRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcReqInvestorAccountField_ResultRatio_get, _riskuserapi.CShfeFtdcReqInvestorAccountField_ResultRatio_set)

    def __eq__(self, ct: "CShfeFtdcReqInvestorAccountField") -> "bool":
        return _riskuserapi.CShfeFtdcReqInvestorAccountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcReqInvestorAccountField_swiginit(self, _riskuserapi.new_CShfeFtdcReqInvestorAccountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcReqInvestorAccountField

# Register CShfeFtdcReqInvestorAccountField in _riskuserapi:
_riskuserapi.CShfeFtdcReqInvestorAccountField_swigregister(CShfeFtdcReqInvestorAccountField)
class CShfeFtdcInvestorRiskAccountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_InvestorID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_AccountID_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_AccountID_set)
    PreMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_PreMortgage_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_PreMortgage_set)
    PreCredit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_PreCredit_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_PreCredit_set)
    PreDeposit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_PreDeposit_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_PreDeposit_set)
    PreBalance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_PreBalance_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_PreBalance_set)
    PreMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_PreMargin_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_PreMargin_set)
    Withdraw: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_Withdraw_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_Withdraw_set)
    CurrMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_CurrMargin_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_CurrMargin_set)
    Commission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_Commission_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_Commission_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_CloseProfit_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_CloseProfit_set)
    PositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_PositionProfit_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_PositionProfit_set)
    Balance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_Balance_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_Balance_set)
    Available: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_Available_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_Available_set)
    Mortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_Mortgage_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_Mortgage_set)
    ExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_ExchangeMargin_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_ExchangeMargin_set)
    Reserve: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_Reserve_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_Reserve_set)
    WithdrawQuota: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_WithdrawQuota_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_WithdrawQuota_set)
    Credit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_Credit_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_Credit_set)
    PreExchMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_PreExchMargin_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_PreExchMargin_set)
    ForceCloseStat: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_ForceCloseStat_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_ForceCloseStat_set)
    DeliveryMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_DeliveryMargin_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_DeliveryMargin_set)
    ExchangeDeliveryMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_ExchangeDeliveryMargin_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_ExchangeDeliveryMargin_set)
    FrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_FrozenMargin_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_FrozenMargin_set)
    FrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_FrozenCommission_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_FrozenCommission_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_CurrencyID_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_CurrencyID_set)
    PreSpecProductMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_PreSpecProductMargin_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_PreSpecProductMargin_set)
    PreSpecProductExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_PreSpecProductExchangeMargin_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_PreSpecProductExchangeMargin_set)
    PreMarginOnMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_PreMarginOnMortgage_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_PreMarginOnMortgage_set)
    PreExchMarginOnMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_PreExchMarginOnMortgage_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_PreExchMarginOnMortgage_set)
    PreFundMortgageIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_PreFundMortgageIn_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_PreFundMortgageIn_set)
    PreFundMortgageOut: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_PreFundMortgageOut_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_PreFundMortgageOut_set)
    Deposit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_Deposit_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_Deposit_set)
    TradingPositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_TradingPositionProfit_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_TradingPositionProfit_set)
    FundMortgageIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_FundMortgageIn_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_FundMortgageIn_set)
    FundMortgageOut: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_FundMortgageOut_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_FundMortgageOut_set)
    FundMortgageAvailable: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_FundMortgageAvailable_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_FundMortgageAvailable_set)
    MortgageableFund: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_MortgageableFund_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_MortgageableFund_set)
    SpecProductExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_SpecProductExchangeMargin_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_SpecProductExchangeMargin_set)
    SpecProductFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_SpecProductFrozenMargin_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_SpecProductFrozenMargin_set)
    SpecProductMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_SpecProductMargin_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_SpecProductMargin_set)
    SpecProductCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_SpecProductCommission_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_SpecProductCommission_set)
    SpecProductFrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_SpecProductFrozenCommission_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_SpecProductFrozenCommission_set)
    SpecProductPositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_SpecProductPositionProfit_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_SpecProductPositionProfit_set)
    SpecProductCloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_SpecProductCloseProfit_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_SpecProductCloseProfit_set)
    SpecProductPositionProfitByAlg: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_SpecProductPositionProfitByAlg_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_SpecProductPositionProfitByAlg_set)
    FrozenMarginOnMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_FrozenMarginOnMortgage_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_FrozenMarginOnMortgage_set)
    MarginOnMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_MarginOnMortgage_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_MarginOnMortgage_set)
    ExchMarginOnMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_ExchMarginOnMortgage_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_ExchMarginOnMortgage_set)
    FrozenCommissionOnMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_FrozenCommissionOnMortgage_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_FrozenCommissionOnMortgage_set)
    PositionProfitOnMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_PositionProfitOnMortgage_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_PositionProfitOnMortgage_set)
    CommissionOnMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_CommissionOnMortgage_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_CommissionOnMortgage_set)
    CloseProfitOnMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_CloseProfitOnMortgage_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_CloseProfitOnMortgage_set)
    OptionCloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_OptionCloseProfit_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_OptionCloseProfit_set)
    OptionValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_OptionValue_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_OptionValue_set)
    FrozenCash: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_FrozenCash_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_FrozenCash_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_CashIn_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_CashIn_set)
    MaintCurrMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_MaintCurrMargin_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_MaintCurrMargin_set)
    MaintExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_MaintExchangeMargin_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_MaintExchangeMargin_set)
    FixedMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_FixedMargin_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_FixedMargin_set)
    ExchFixedMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_ExchFixedMargin_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_ExchFixedMargin_set)
    FrozenSwap: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_FrozenSwap_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_FrozenSwap_set)
    RemainSwap: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_RemainSwap_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_RemainSwap_set)
    NCombMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorRiskAccountField_NCombMargin_get, _riskuserapi.CShfeFtdcInvestorRiskAccountField_NCombMargin_set)

    def __eq__(self, ct: "CShfeFtdcInvestorRiskAccountField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorRiskAccountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorRiskAccountField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorRiskAccountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorRiskAccountField

# Register CShfeFtdcInvestorRiskAccountField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorRiskAccountField_swigregister(CShfeFtdcInvestorRiskAccountField)
class CShfeFtdcReqInvestorPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcReqInvestorPositionField_BrokerID_get, _riskuserapi.CShfeFtdcReqInvestorPositionField_BrokerID_set)
    TradingDayStart: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcReqInvestorPositionField_TradingDayStart_get, _riskuserapi.CShfeFtdcReqInvestorPositionField_TradingDayStart_set)
    TradingDayEnd: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcReqInvestorPositionField_TradingDayEnd_get, _riskuserapi.CShfeFtdcReqInvestorPositionField_TradingDayEnd_set)
    InvestorIDStart: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcReqInvestorPositionField_InvestorIDStart_get, _riskuserapi.CShfeFtdcReqInvestorPositionField_InvestorIDStart_set)
    InvestorIDEnd: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcReqInvestorPositionField_InvestorIDEnd_get, _riskuserapi.CShfeFtdcReqInvestorPositionField_InvestorIDEnd_set)
    InstIDStart: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcReqInvestorPositionField_InstIDStart_get, _riskuserapi.CShfeFtdcReqInvestorPositionField_InstIDStart_set)
    InstIDEnd: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcReqInvestorPositionField_InstIDEnd_get, _riskuserapi.CShfeFtdcReqInvestorPositionField_InstIDEnd_set)
    ProductIDStart: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcReqInvestorPositionField_ProductIDStart_get, _riskuserapi.CShfeFtdcReqInvestorPositionField_ProductIDStart_set)
    ProductIDEnd: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcReqInvestorPositionField_ProductIDEnd_get, _riskuserapi.CShfeFtdcReqInvestorPositionField_ProductIDEnd_set)
    SortType: "TShfeFtdcPositionSortTypeType" = property(_riskuserapi.CShfeFtdcReqInvestorPositionField_SortType_get, _riskuserapi.CShfeFtdcReqInvestorPositionField_SortType_set)
    ResultCount: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcReqInvestorPositionField_ResultCount_get, _riskuserapi.CShfeFtdcReqInvestorPositionField_ResultCount_set)
    ResultRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcReqInvestorPositionField_ResultRatio_get, _riskuserapi.CShfeFtdcReqInvestorPositionField_ResultRatio_set)

    def __eq__(self, ct: "CShfeFtdcReqInvestorPositionField") -> "bool":
        return _riskuserapi.CShfeFtdcReqInvestorPositionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcReqInvestorPositionField_swiginit(self, _riskuserapi.new_CShfeFtdcReqInvestorPositionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcReqInvestorPositionField

# Register CShfeFtdcReqInvestorPositionField in _riskuserapi:
_riskuserapi.CShfeFtdcReqInvestorPositionField_swigregister(CShfeFtdcReqInvestorPositionField)
class CShfeFtdcRspInvestorPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_InstrumentID_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_InstrumentID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_BrokerID_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_InvestorID_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_InvestorID_set)
    PosiDirection: "TShfeFtdcPosiDirectionType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_PosiDirection_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_PosiDirection_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_HedgeFlag_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_HedgeFlag_set)
    PositionDate: "TShfeFtdcPositionDateType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_PositionDate_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_PositionDate_set)
    YdPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_YdPosition_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_YdPosition_set)
    Position: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_Position_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_Position_set)
    LongFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_LongFrozen_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_LongFrozen_set)
    ShortFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_ShortFrozen_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_ShortFrozen_set)
    LongFrozenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_LongFrozenAmount_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_LongFrozenAmount_set)
    ShortFrozenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_ShortFrozenAmount_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_ShortFrozenAmount_set)
    OpenVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_OpenVolume_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_OpenVolume_set)
    CloseVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_CloseVolume_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_CloseVolume_set)
    OpenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_OpenAmount_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_OpenAmount_set)
    CloseAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_CloseAmount_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_CloseAmount_set)
    PositionCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_PositionCost_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_PositionCost_set)
    PreMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_PreMargin_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_PreMargin_set)
    UseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_UseMargin_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_UseMargin_set)
    FrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_FrozenMargin_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_FrozenMargin_set)
    FrozenCash: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_FrozenCash_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_FrozenCash_set)
    FrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_FrozenCommission_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_FrozenCommission_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_CashIn_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_CashIn_set)
    Commission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_Commission_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_Commission_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_CloseProfit_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_CloseProfit_set)
    PositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_PositionProfit_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_PositionProfit_set)
    PreSettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_PreSettlementPrice_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_PreSettlementPrice_set)
    SettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_SettlementPrice_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_SettlementPrice_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_TradingDay_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_SettlementID_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_SettlementID_set)
    OpenCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_OpenCost_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_OpenCost_set)
    ExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_ExchangeMargin_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_ExchangeMargin_set)
    CombPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_CombPosition_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_CombPosition_set)
    CombLongFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_CombLongFrozen_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_CombLongFrozen_set)
    CombShortFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_CombShortFrozen_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_CombShortFrozen_set)
    CloseProfitByDate: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_CloseProfitByDate_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_CloseProfitByDate_set)
    CloseProfitByTrade: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_CloseProfitByTrade_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_CloseProfitByTrade_set)
    TodayPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_TodayPosition_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_TodayPosition_set)
    MarginRateByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_MarginRateByMoney_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_MarginRateByMoney_set)
    MarginRateByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_MarginRateByVolume_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_MarginRateByVolume_set)
    StrikeFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_StrikeFrozen_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_StrikeFrozen_set)
    StrikeFrozenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_StrikeFrozenAmount_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_StrikeFrozenAmount_set)
    AbandonFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_AbandonFrozen_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_AbandonFrozen_set)
    OptionValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_OptionValue_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_OptionValue_set)
    MaintUseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_MaintUseMargin_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_MaintUseMargin_set)
    MaintExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_MaintExchangeMargin_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_MaintExchangeMargin_set)
    IndexSettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_IndexSettlementPrice_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_IndexSettlementPrice_set)
    FixedMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_FixedMargin_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_FixedMargin_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_ExchangeID_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_ExchangeID_set)
    YdStrikeFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_YdStrikeFrozen_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_YdStrikeFrozen_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_InvestUnitID_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_InvestUnitID_set)
    PositionCostOffset: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_PositionCostOffset_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_PositionCostOffset_set)
    TasPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_TasPosition_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_TasPosition_set)
    TasPositionCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspInvestorPositionField_TasPositionCost_get, _riskuserapi.CShfeFtdcRspInvestorPositionField_TasPositionCost_set)

    def __eq__(self, ct: "CShfeFtdcRspInvestorPositionField") -> "bool":
        return _riskuserapi.CShfeFtdcRspInvestorPositionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRspInvestorPositionField_swiginit(self, _riskuserapi.new_CShfeFtdcRspInvestorPositionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRspInvestorPositionField

# Register CShfeFtdcRspInvestorPositionField in _riskuserapi:
_riskuserapi.CShfeFtdcRspInvestorPositionField_swigregister(CShfeFtdcRspInvestorPositionField)
class CShfeFtdcReqInvestorTradeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcReqInvestorTradeField_BrokerID_get, _riskuserapi.CShfeFtdcReqInvestorTradeField_BrokerID_set)
    TradingDayStart: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcReqInvestorTradeField_TradingDayStart_get, _riskuserapi.CShfeFtdcReqInvestorTradeField_TradingDayStart_set)
    TradingDayEnd: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcReqInvestorTradeField_TradingDayEnd_get, _riskuserapi.CShfeFtdcReqInvestorTradeField_TradingDayEnd_set)
    InvestorIDStart: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcReqInvestorTradeField_InvestorIDStart_get, _riskuserapi.CShfeFtdcReqInvestorTradeField_InvestorIDStart_set)
    InvestorIDEnd: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcReqInvestorTradeField_InvestorIDEnd_get, _riskuserapi.CShfeFtdcReqInvestorTradeField_InvestorIDEnd_set)
    InstIDStart: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcReqInvestorTradeField_InstIDStart_get, _riskuserapi.CShfeFtdcReqInvestorTradeField_InstIDStart_set)
    InstIDEnd: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcReqInvestorTradeField_InstIDEnd_get, _riskuserapi.CShfeFtdcReqInvestorTradeField_InstIDEnd_set)
    ProductIDStart: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcReqInvestorTradeField_ProductIDStart_get, _riskuserapi.CShfeFtdcReqInvestorTradeField_ProductIDStart_set)
    ProductIDEnd: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcReqInvestorTradeField_ProductIDEnd_get, _riskuserapi.CShfeFtdcReqInvestorTradeField_ProductIDEnd_set)
    SortType: "TShfeFtdcTradeSortTypeType" = property(_riskuserapi.CShfeFtdcReqInvestorTradeField_SortType_get, _riskuserapi.CShfeFtdcReqInvestorTradeField_SortType_set)
    ResultCount: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcReqInvestorTradeField_ResultCount_get, _riskuserapi.CShfeFtdcReqInvestorTradeField_ResultCount_set)
    ResultRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcReqInvestorTradeField_ResultRatio_get, _riskuserapi.CShfeFtdcReqInvestorTradeField_ResultRatio_set)

    def __eq__(self, ct: "CShfeFtdcReqInvestorTradeField") -> "bool":
        return _riskuserapi.CShfeFtdcReqInvestorTradeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcReqInvestorTradeField_swiginit(self, _riskuserapi.new_CShfeFtdcReqInvestorTradeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcReqInvestorTradeField

# Register CShfeFtdcReqInvestorTradeField in _riskuserapi:
_riskuserapi.CShfeFtdcReqInvestorTradeField_swigregister(CShfeFtdcReqInvestorTradeField)
class CShfeFtdcRspInvestorTradeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_BrokerID_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_InvestorID_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_InstrumentID_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_InstrumentID_set)
    OrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_OrderRef_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_OrderRef_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_UserID_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_UserID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_ExchangeID_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_ExchangeID_set)
    TradeID: "TShfeFtdcTradeIDType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_TradeID_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_TradeID_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_Direction_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_Direction_set)
    OrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_OrderSysID_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_OrderSysID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_ParticipantID_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_ClientID_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_ClientID_set)
    TradingRole: "TShfeFtdcTradingRoleType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_TradingRole_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_TradingRole_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_ExchangeInstID_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_ExchangeInstID_set)
    OffsetFlag: "TShfeFtdcOffsetFlagType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_OffsetFlag_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_OffsetFlag_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_HedgeFlag_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_HedgeFlag_set)
    Price: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_Price_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_Price_set)
    Volume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_Volume_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_Volume_set)
    TradeDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_TradeDate_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_TradeDate_set)
    TradeTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_TradeTime_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_TradeTime_set)
    TradeType: "TShfeFtdcTradeTypeType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_TradeType_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_TradeType_set)
    PriceSource: "TShfeFtdcPriceSourceType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_PriceSource_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_PriceSource_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_TraderID_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_TraderID_set)
    OrderLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_OrderLocalID_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_OrderLocalID_set)
    ClearingPartID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_ClearingPartID_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_ClearingPartID_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_BusinessUnit_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_BusinessUnit_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_SequenceNo_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_SequenceNo_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_TradingDay_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_SettlementID_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_SettlementID_set)
    BrokerOrderSeq: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_BrokerOrderSeq_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_BrokerOrderSeq_set)
    TradeSource: "TShfeFtdcTradeSourceType" = property(_riskuserapi.CShfeFtdcRspInvestorTradeField_TradeSource_get, _riskuserapi.CShfeFtdcRspInvestorTradeField_TradeSource_set)

    def __eq__(self, ct: "CShfeFtdcRspInvestorTradeField") -> "bool":
        return _riskuserapi.CShfeFtdcRspInvestorTradeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRspInvestorTradeField_swiginit(self, _riskuserapi.new_CShfeFtdcRspInvestorTradeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRspInvestorTradeField

# Register CShfeFtdcRspInvestorTradeField in _riskuserapi:
_riskuserapi.CShfeFtdcRspInvestorTradeField_swigregister(CShfeFtdcRspInvestorTradeField)
class CShfeFtdcReqInvestorOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcReqInvestorOrderField_BrokerID_get, _riskuserapi.CShfeFtdcReqInvestorOrderField_BrokerID_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcReqInvestorOrderField_TradingDay_get, _riskuserapi.CShfeFtdcReqInvestorOrderField_TradingDay_set)
    InvestorIDStart: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcReqInvestorOrderField_InvestorIDStart_get, _riskuserapi.CShfeFtdcReqInvestorOrderField_InvestorIDStart_set)
    InvestorIDEnd: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcReqInvestorOrderField_InvestorIDEnd_get, _riskuserapi.CShfeFtdcReqInvestorOrderField_InvestorIDEnd_set)
    InstIDStart: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcReqInvestorOrderField_InstIDStart_get, _riskuserapi.CShfeFtdcReqInvestorOrderField_InstIDStart_set)
    InstIDEnd: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcReqInvestorOrderField_InstIDEnd_get, _riskuserapi.CShfeFtdcReqInvestorOrderField_InstIDEnd_set)
    ProductIDStart: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcReqInvestorOrderField_ProductIDStart_get, _riskuserapi.CShfeFtdcReqInvestorOrderField_ProductIDStart_set)
    ProductIDEnd: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcReqInvestorOrderField_ProductIDEnd_get, _riskuserapi.CShfeFtdcReqInvestorOrderField_ProductIDEnd_set)

    def __eq__(self, ct: "CShfeFtdcReqInvestorOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcReqInvestorOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcReqInvestorOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcReqInvestorOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcReqInvestorOrderField

# Register CShfeFtdcReqInvestorOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcReqInvestorOrderField_swigregister(CShfeFtdcReqInvestorOrderField)
class CShfeFtdcRspInvestorOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_BrokerID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_InvestorID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_InstrumentID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_InstrumentID_set)
    OrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_OrderRef_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_OrderRef_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_UserID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_UserID_set)
    OrderPriceType: "TShfeFtdcOrderPriceTypeType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_OrderPriceType_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_OrderPriceType_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_Direction_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_Direction_set)
    CombOffsetFlag: "TShfeFtdcCombOffsetFlagType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_CombOffsetFlag_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_CombOffsetFlag_set)
    CombHedgeFlag: "TShfeFtdcCombHedgeFlagType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_CombHedgeFlag_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_CombHedgeFlag_set)
    LimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_LimitPrice_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_LimitPrice_set)
    VolumeTotalOriginal: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_VolumeTotalOriginal_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_VolumeTotalOriginal_set)
    TimeCondition: "TShfeFtdcTimeConditionType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_TimeCondition_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_TimeCondition_set)
    GTDDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_GTDDate_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_GTDDate_set)
    VolumeCondition: "TShfeFtdcVolumeConditionType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_VolumeCondition_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_VolumeCondition_set)
    MinVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_MinVolume_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_MinVolume_set)
    ContingentCondition: "TShfeFtdcContingentConditionType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_ContingentCondition_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_ContingentCondition_set)
    StopPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_StopPrice_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_StopPrice_set)
    ForceCloseReason: "TShfeFtdcForceCloseReasonType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_ForceCloseReason_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_ForceCloseReason_set)
    IsAutoSuspend: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_IsAutoSuspend_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_IsAutoSuspend_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_BusinessUnit_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_BusinessUnit_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_RequestID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_RequestID_set)
    OrderLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_OrderLocalID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_OrderLocalID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_ExchangeID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_ParticipantID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_ClientID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_ClientID_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_ExchangeInstID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_ExchangeInstID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_TraderID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_TraderID_set)
    InstallID: "TShfeFtdcInstallIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_InstallID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_InstallID_set)
    OrderSubmitStatus: "TShfeFtdcOrderSubmitStatusType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_OrderSubmitStatus_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_OrderSubmitStatus_set)
    NotifySequence: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_NotifySequence_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_NotifySequence_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_TradingDay_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_SettlementID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_SettlementID_set)
    OrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_OrderSysID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_OrderSysID_set)
    OrderSource: "TShfeFtdcOrderSourceType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_OrderSource_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_OrderSource_set)
    OrderStatus: "TShfeFtdcOrderStatusType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_OrderStatus_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_OrderStatus_set)
    OrderType: "TShfeFtdcOrderTypeType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_OrderType_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_OrderType_set)
    VolumeTraded: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_VolumeTraded_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_VolumeTraded_set)
    VolumeTotal: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_VolumeTotal_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_VolumeTotal_set)
    InsertDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_InsertDate_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_InsertDate_set)
    InsertTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_InsertTime_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_InsertTime_set)
    ActiveTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_ActiveTime_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_ActiveTime_set)
    SuspendTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_SuspendTime_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_SuspendTime_set)
    UpdateTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_UpdateTime_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_UpdateTime_set)
    CancelTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_CancelTime_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_CancelTime_set)
    ActiveTraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_ActiveTraderID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_ActiveTraderID_set)
    ClearingPartID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_ClearingPartID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_ClearingPartID_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_SequenceNo_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_SequenceNo_set)
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_FrontID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_FrontID_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_SessionID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_SessionID_set)
    UserProductInfo: "TShfeFtdcProductInfoType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_UserProductInfo_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_UserProductInfo_set)
    StatusMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_StatusMsg_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_StatusMsg_set)
    UserForceClose: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_UserForceClose_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_UserForceClose_set)
    ActiveUserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_ActiveUserID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_ActiveUserID_set)
    BrokerOrderSeq: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_BrokerOrderSeq_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_BrokerOrderSeq_set)
    RelativeOrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_RelativeOrderSysID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_RelativeOrderSysID_set)
    ZCETotalTradedVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_ZCETotalTradedVolume_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_ZCETotalTradedVolume_set)
    IsSwapOrder: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_IsSwapOrder_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_IsSwapOrder_set)
    BranchID: "TShfeFtdcBranchIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_BranchID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_BranchID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_InvestUnitID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_InvestUnitID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_AccountID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_CurrencyID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_CurrencyID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_IPAddress_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_MacAddress_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_MacAddress_set)
    AppID: "TShfeFtdcAppIDType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_AppID_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_AppID_set)
    OrderMemo: "TShfeFtdcOrderMemoType" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_OrderMemo_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_OrderMemo_set)
    SessionReqSeq: "TShfeFtdcSequenceNo12Type" = property(_riskuserapi.CShfeFtdcRspInvestorOrderField_SessionReqSeq_get, _riskuserapi.CShfeFtdcRspInvestorOrderField_SessionReqSeq_set)

    def __eq__(self, ct: "CShfeFtdcRspInvestorOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcRspInvestorOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRspInvestorOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcRspInvestorOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRspInvestorOrderField

# Register CShfeFtdcRspInvestorOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcRspInvestorOrderField_swigregister(CShfeFtdcRspInvestorOrderField)
class CShfeFtdcInvestorPositionStaticField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionStaticField_ProductID_get, _riskuserapi.CShfeFtdcInvestorPositionStaticField_ProductID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionStaticField_InstrumentID_get, _riskuserapi.CShfeFtdcInvestorPositionStaticField_InstrumentID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionStaticField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorPositionStaticField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorPositionStaticField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorPositionStaticField_InvestorID_set)
    YdPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionStaticField_YdPosition_get, _riskuserapi.CShfeFtdcInvestorPositionStaticField_YdPosition_set)
    Position: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionStaticField_Position_get, _riskuserapi.CShfeFtdcInvestorPositionStaticField_Position_set)
    LongPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionStaticField_LongPosition_get, _riskuserapi.CShfeFtdcInvestorPositionStaticField_LongPosition_set)
    ShortPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionStaticField_ShortPosition_get, _riskuserapi.CShfeFtdcInvestorPositionStaticField_ShortPosition_set)
    NetPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionStaticField_NetPosition_get, _riskuserapi.CShfeFtdcInvestorPositionStaticField_NetPosition_set)
    SpecuLongPosi: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionStaticField_SpecuLongPosi_get, _riskuserapi.CShfeFtdcInvestorPositionStaticField_SpecuLongPosi_set)
    SpecuShortPosi: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionStaticField_SpecuShortPosi_get, _riskuserapi.CShfeFtdcInvestorPositionStaticField_SpecuShortPosi_set)
    HedgeLongPosi: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionStaticField_HedgeLongPosi_get, _riskuserapi.CShfeFtdcInvestorPositionStaticField_HedgeLongPosi_set)
    HedgeShortPosi: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionStaticField_HedgeShortPosi_get, _riskuserapi.CShfeFtdcInvestorPositionStaticField_HedgeShortPosi_set)
    TodayPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorPositionStaticField_TodayPosition_get, _riskuserapi.CShfeFtdcInvestorPositionStaticField_TodayPosition_set)
    PositionCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorPositionStaticField_PositionCost_get, _riskuserapi.CShfeFtdcInvestorPositionStaticField_PositionCost_set)

    def __eq__(self, ct: "CShfeFtdcInvestorPositionStaticField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorPositionStaticField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorPositionStaticField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorPositionStaticField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorPositionStaticField

# Register CShfeFtdcInvestorPositionStaticField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorPositionStaticField_swigregister(CShfeFtdcInvestorPositionStaticField)
class CShfeFtdcInvestorTradeStaticField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInvestorTradeStaticField_ProductID_get, _riskuserapi.CShfeFtdcInvestorTradeStaticField_ProductID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInvestorTradeStaticField_InstrumentID_get, _riskuserapi.CShfeFtdcInvestorTradeStaticField_InstrumentID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorTradeStaticField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorTradeStaticField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorTradeStaticField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorTradeStaticField_InvestorID_set)
    TotalVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorTradeStaticField_TotalVol_get, _riskuserapi.CShfeFtdcInvestorTradeStaticField_TotalVol_set)
    TotalAmt: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorTradeStaticField_TotalAmt_get, _riskuserapi.CShfeFtdcInvestorTradeStaticField_TotalAmt_set)
    BuyVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorTradeStaticField_BuyVol_get, _riskuserapi.CShfeFtdcInvestorTradeStaticField_BuyVol_set)
    BuyAmt: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorTradeStaticField_BuyAmt_get, _riskuserapi.CShfeFtdcInvestorTradeStaticField_BuyAmt_set)
    SellVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorTradeStaticField_SellVol_get, _riskuserapi.CShfeFtdcInvestorTradeStaticField_SellVol_set)
    SellAmt: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorTradeStaticField_SellAmt_get, _riskuserapi.CShfeFtdcInvestorTradeStaticField_SellAmt_set)
    NetVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorTradeStaticField_NetVol_get, _riskuserapi.CShfeFtdcInvestorTradeStaticField_NetVol_set)
    NetAmt: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorTradeStaticField_NetAmt_get, _riskuserapi.CShfeFtdcInvestorTradeStaticField_NetAmt_set)

    def __eq__(self, ct: "CShfeFtdcInvestorTradeStaticField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorTradeStaticField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorTradeStaticField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorTradeStaticField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorTradeStaticField

# Register CShfeFtdcInvestorTradeStaticField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorTradeStaticField_swigregister(CShfeFtdcInvestorTradeStaticField)
class CShfeFtdcSubMarketDataField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSubMarketDataField_InstrumentID_get, _riskuserapi.CShfeFtdcSubMarketDataField_InstrumentID_set)

    def __eq__(self, ct: "CShfeFtdcSubMarketDataField") -> "bool":
        return _riskuserapi.CShfeFtdcSubMarketDataField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSubMarketDataField_swiginit(self, _riskuserapi.new_CShfeFtdcSubMarketDataField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSubMarketDataField

# Register CShfeFtdcSubMarketDataField in _riskuserapi:
_riskuserapi.CShfeFtdcSubMarketDataField_swigregister(CShfeFtdcSubMarketDataField)
class CShfeFtdcQryInstPositionRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_BrokerID_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_BrokerID_set)
    InstIDStart: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_InstIDStart_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_InstIDStart_set)
    InstIDEnd: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_InstIDEnd_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_InstIDEnd_set)
    hbtotal_little: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_hbtotal_little_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_hbtotal_little_set)
    hbtotal_medium: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_hbtotal_medium_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_hbtotal_medium_set)
    hstotal_little: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_hstotal_little_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_hstotal_little_set)
    hstotal_medium: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_hstotal_medium_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_hstotal_medium_set)
    htotal_little: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_htotal_little_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_htotal_little_set)
    htotal_medium: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_htotal_medium_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_htotal_medium_set)
    sbtotal_little: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_sbtotal_little_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_sbtotal_little_set)
    sbtotal_medium: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_sbtotal_medium_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_sbtotal_medium_set)
    sstotal_little: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_sstotal_little_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_sstotal_little_set)
    sstotal_medium: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_sstotal_medium_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_sstotal_medium_set)
    stotal_little: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_stotal_little_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_stotal_little_set)
    stotal_medium: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_stotal_medium_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_stotal_medium_set)
    buytotal_little: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_buytotal_little_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_buytotal_little_set)
    buytotal_medium: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_buytotal_medium_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_buytotal_medium_set)
    selltotal_little: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_selltotal_little_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_selltotal_little_set)
    selltotal_medium: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_selltotal_medium_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_selltotal_medium_set)
    total_little: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_total_little_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_total_little_set)
    total_medium: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_total_medium_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_total_medium_set)
    ValueMode: "TShfeFtdcValueModeType" = property(_riskuserapi.CShfeFtdcQryInstPositionRateField_ValueMode_get, _riskuserapi.CShfeFtdcQryInstPositionRateField_ValueMode_set)

    def __eq__(self, ct: "CShfeFtdcQryInstPositionRateField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInstPositionRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInstPositionRateField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInstPositionRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInstPositionRateField

# Register CShfeFtdcQryInstPositionRateField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInstPositionRateField_swigregister(CShfeFtdcQryInstPositionRateField)
class CShfeFtdcRspInstPositionRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_BrokerID_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_BrokerID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_InstrumentID_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_InstrumentID_set)
    hbtotal_amt_little: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_hbtotal_amt_little_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_hbtotal_amt_little_set)
    hbtotal_amt_medium: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_hbtotal_amt_medium_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_hbtotal_amt_medium_set)
    hbtotal_amt_large: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_hbtotal_amt_large_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_hbtotal_amt_large_set)
    hstotal_amt_little: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_hstotal_amt_little_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_hstotal_amt_little_set)
    hstotal_amt_medium: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_hstotal_amt_medium_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_hstotal_amt_medium_set)
    hstotal_amt_large: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_hstotal_amt_large_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_hstotal_amt_large_set)
    htotal_amt_little: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_htotal_amt_little_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_htotal_amt_little_set)
    htotal_amt_medium: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_htotal_amt_medium_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_htotal_amt_medium_set)
    htotal_amt_large: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_htotal_amt_large_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_htotal_amt_large_set)
    sbtotal_amt_little: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_sbtotal_amt_little_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_sbtotal_amt_little_set)
    sbtotal_amt_medium: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_sbtotal_amt_medium_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_sbtotal_amt_medium_set)
    sbtotal_amt_large: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_sbtotal_amt_large_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_sbtotal_amt_large_set)
    sstotal_amt_little: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_sstotal_amt_little_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_sstotal_amt_little_set)
    sstotal_amt_medium: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_sstotal_amt_medium_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_sstotal_amt_medium_set)
    sstotal_amt_large: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_sstotal_amt_large_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_sstotal_amt_large_set)
    stotal_amt_little: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_stotal_amt_little_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_stotal_amt_little_set)
    stotal_amt_medium: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_stotal_amt_medium_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_stotal_amt_medium_set)
    stotal_amt_large: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_stotal_amt_large_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_stotal_amt_large_set)
    buytotal_amt_little: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_buytotal_amt_little_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_buytotal_amt_little_set)
    buytotal_amt_medium: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_buytotal_amt_medium_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_buytotal_amt_medium_set)
    buytotal_amt_large: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_buytotal_amt_large_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_buytotal_amt_large_set)
    selltotal_amt_little: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_selltotal_amt_little_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_selltotal_amt_little_set)
    selltotal_amt_medium: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_selltotal_amt_medium_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_selltotal_amt_medium_set)
    selltotal_amt_large: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_selltotal_amt_large_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_selltotal_amt_large_set)
    total_amt_little: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_total_amt_little_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_total_amt_little_set)
    total_amt_medium: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_total_amt_medium_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_total_amt_medium_set)
    total_amt_large: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspInstPositionRateField_total_amt_large_get, _riskuserapi.CShfeFtdcRspInstPositionRateField_total_amt_large_set)

    def __eq__(self, ct: "CShfeFtdcRspInstPositionRateField") -> "bool":
        return _riskuserapi.CShfeFtdcRspInstPositionRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRspInstPositionRateField_swiginit(self, _riskuserapi.new_CShfeFtdcRspInstPositionRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRspInstPositionRateField

# Register CShfeFtdcRspInstPositionRateField in _riskuserapi:
_riskuserapi.CShfeFtdcRspInstPositionRateField_swigregister(CShfeFtdcRspInstPositionRateField)
class CShfeFtdcQryProductPositionRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_BrokerID_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_BrokerID_set)
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_ProductID_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_ProductID_set)
    hbtotal_little: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_hbtotal_little_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_hbtotal_little_set)
    hbtotal_medium: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_hbtotal_medium_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_hbtotal_medium_set)
    hstotal_little: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_hstotal_little_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_hstotal_little_set)
    hstotal_medium: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_hstotal_medium_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_hstotal_medium_set)
    htotal_little: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_htotal_little_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_htotal_little_set)
    htotal_medium: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_htotal_medium_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_htotal_medium_set)
    sbtotal_little: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_sbtotal_little_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_sbtotal_little_set)
    sbtotal_medium: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_sbtotal_medium_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_sbtotal_medium_set)
    sstotal_little: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_sstotal_little_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_sstotal_little_set)
    sstotal_medium: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_sstotal_medium_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_sstotal_medium_set)
    stotal_little: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_stotal_little_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_stotal_little_set)
    stotal_medium: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_stotal_medium_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_stotal_medium_set)
    buytotal_little: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_buytotal_little_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_buytotal_little_set)
    buytotal_medium: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_buytotal_medium_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_buytotal_medium_set)
    selltotal_little: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_selltotal_little_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_selltotal_little_set)
    selltotal_medium: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_selltotal_medium_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_selltotal_medium_set)
    total_little: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_total_little_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_total_little_set)
    total_medium: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_total_medium_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_total_medium_set)
    ValueMode: "TShfeFtdcValueModeType" = property(_riskuserapi.CShfeFtdcQryProductPositionRateField_ValueMode_get, _riskuserapi.CShfeFtdcQryProductPositionRateField_ValueMode_set)

    def __eq__(self, ct: "CShfeFtdcQryProductPositionRateField") -> "bool":
        return _riskuserapi.CShfeFtdcQryProductPositionRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryProductPositionRateField_swiginit(self, _riskuserapi.new_CShfeFtdcQryProductPositionRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryProductPositionRateField

# Register CShfeFtdcQryProductPositionRateField in _riskuserapi:
_riskuserapi.CShfeFtdcQryProductPositionRateField_swigregister(CShfeFtdcQryProductPositionRateField)
class CShfeFtdcRspProductPositionRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_BrokerID_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_BrokerID_set)
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_ProductID_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_ProductID_set)
    hbtotal_amt_little: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_hbtotal_amt_little_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_hbtotal_amt_little_set)
    hbtotal_amt_medium: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_hbtotal_amt_medium_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_hbtotal_amt_medium_set)
    hbtotal_amt_large: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_hbtotal_amt_large_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_hbtotal_amt_large_set)
    hstotal_amt_little: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_hstotal_amt_little_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_hstotal_amt_little_set)
    hstotal_amt_medium: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_hstotal_amt_medium_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_hstotal_amt_medium_set)
    hstotal_amt_large: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_hstotal_amt_large_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_hstotal_amt_large_set)
    htotal_amt_little: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_htotal_amt_little_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_htotal_amt_little_set)
    htotal_amt_medium: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_htotal_amt_medium_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_htotal_amt_medium_set)
    htotal_amt_large: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_htotal_amt_large_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_htotal_amt_large_set)
    sbtotal_amt_little: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_sbtotal_amt_little_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_sbtotal_amt_little_set)
    sbtotal_amt_medium: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_sbtotal_amt_medium_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_sbtotal_amt_medium_set)
    sbtotal_amt_large: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_sbtotal_amt_large_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_sbtotal_amt_large_set)
    sstotal_amt_little: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_sstotal_amt_little_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_sstotal_amt_little_set)
    sstotal_amt_medium: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_sstotal_amt_medium_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_sstotal_amt_medium_set)
    sstotal_amt_large: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_sstotal_amt_large_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_sstotal_amt_large_set)
    stotal_amt_little: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_stotal_amt_little_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_stotal_amt_little_set)
    stotal_amt_medium: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_stotal_amt_medium_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_stotal_amt_medium_set)
    stotal_amt_large: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_stotal_amt_large_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_stotal_amt_large_set)
    buytotal_amt_little: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_buytotal_amt_little_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_buytotal_amt_little_set)
    buytotal_amt_medium: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_buytotal_amt_medium_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_buytotal_amt_medium_set)
    buytotal_amt_large: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_buytotal_amt_large_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_buytotal_amt_large_set)
    selltotal_amt_little: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_selltotal_amt_little_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_selltotal_amt_little_set)
    selltotal_amt_medium: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_selltotal_amt_medium_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_selltotal_amt_medium_set)
    selltotal_amt_large: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_selltotal_amt_large_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_selltotal_amt_large_set)
    total_amt_little: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_total_amt_little_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_total_amt_little_set)
    total_amt_medium: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_total_amt_medium_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_total_amt_medium_set)
    total_amt_large: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspProductPositionRateField_total_amt_large_get, _riskuserapi.CShfeFtdcRspProductPositionRateField_total_amt_large_set)

    def __eq__(self, ct: "CShfeFtdcRspProductPositionRateField") -> "bool":
        return _riskuserapi.CShfeFtdcRspProductPositionRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRspProductPositionRateField_swiginit(self, _riskuserapi.new_CShfeFtdcRspProductPositionRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRspProductPositionRateField

# Register CShfeFtdcRspProductPositionRateField in _riskuserapi:
_riskuserapi.CShfeFtdcRspProductPositionRateField_swigregister(CShfeFtdcRspProductPositionRateField)
class CShfeFtdcIsWriteOnceField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcIsWriteOnceField_BrokerID_get, _riskuserapi.CShfeFtdcIsWriteOnceField_BrokerID_set)
    IsWriteOnce: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcIsWriteOnceField_IsWriteOnce_get, _riskuserapi.CShfeFtdcIsWriteOnceField_IsWriteOnce_set)

    def __eq__(self, ct: "CShfeFtdcIsWriteOnceField") -> "bool":
        return _riskuserapi.CShfeFtdcIsWriteOnceField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcIsWriteOnceField_swiginit(self, _riskuserapi.new_CShfeFtdcIsWriteOnceField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcIsWriteOnceField

# Register CShfeFtdcIsWriteOnceField in _riskuserapi:
_riskuserapi.CShfeFtdcIsWriteOnceField_swigregister(CShfeFtdcIsWriteOnceField)
class CShfeFtdcSTSettlePriceField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Day: "TShfeFtdcDayNumberType" = property(_riskuserapi.CShfeFtdcSTSettlePriceField_Day_get, _riskuserapi.CShfeFtdcSTSettlePriceField_Day_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSTSettlePriceField_InstrumentID_get, _riskuserapi.CShfeFtdcSTSettlePriceField_InstrumentID_set)
    PriceType: "TShfeFtdcSTPriceTypeType" = property(_riskuserapi.CShfeFtdcSTSettlePriceField_PriceType_get, _riskuserapi.CShfeFtdcSTSettlePriceField_PriceType_set)
    Price: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSTSettlePriceField_Price_get, _riskuserapi.CShfeFtdcSTSettlePriceField_Price_set)

    def __eq__(self, ct: "CShfeFtdcSTSettlePriceField") -> "bool":
        return _riskuserapi.CShfeFtdcSTSettlePriceField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSTSettlePriceField_swiginit(self, _riskuserapi.new_CShfeFtdcSTSettlePriceField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSTSettlePriceField

# Register CShfeFtdcSTSettlePriceField in _riskuserapi:
_riskuserapi.CShfeFtdcSTSettlePriceField_swigregister(CShfeFtdcSTSettlePriceField)
class CShfeFtdcSTInstrumentMarginRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Day: "TShfeFtdcDayNumberType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateField_Day_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateField_Day_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateField_InstrumentID_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateField_InstrumentID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateField_InvestorRange_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateField_InvestorRange_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateField_BrokerID_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateField_InvestorID_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateField_InvestorID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateField_HedgeFlag_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateField_HedgeFlag_set)
    LongMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateField_LongMarginRatioByMoney_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateField_LongMarginRatioByMoney_set)
    LongMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateField_LongMarginRatioByVolume_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateField_LongMarginRatioByVolume_set)
    ShortMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateField_ShortMarginRatioByMoney_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateField_ShortMarginRatioByMoney_set)
    ShortMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateField_ShortMarginRatioByVolume_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateField_ShortMarginRatioByVolume_set)
    IsRelative: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateField_IsRelative_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateField_IsRelative_set)

    def __eq__(self, ct: "CShfeFtdcSTInstrumentMarginRateField") -> "bool":
        return _riskuserapi.CShfeFtdcSTInstrumentMarginRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSTInstrumentMarginRateField_swiginit(self, _riskuserapi.new_CShfeFtdcSTInstrumentMarginRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSTInstrumentMarginRateField

# Register CShfeFtdcSTInstrumentMarginRateField in _riskuserapi:
_riskuserapi.CShfeFtdcSTInstrumentMarginRateField_swigregister(CShfeFtdcSTInstrumentMarginRateField)
class CShfeFtdcSTInstrumentMarginRateAdjustField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Day: "TShfeFtdcDayNumberType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_Day_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_Day_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_InstrumentID_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_InstrumentID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_InvestorRange_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_InvestorRange_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_BrokerID_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_InvestorID_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_InvestorID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_HedgeFlag_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_HedgeFlag_set)
    LongMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_LongMarginRatioByMoney_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_LongMarginRatioByMoney_set)
    LongMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_LongMarginRatioByVolume_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_LongMarginRatioByVolume_set)
    ShortMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_set)
    ShortMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_set)
    IsRelative: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_IsRelative_get, _riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_IsRelative_set)

    def __eq__(self, ct: "CShfeFtdcSTInstrumentMarginRateAdjustField") -> "bool":
        return _riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_swiginit(self, _riskuserapi.new_CShfeFtdcSTInstrumentMarginRateAdjustField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSTInstrumentMarginRateAdjustField

# Register CShfeFtdcSTInstrumentMarginRateAdjustField in _riskuserapi:
_riskuserapi.CShfeFtdcSTInstrumentMarginRateAdjustField_swigregister(CShfeFtdcSTInstrumentMarginRateAdjustField)
class CShfeFtdcSTExchangeMarginRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Day: "TShfeFtdcDayNumberType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateField_Day_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateField_Day_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateField_BrokerID_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateField_BrokerID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateField_InstrumentID_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateField_InstrumentID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateField_HedgeFlag_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateField_HedgeFlag_set)
    LongMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateField_LongMarginRatioByMoney_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateField_LongMarginRatioByMoney_set)
    LongMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateField_LongMarginRatioByVolume_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateField_LongMarginRatioByVolume_set)
    ShortMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateField_ShortMarginRatioByMoney_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateField_ShortMarginRatioByMoney_set)
    ShortMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateField_ShortMarginRatioByVolume_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateField_ShortMarginRatioByVolume_set)

    def __eq__(self, ct: "CShfeFtdcSTExchangeMarginRateField") -> "bool":
        return _riskuserapi.CShfeFtdcSTExchangeMarginRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSTExchangeMarginRateField_swiginit(self, _riskuserapi.new_CShfeFtdcSTExchangeMarginRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSTExchangeMarginRateField

# Register CShfeFtdcSTExchangeMarginRateField in _riskuserapi:
_riskuserapi.CShfeFtdcSTExchangeMarginRateField_swigregister(CShfeFtdcSTExchangeMarginRateField)
class CShfeFtdcSTExchangeMarginRateAdjustField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Day: "TShfeFtdcDayNumberType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_Day_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_Day_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_BrokerID_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_BrokerID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_InstrumentID_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_InstrumentID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_HedgeFlag_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_HedgeFlag_set)
    LongMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_LongMarginRatioByMoney_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_LongMarginRatioByMoney_set)
    LongMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_LongMarginRatioByVolume_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_LongMarginRatioByVolume_set)
    ShortMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_ShortMarginRatioByMoney_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_ShortMarginRatioByMoney_set)
    ShortMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_ShortMarginRatioByVolume_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_ShortMarginRatioByVolume_set)
    ExchLongMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_set)
    ExchLongMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_set)
    ExchShortMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_set)
    ExchShortMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_set)
    NoLongMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_set)
    NoLongMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_set)
    NoShortMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_set)
    NoShortMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_get, _riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_set)

    def __eq__(self, ct: "CShfeFtdcSTExchangeMarginRateAdjustField") -> "bool":
        return _riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_swiginit(self, _riskuserapi.new_CShfeFtdcSTExchangeMarginRateAdjustField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSTExchangeMarginRateAdjustField

# Register CShfeFtdcSTExchangeMarginRateAdjustField in _riskuserapi:
_riskuserapi.CShfeFtdcSTExchangeMarginRateAdjustField_swigregister(CShfeFtdcSTExchangeMarginRateAdjustField)
class CShfeFtdcInvestorLinkManField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorLinkManField_InvestorID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorLinkManField_BrokerID_set)
    InvestorGroupID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_InvestorGroupID_get, _riskuserapi.CShfeFtdcInvestorLinkManField_InvestorGroupID_set)
    InvestorName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_InvestorName_get, _riskuserapi.CShfeFtdcInvestorLinkManField_InvestorName_set)
    IdentifiedCardType: "TShfeFtdcIdCardTypeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_IdentifiedCardType_get, _riskuserapi.CShfeFtdcInvestorLinkManField_IdentifiedCardType_set)
    IdentifiedCardNo: "TShfeFtdcIdentifiedCardNoType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_IdentifiedCardNo_get, _riskuserapi.CShfeFtdcInvestorLinkManField_IdentifiedCardNo_set)
    IsActive: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_IsActive_get, _riskuserapi.CShfeFtdcInvestorLinkManField_IsActive_set)
    Telephone: "TShfeFtdcTelephoneType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_Telephone_get, _riskuserapi.CShfeFtdcInvestorLinkManField_Telephone_set)
    Address: "TShfeFtdcAddressType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_Address_get, _riskuserapi.CShfeFtdcInvestorLinkManField_Address_set)
    OrderManIdentifiedCardType: "TShfeFtdcIdCardTypeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_OrderManIdentifiedCardType_get, _riskuserapi.CShfeFtdcInvestorLinkManField_OrderManIdentifiedCardType_set)
    OrderManIdentifiedCardNo: "TShfeFtdcIdentifiedCardNoType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_OrderManIdentifiedCardNo_get, _riskuserapi.CShfeFtdcInvestorLinkManField_OrderManIdentifiedCardNo_set)
    OrderManPersonName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_OrderManPersonName_get, _riskuserapi.CShfeFtdcInvestorLinkManField_OrderManPersonName_set)
    OrderManTelephone: "TShfeFtdcTelephoneType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_OrderManTelephone_get, _riskuserapi.CShfeFtdcInvestorLinkManField_OrderManTelephone_set)
    OrderManAddress: "TShfeFtdcAddressType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_OrderManAddress_get, _riskuserapi.CShfeFtdcInvestorLinkManField_OrderManAddress_set)
    OrderManZipCode: "TShfeFtdcZipCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_OrderManZipCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_OrderManZipCode_set)
    FundManIdentifiedCardType: "TShfeFtdcIdCardTypeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_FundManIdentifiedCardType_get, _riskuserapi.CShfeFtdcInvestorLinkManField_FundManIdentifiedCardType_set)
    FundManIdentifiedCardNo: "TShfeFtdcIdentifiedCardNoType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_FundManIdentifiedCardNo_get, _riskuserapi.CShfeFtdcInvestorLinkManField_FundManIdentifiedCardNo_set)
    FundManPersonName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_FundManPersonName_get, _riskuserapi.CShfeFtdcInvestorLinkManField_FundManPersonName_set)
    FundManTelephone: "TShfeFtdcTelephoneType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_FundManTelephone_get, _riskuserapi.CShfeFtdcInvestorLinkManField_FundManTelephone_set)
    FundManAddress: "TShfeFtdcAddressType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_FundManAddress_get, _riskuserapi.CShfeFtdcInvestorLinkManField_FundManAddress_set)
    FundManZipCode: "TShfeFtdcZipCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_FundManZipCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_FundManZipCode_set)
    OpenManIdentifiedCardType: "TShfeFtdcIdCardTypeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_OpenManIdentifiedCardType_get, _riskuserapi.CShfeFtdcInvestorLinkManField_OpenManIdentifiedCardType_set)
    OpenManIdentifiedCardNo: "TShfeFtdcIdentifiedCardNoType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_OpenManIdentifiedCardNo_get, _riskuserapi.CShfeFtdcInvestorLinkManField_OpenManIdentifiedCardNo_set)
    OpenManPersonName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_OpenManPersonName_get, _riskuserapi.CShfeFtdcInvestorLinkManField_OpenManPersonName_set)
    OpenManTelephone: "TShfeFtdcTelephoneType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_OpenManTelephone_get, _riskuserapi.CShfeFtdcInvestorLinkManField_OpenManTelephone_set)
    OpenManAddress: "TShfeFtdcAddressType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_OpenManAddress_get, _riskuserapi.CShfeFtdcInvestorLinkManField_OpenManAddress_set)
    OpenManZipCode: "TShfeFtdcZipCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_OpenManZipCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_OpenManZipCode_set)
    SettlementManIdentifiedCardType: "TShfeFtdcIdCardTypeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_SettlementManIdentifiedCardType_get, _riskuserapi.CShfeFtdcInvestorLinkManField_SettlementManIdentifiedCardType_set)
    SettlementManIdentifiedCardNo: "TShfeFtdcIdentifiedCardNoType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_SettlementManIdentifiedCardNo_get, _riskuserapi.CShfeFtdcInvestorLinkManField_SettlementManIdentifiedCardNo_set)
    SettlementManPersonName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_SettlementManPersonName_get, _riskuserapi.CShfeFtdcInvestorLinkManField_SettlementManPersonName_set)
    SettlementManTelephone: "TShfeFtdcTelephoneType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_SettlementManTelephone_get, _riskuserapi.CShfeFtdcInvestorLinkManField_SettlementManTelephone_set)
    SettlementManAddress: "TShfeFtdcAddressType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_SettlementManAddress_get, _riskuserapi.CShfeFtdcInvestorLinkManField_SettlementManAddress_set)
    SettlementManZipCode: "TShfeFtdcZipCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_SettlementManZipCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_SettlementManZipCode_set)
    OpenDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_OpenDate_get, _riskuserapi.CShfeFtdcInvestorLinkManField_OpenDate_set)
    Mobile: "TShfeFtdcMobileType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_Mobile_get, _riskuserapi.CShfeFtdcInvestorLinkManField_Mobile_set)
    EMail: "TShfeFtdcUOAEMailType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_EMail_get, _riskuserapi.CShfeFtdcInvestorLinkManField_EMail_set)
    InvestorType: "TShfeFtdcInvestorTypeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_InvestorType_get, _riskuserapi.CShfeFtdcInvestorLinkManField_InvestorType_set)
    PhoneCountryCode: "TShfeFtdcUOACountryCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_PhoneCountryCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_PhoneCountryCode_set)
    PhoneAreaCode: "TShfeFtdcAreaCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_PhoneAreaCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_PhoneAreaCode_set)
    OpenPhoneCountryCode: "TShfeFtdcUOACountryCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_OpenPhoneCountryCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_OpenPhoneCountryCode_set)
    OpenPhoneAreaCode: "TShfeFtdcAreaCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_OpenPhoneAreaCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_OpenPhoneAreaCode_set)
    OrderPhoneCountryCode: "TShfeFtdcUOACountryCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_OrderPhoneCountryCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_OrderPhoneCountryCode_set)
    OrderPhoneAreaCode: "TShfeFtdcAreaCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_OrderPhoneAreaCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_OrderPhoneAreaCode_set)
    FundPhoneCountryCode: "TShfeFtdcUOACountryCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_FundPhoneCountryCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_FundPhoneCountryCode_set)
    FundPhoneAreaCode: "TShfeFtdcAreaCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_FundPhoneAreaCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_FundPhoneAreaCode_set)
    SettlePhoneCountryCode: "TShfeFtdcUOACountryCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_SettlePhoneCountryCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_SettlePhoneCountryCode_set)
    SettlePhoneAreaCode: "TShfeFtdcAreaCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_SettlePhoneAreaCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_SettlePhoneAreaCode_set)
    CompanyManIdentifiedCardType: "TShfeFtdcIdCardTypeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_CompanyManIdentifiedCardType_get, _riskuserapi.CShfeFtdcInvestorLinkManField_CompanyManIdentifiedCardType_set)
    CompanyManIdentifiedCardNo: "TShfeFtdcIdentifiedCardNoType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_CompanyManIdentifiedCardNo_get, _riskuserapi.CShfeFtdcInvestorLinkManField_CompanyManIdentifiedCardNo_set)
    CompanyManPersonName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_CompanyManPersonName_get, _riskuserapi.CShfeFtdcInvestorLinkManField_CompanyManPersonName_set)
    CompanyManTelephone: "TShfeFtdcTelephoneType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_CompanyManTelephone_get, _riskuserapi.CShfeFtdcInvestorLinkManField_CompanyManTelephone_set)
    CompanyManAddress: "TShfeFtdcAddressType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_CompanyManAddress_get, _riskuserapi.CShfeFtdcInvestorLinkManField_CompanyManAddress_set)
    CompanyManZipCode: "TShfeFtdcZipCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_CompanyManZipCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_CompanyManZipCode_set)
    CorporationManIdentifiedCardType: "TShfeFtdcIdCardTypeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_CorporationManIdentifiedCardType_get, _riskuserapi.CShfeFtdcInvestorLinkManField_CorporationManIdentifiedCardType_set)
    CorporationManIdentifiedCardNo: "TShfeFtdcIdentifiedCardNoType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_CorporationManIdentifiedCardNo_get, _riskuserapi.CShfeFtdcInvestorLinkManField_CorporationManIdentifiedCardNo_set)
    CorporationManPersonName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_CorporationManPersonName_get, _riskuserapi.CShfeFtdcInvestorLinkManField_CorporationManPersonName_set)
    CorporationManTelephone: "TShfeFtdcTelephoneType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_CorporationManTelephone_get, _riskuserapi.CShfeFtdcInvestorLinkManField_CorporationManTelephone_set)
    CorporationManAddress: "TShfeFtdcAddressType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_CorporationManAddress_get, _riskuserapi.CShfeFtdcInvestorLinkManField_CorporationManAddress_set)
    CorporationManZipCode: "TShfeFtdcZipCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_CorporationManZipCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_CorporationManZipCode_set)
    LinkManIdentifiedCardType: "TShfeFtdcIdCardTypeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_LinkManIdentifiedCardType_get, _riskuserapi.CShfeFtdcInvestorLinkManField_LinkManIdentifiedCardType_set)
    LinkManIdentifiedCardNo: "TShfeFtdcIdentifiedCardNoType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_LinkManIdentifiedCardNo_get, _riskuserapi.CShfeFtdcInvestorLinkManField_LinkManIdentifiedCardNo_set)
    LinkManPersonName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_LinkManPersonName_get, _riskuserapi.CShfeFtdcInvestorLinkManField_LinkManPersonName_set)
    LinkManTelephone: "TShfeFtdcTelephoneType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_LinkManTelephone_get, _riskuserapi.CShfeFtdcInvestorLinkManField_LinkManTelephone_set)
    LinkManAddress: "TShfeFtdcAddressType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_LinkManAddress_get, _riskuserapi.CShfeFtdcInvestorLinkManField_LinkManAddress_set)
    LinkManZipCode: "TShfeFtdcZipCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_LinkManZipCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_LinkManZipCode_set)
    LedgerIdentifiedCardType: "TShfeFtdcIdCardTypeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_LedgerIdentifiedCardType_get, _riskuserapi.CShfeFtdcInvestorLinkManField_LedgerIdentifiedCardType_set)
    LedgerIdentifiedCardNo: "TShfeFtdcIdentifiedCardNoType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_LedgerIdentifiedCardNo_get, _riskuserapi.CShfeFtdcInvestorLinkManField_LedgerIdentifiedCardNo_set)
    LedgerPersonName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_LedgerPersonName_get, _riskuserapi.CShfeFtdcInvestorLinkManField_LedgerPersonName_set)
    LedgerTelephone: "TShfeFtdcTelephoneType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_LedgerTelephone_get, _riskuserapi.CShfeFtdcInvestorLinkManField_LedgerTelephone_set)
    LedgerAddress: "TShfeFtdcAddressType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_LedgerAddress_get, _riskuserapi.CShfeFtdcInvestorLinkManField_LedgerAddress_set)
    LedgerZipCode: "TShfeFtdcZipCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_LedgerZipCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_LedgerZipCode_set)
    TrusteeIdentifiedCardType: "TShfeFtdcIdCardTypeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeIdentifiedCardType_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeIdentifiedCardType_set)
    TrusteeIdentifiedCardNo: "TShfeFtdcIdentifiedCardNoType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeIdentifiedCardNo_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeIdentifiedCardNo_set)
    TrusteePersonName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteePersonName_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteePersonName_set)
    TrusteeTelephone: "TShfeFtdcTelephoneType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeTelephone_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeTelephone_set)
    TrusteeAddress: "TShfeFtdcAddressType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeAddress_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeAddress_set)
    TrusteeZipCode: "TShfeFtdcZipCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeZipCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeZipCode_set)
    TrusteeCorporationManIdentifiedCardType: "TShfeFtdcIdCardTypeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeCorporationManIdentifiedCardType_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeCorporationManIdentifiedCardType_set)
    TrusteeCorporationManIdentifiedCardNo: "TShfeFtdcIdentifiedCardNoType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeCorporationManIdentifiedCardNo_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeCorporationManIdentifiedCardNo_set)
    TrusteeCorporationManPersonName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeCorporationManPersonName_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeCorporationManPersonName_set)
    TrusteeCorporationManTelephone: "TShfeFtdcTelephoneType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeCorporationManTelephone_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeCorporationManTelephone_set)
    TrusteeCorporationManAddress: "TShfeFtdcAddressType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeCorporationManAddress_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeCorporationManAddress_set)
    TrusteeCorporationManZipCode: "TShfeFtdcZipCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeCorporationManZipCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeCorporationManZipCode_set)
    TrusteeOpenManIdentifiedCardType: "TShfeFtdcIdCardTypeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeOpenManIdentifiedCardType_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeOpenManIdentifiedCardType_set)
    TrusteeOpenManIdentifiedCardNo: "TShfeFtdcIdentifiedCardNoType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeOpenManIdentifiedCardNo_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeOpenManIdentifiedCardNo_set)
    TrusteeOpenManPersonName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeOpenManPersonName_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeOpenManPersonName_set)
    TrusteeOpenManTelephone: "TShfeFtdcTelephoneType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeOpenManTelephone_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeOpenManTelephone_set)
    TrusteeOpenManAddress: "TShfeFtdcAddressType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeOpenManAddress_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeOpenManAddress_set)
    TrusteeOpenManZipCode: "TShfeFtdcZipCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeOpenManZipCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeOpenManZipCode_set)
    TrusteeContactManIdentifiedCardType: "TShfeFtdcIdCardTypeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeContactManIdentifiedCardType_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeContactManIdentifiedCardType_set)
    TrusteeContactManIdentifiedCardNo: "TShfeFtdcIdentifiedCardNoType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeContactManIdentifiedCardNo_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeContactManIdentifiedCardNo_set)
    TrusteeContactManPersonName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeContactManPersonName_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeContactManPersonName_set)
    TrusteeContactManTelephone: "TShfeFtdcTelephoneType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeContactManTelephone_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeContactManTelephone_set)
    TrusteeContactManAddress: "TShfeFtdcAddressType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeContactManAddress_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeContactManAddress_set)
    TrusteeContactManZipCode: "TShfeFtdcZipCodeType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeContactManZipCode_get, _riskuserapi.CShfeFtdcInvestorLinkManField_TrusteeContactManZipCode_set)
    FreezeStatus: "TShfeFtdcFreezeStatusType" = property(_riskuserapi.CShfeFtdcInvestorLinkManField_FreezeStatus_get, _riskuserapi.CShfeFtdcInvestorLinkManField_FreezeStatus_set)

    def __eq__(self, ct: "CShfeFtdcInvestorLinkManField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorLinkManField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorLinkManField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorLinkManField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorLinkManField

# Register CShfeFtdcInvestorLinkManField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorLinkManField_swigregister(CShfeFtdcInvestorLinkManField)
class CShfeFtdcSubInvestorTradeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSubInvestorTradeField_BrokerID_get, _riskuserapi.CShfeFtdcSubInvestorTradeField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSubInvestorTradeField_InvestorID_get, _riskuserapi.CShfeFtdcSubInvestorTradeField_InvestorID_set)

    def __eq__(self, ct: "CShfeFtdcSubInvestorTradeField") -> "bool":
        return _riskuserapi.CShfeFtdcSubInvestorTradeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSubInvestorTradeField_swiginit(self, _riskuserapi.new_CShfeFtdcSubInvestorTradeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSubInvestorTradeField

# Register CShfeFtdcSubInvestorTradeField in _riskuserapi:
_riskuserapi.CShfeFtdcSubInvestorTradeField_swigregister(CShfeFtdcSubInvestorTradeField)
class CShfeFtdcSubInvestorPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSubInvestorPositionField_BrokerID_get, _riskuserapi.CShfeFtdcSubInvestorPositionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSubInvestorPositionField_InvestorID_get, _riskuserapi.CShfeFtdcSubInvestorPositionField_InvestorID_set)

    def __eq__(self, ct: "CShfeFtdcSubInvestorPositionField") -> "bool":
        return _riskuserapi.CShfeFtdcSubInvestorPositionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSubInvestorPositionField_swiginit(self, _riskuserapi.new_CShfeFtdcSubInvestorPositionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSubInvestorPositionField

# Register CShfeFtdcSubInvestorPositionField in _riskuserapi:
_riskuserapi.CShfeFtdcSubInvestorPositionField_swigregister(CShfeFtdcSubInvestorPositionField)
class CShfeFtdcNotifySequenceField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcNotifySequenceField_SequenceNo_get, _riskuserapi.CShfeFtdcNotifySequenceField_SequenceNo_set)

    def __eq__(self, ct: "CShfeFtdcNotifySequenceField") -> "bool":
        return _riskuserapi.CShfeFtdcNotifySequenceField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcNotifySequenceField_swiginit(self, _riskuserapi.new_CShfeFtdcNotifySequenceField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcNotifySequenceField

# Register CShfeFtdcNotifySequenceField in _riskuserapi:
_riskuserapi.CShfeFtdcNotifySequenceField_swigregister(CShfeFtdcNotifySequenceField)
class CShfeFtdcSequencialTradeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UniqSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_UniqSequenceNo_get, _riskuserapi.CShfeFtdcSequencialTradeField_UniqSequenceNo_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_BrokerID_get, _riskuserapi.CShfeFtdcSequencialTradeField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_InvestorID_get, _riskuserapi.CShfeFtdcSequencialTradeField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_InstrumentID_get, _riskuserapi.CShfeFtdcSequencialTradeField_InstrumentID_set)
    OrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_OrderRef_get, _riskuserapi.CShfeFtdcSequencialTradeField_OrderRef_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_UserID_get, _riskuserapi.CShfeFtdcSequencialTradeField_UserID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_ExchangeID_get, _riskuserapi.CShfeFtdcSequencialTradeField_ExchangeID_set)
    TradeID: "TShfeFtdcTradeIDType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_TradeID_get, _riskuserapi.CShfeFtdcSequencialTradeField_TradeID_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_Direction_get, _riskuserapi.CShfeFtdcSequencialTradeField_Direction_set)
    OrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_OrderSysID_get, _riskuserapi.CShfeFtdcSequencialTradeField_OrderSysID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_ParticipantID_get, _riskuserapi.CShfeFtdcSequencialTradeField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_ClientID_get, _riskuserapi.CShfeFtdcSequencialTradeField_ClientID_set)
    TradingRole: "TShfeFtdcTradingRoleType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_TradingRole_get, _riskuserapi.CShfeFtdcSequencialTradeField_TradingRole_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_ExchangeInstID_get, _riskuserapi.CShfeFtdcSequencialTradeField_ExchangeInstID_set)
    OffsetFlag: "TShfeFtdcOffsetFlagType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_OffsetFlag_get, _riskuserapi.CShfeFtdcSequencialTradeField_OffsetFlag_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_HedgeFlag_get, _riskuserapi.CShfeFtdcSequencialTradeField_HedgeFlag_set)
    Price: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_Price_get, _riskuserapi.CShfeFtdcSequencialTradeField_Price_set)
    Volume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_Volume_get, _riskuserapi.CShfeFtdcSequencialTradeField_Volume_set)
    TradeDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_TradeDate_get, _riskuserapi.CShfeFtdcSequencialTradeField_TradeDate_set)
    TradeTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_TradeTime_get, _riskuserapi.CShfeFtdcSequencialTradeField_TradeTime_set)
    TradeType: "TShfeFtdcTradeTypeType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_TradeType_get, _riskuserapi.CShfeFtdcSequencialTradeField_TradeType_set)
    PriceSource: "TShfeFtdcPriceSourceType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_PriceSource_get, _riskuserapi.CShfeFtdcSequencialTradeField_PriceSource_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_TraderID_get, _riskuserapi.CShfeFtdcSequencialTradeField_TraderID_set)
    OrderLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_OrderLocalID_get, _riskuserapi.CShfeFtdcSequencialTradeField_OrderLocalID_set)
    ClearingPartID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_ClearingPartID_get, _riskuserapi.CShfeFtdcSequencialTradeField_ClearingPartID_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_BusinessUnit_get, _riskuserapi.CShfeFtdcSequencialTradeField_BusinessUnit_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_SequenceNo_get, _riskuserapi.CShfeFtdcSequencialTradeField_SequenceNo_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_TradingDay_get, _riskuserapi.CShfeFtdcSequencialTradeField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_SettlementID_get, _riskuserapi.CShfeFtdcSequencialTradeField_SettlementID_set)
    BrokerOrderSeq: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_BrokerOrderSeq_get, _riskuserapi.CShfeFtdcSequencialTradeField_BrokerOrderSeq_set)
    TradeSource: "TShfeFtdcTradeSourceType" = property(_riskuserapi.CShfeFtdcSequencialTradeField_TradeSource_get, _riskuserapi.CShfeFtdcSequencialTradeField_TradeSource_set)

    def __eq__(self, ct: "CShfeFtdcSequencialTradeField") -> "bool":
        return _riskuserapi.CShfeFtdcSequencialTradeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSequencialTradeField_swiginit(self, _riskuserapi.new_CShfeFtdcSequencialTradeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSequencialTradeField

# Register CShfeFtdcSequencialTradeField in _riskuserapi:
_riskuserapi.CShfeFtdcSequencialTradeField_swigregister(CShfeFtdcSequencialTradeField)
class CShfeFtdcSequencialOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UniqSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_UniqSequenceNo_get, _riskuserapi.CShfeFtdcSequencialOrderField_UniqSequenceNo_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_BrokerID_get, _riskuserapi.CShfeFtdcSequencialOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_InvestorID_get, _riskuserapi.CShfeFtdcSequencialOrderField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_InstrumentID_get, _riskuserapi.CShfeFtdcSequencialOrderField_InstrumentID_set)
    OrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_OrderRef_get, _riskuserapi.CShfeFtdcSequencialOrderField_OrderRef_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_UserID_get, _riskuserapi.CShfeFtdcSequencialOrderField_UserID_set)
    OrderPriceType: "TShfeFtdcOrderPriceTypeType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_OrderPriceType_get, _riskuserapi.CShfeFtdcSequencialOrderField_OrderPriceType_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_Direction_get, _riskuserapi.CShfeFtdcSequencialOrderField_Direction_set)
    CombOffsetFlag: "TShfeFtdcCombOffsetFlagType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_CombOffsetFlag_get, _riskuserapi.CShfeFtdcSequencialOrderField_CombOffsetFlag_set)
    CombHedgeFlag: "TShfeFtdcCombHedgeFlagType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_CombHedgeFlag_get, _riskuserapi.CShfeFtdcSequencialOrderField_CombHedgeFlag_set)
    LimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_LimitPrice_get, _riskuserapi.CShfeFtdcSequencialOrderField_LimitPrice_set)
    VolumeTotalOriginal: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_VolumeTotalOriginal_get, _riskuserapi.CShfeFtdcSequencialOrderField_VolumeTotalOriginal_set)
    TimeCondition: "TShfeFtdcTimeConditionType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_TimeCondition_get, _riskuserapi.CShfeFtdcSequencialOrderField_TimeCondition_set)
    GTDDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_GTDDate_get, _riskuserapi.CShfeFtdcSequencialOrderField_GTDDate_set)
    VolumeCondition: "TShfeFtdcVolumeConditionType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_VolumeCondition_get, _riskuserapi.CShfeFtdcSequencialOrderField_VolumeCondition_set)
    MinVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_MinVolume_get, _riskuserapi.CShfeFtdcSequencialOrderField_MinVolume_set)
    ContingentCondition: "TShfeFtdcContingentConditionType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_ContingentCondition_get, _riskuserapi.CShfeFtdcSequencialOrderField_ContingentCondition_set)
    StopPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_StopPrice_get, _riskuserapi.CShfeFtdcSequencialOrderField_StopPrice_set)
    ForceCloseReason: "TShfeFtdcForceCloseReasonType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_ForceCloseReason_get, _riskuserapi.CShfeFtdcSequencialOrderField_ForceCloseReason_set)
    IsAutoSuspend: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_IsAutoSuspend_get, _riskuserapi.CShfeFtdcSequencialOrderField_IsAutoSuspend_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_BusinessUnit_get, _riskuserapi.CShfeFtdcSequencialOrderField_BusinessUnit_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_RequestID_get, _riskuserapi.CShfeFtdcSequencialOrderField_RequestID_set)
    OrderLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_OrderLocalID_get, _riskuserapi.CShfeFtdcSequencialOrderField_OrderLocalID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcSequencialOrderField_ExchangeID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_ParticipantID_get, _riskuserapi.CShfeFtdcSequencialOrderField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_ClientID_get, _riskuserapi.CShfeFtdcSequencialOrderField_ClientID_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_ExchangeInstID_get, _riskuserapi.CShfeFtdcSequencialOrderField_ExchangeInstID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_TraderID_get, _riskuserapi.CShfeFtdcSequencialOrderField_TraderID_set)
    InstallID: "TShfeFtdcInstallIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_InstallID_get, _riskuserapi.CShfeFtdcSequencialOrderField_InstallID_set)
    OrderSubmitStatus: "TShfeFtdcOrderSubmitStatusType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_OrderSubmitStatus_get, _riskuserapi.CShfeFtdcSequencialOrderField_OrderSubmitStatus_set)
    NotifySequence: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_NotifySequence_get, _riskuserapi.CShfeFtdcSequencialOrderField_NotifySequence_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_TradingDay_get, _riskuserapi.CShfeFtdcSequencialOrderField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_SettlementID_get, _riskuserapi.CShfeFtdcSequencialOrderField_SettlementID_set)
    OrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_OrderSysID_get, _riskuserapi.CShfeFtdcSequencialOrderField_OrderSysID_set)
    OrderSource: "TShfeFtdcOrderSourceType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_OrderSource_get, _riskuserapi.CShfeFtdcSequencialOrderField_OrderSource_set)
    OrderStatus: "TShfeFtdcOrderStatusType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_OrderStatus_get, _riskuserapi.CShfeFtdcSequencialOrderField_OrderStatus_set)
    OrderType: "TShfeFtdcOrderTypeType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_OrderType_get, _riskuserapi.CShfeFtdcSequencialOrderField_OrderType_set)
    VolumeTraded: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_VolumeTraded_get, _riskuserapi.CShfeFtdcSequencialOrderField_VolumeTraded_set)
    VolumeTotal: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_VolumeTotal_get, _riskuserapi.CShfeFtdcSequencialOrderField_VolumeTotal_set)
    InsertDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_InsertDate_get, _riskuserapi.CShfeFtdcSequencialOrderField_InsertDate_set)
    InsertTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_InsertTime_get, _riskuserapi.CShfeFtdcSequencialOrderField_InsertTime_set)
    ActiveTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_ActiveTime_get, _riskuserapi.CShfeFtdcSequencialOrderField_ActiveTime_set)
    SuspendTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_SuspendTime_get, _riskuserapi.CShfeFtdcSequencialOrderField_SuspendTime_set)
    UpdateTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_UpdateTime_get, _riskuserapi.CShfeFtdcSequencialOrderField_UpdateTime_set)
    CancelTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_CancelTime_get, _riskuserapi.CShfeFtdcSequencialOrderField_CancelTime_set)
    ActiveTraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_ActiveTraderID_get, _riskuserapi.CShfeFtdcSequencialOrderField_ActiveTraderID_set)
    ClearingPartID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_ClearingPartID_get, _riskuserapi.CShfeFtdcSequencialOrderField_ClearingPartID_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_SequenceNo_get, _riskuserapi.CShfeFtdcSequencialOrderField_SequenceNo_set)
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_FrontID_get, _riskuserapi.CShfeFtdcSequencialOrderField_FrontID_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_SessionID_get, _riskuserapi.CShfeFtdcSequencialOrderField_SessionID_set)
    UserProductInfo: "TShfeFtdcProductInfoType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_UserProductInfo_get, _riskuserapi.CShfeFtdcSequencialOrderField_UserProductInfo_set)
    StatusMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_StatusMsg_get, _riskuserapi.CShfeFtdcSequencialOrderField_StatusMsg_set)
    UserForceClose: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_UserForceClose_get, _riskuserapi.CShfeFtdcSequencialOrderField_UserForceClose_set)
    ActiveUserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_ActiveUserID_get, _riskuserapi.CShfeFtdcSequencialOrderField_ActiveUserID_set)
    BrokerOrderSeq: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_BrokerOrderSeq_get, _riskuserapi.CShfeFtdcSequencialOrderField_BrokerOrderSeq_set)
    RelativeOrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_RelativeOrderSysID_get, _riskuserapi.CShfeFtdcSequencialOrderField_RelativeOrderSysID_set)
    ZCETotalTradedVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_ZCETotalTradedVolume_get, _riskuserapi.CShfeFtdcSequencialOrderField_ZCETotalTradedVolume_set)
    IsSwapOrder: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_IsSwapOrder_get, _riskuserapi.CShfeFtdcSequencialOrderField_IsSwapOrder_set)
    BranchID: "TShfeFtdcBranchIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_BranchID_get, _riskuserapi.CShfeFtdcSequencialOrderField_BranchID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_InvestUnitID_get, _riskuserapi.CShfeFtdcSequencialOrderField_InvestUnitID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_AccountID_get, _riskuserapi.CShfeFtdcSequencialOrderField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_CurrencyID_get, _riskuserapi.CShfeFtdcSequencialOrderField_CurrencyID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_IPAddress_get, _riskuserapi.CShfeFtdcSequencialOrderField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_MacAddress_get, _riskuserapi.CShfeFtdcSequencialOrderField_MacAddress_set)
    AppID: "TShfeFtdcAppIDType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_AppID_get, _riskuserapi.CShfeFtdcSequencialOrderField_AppID_set)
    OrderMemo: "TShfeFtdcOrderMemoType" = property(_riskuserapi.CShfeFtdcSequencialOrderField_OrderMemo_get, _riskuserapi.CShfeFtdcSequencialOrderField_OrderMemo_set)
    SessionReqSeq: "TShfeFtdcSequenceNo12Type" = property(_riskuserapi.CShfeFtdcSequencialOrderField_SessionReqSeq_get, _riskuserapi.CShfeFtdcSequencialOrderField_SessionReqSeq_set)

    def __eq__(self, ct: "CShfeFtdcSequencialOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcSequencialOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSequencialOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcSequencialOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSequencialOrderField

# Register CShfeFtdcSequencialOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcSequencialOrderField_swigregister(CShfeFtdcSequencialOrderField)
class CShfeFtdcSequencialBrokerUserEventField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UniqSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSequencialBrokerUserEventField_UniqSequenceNo_get, _riskuserapi.CShfeFtdcSequencialBrokerUserEventField_UniqSequenceNo_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSequencialBrokerUserEventField_BrokerID_get, _riskuserapi.CShfeFtdcSequencialBrokerUserEventField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcSequencialBrokerUserEventField_UserID_get, _riskuserapi.CShfeFtdcSequencialBrokerUserEventField_UserID_set)
    UserEventType: "TShfeFtdcUserEventTypeType" = property(_riskuserapi.CShfeFtdcSequencialBrokerUserEventField_UserEventType_get, _riskuserapi.CShfeFtdcSequencialBrokerUserEventField_UserEventType_set)
    EventSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSequencialBrokerUserEventField_EventSequenceNo_get, _riskuserapi.CShfeFtdcSequencialBrokerUserEventField_EventSequenceNo_set)
    EventDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSequencialBrokerUserEventField_EventDate_get, _riskuserapi.CShfeFtdcSequencialBrokerUserEventField_EventDate_set)
    EventTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcSequencialBrokerUserEventField_EventTime_get, _riskuserapi.CShfeFtdcSequencialBrokerUserEventField_EventTime_set)
    UserEventInfo: "TShfeFtdcUserEventInfoType" = property(_riskuserapi.CShfeFtdcSequencialBrokerUserEventField_UserEventInfo_get, _riskuserapi.CShfeFtdcSequencialBrokerUserEventField_UserEventInfo_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSequencialBrokerUserEventField_InvestorID_get, _riskuserapi.CShfeFtdcSequencialBrokerUserEventField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSequencialBrokerUserEventField_InstrumentID_get, _riskuserapi.CShfeFtdcSequencialBrokerUserEventField_InstrumentID_set)
    DRIdentityID: "TShfeFtdcDRIdentityIDType" = property(_riskuserapi.CShfeFtdcSequencialBrokerUserEventField_DRIdentityID_get, _riskuserapi.CShfeFtdcSequencialBrokerUserEventField_DRIdentityID_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSequencialBrokerUserEventField_TradingDay_get, _riskuserapi.CShfeFtdcSequencialBrokerUserEventField_TradingDay_set)

    def __eq__(self, ct: "CShfeFtdcSequencialBrokerUserEventField") -> "bool":
        return _riskuserapi.CShfeFtdcSequencialBrokerUserEventField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSequencialBrokerUserEventField_swiginit(self, _riskuserapi.new_CShfeFtdcSequencialBrokerUserEventField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSequencialBrokerUserEventField

# Register CShfeFtdcSequencialBrokerUserEventField in _riskuserapi:
_riskuserapi.CShfeFtdcSequencialBrokerUserEventField_swigregister(CShfeFtdcSequencialBrokerUserEventField)
class CShfeFtdcSequencialPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UniqSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_UniqSequenceNo_get, _riskuserapi.CShfeFtdcSequencialPositionField_UniqSequenceNo_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_InstrumentID_get, _riskuserapi.CShfeFtdcSequencialPositionField_InstrumentID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_BrokerID_get, _riskuserapi.CShfeFtdcSequencialPositionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_InvestorID_get, _riskuserapi.CShfeFtdcSequencialPositionField_InvestorID_set)
    PosiDirection: "TShfeFtdcPosiDirectionType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_PosiDirection_get, _riskuserapi.CShfeFtdcSequencialPositionField_PosiDirection_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_HedgeFlag_get, _riskuserapi.CShfeFtdcSequencialPositionField_HedgeFlag_set)
    PositionDate: "TShfeFtdcPositionDateType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_PositionDate_get, _riskuserapi.CShfeFtdcSequencialPositionField_PositionDate_set)
    YdPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_YdPosition_get, _riskuserapi.CShfeFtdcSequencialPositionField_YdPosition_set)
    Position: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_Position_get, _riskuserapi.CShfeFtdcSequencialPositionField_Position_set)
    LongFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_LongFrozen_get, _riskuserapi.CShfeFtdcSequencialPositionField_LongFrozen_set)
    ShortFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_ShortFrozen_get, _riskuserapi.CShfeFtdcSequencialPositionField_ShortFrozen_set)
    LongFrozenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_LongFrozenAmount_get, _riskuserapi.CShfeFtdcSequencialPositionField_LongFrozenAmount_set)
    ShortFrozenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_ShortFrozenAmount_get, _riskuserapi.CShfeFtdcSequencialPositionField_ShortFrozenAmount_set)
    OpenVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_OpenVolume_get, _riskuserapi.CShfeFtdcSequencialPositionField_OpenVolume_set)
    CloseVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_CloseVolume_get, _riskuserapi.CShfeFtdcSequencialPositionField_CloseVolume_set)
    OpenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_OpenAmount_get, _riskuserapi.CShfeFtdcSequencialPositionField_OpenAmount_set)
    CloseAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_CloseAmount_get, _riskuserapi.CShfeFtdcSequencialPositionField_CloseAmount_set)
    PositionCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_PositionCost_get, _riskuserapi.CShfeFtdcSequencialPositionField_PositionCost_set)
    PreMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_PreMargin_get, _riskuserapi.CShfeFtdcSequencialPositionField_PreMargin_set)
    UseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_UseMargin_get, _riskuserapi.CShfeFtdcSequencialPositionField_UseMargin_set)
    FrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_FrozenMargin_get, _riskuserapi.CShfeFtdcSequencialPositionField_FrozenMargin_set)
    FrozenCash: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_FrozenCash_get, _riskuserapi.CShfeFtdcSequencialPositionField_FrozenCash_set)
    FrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_FrozenCommission_get, _riskuserapi.CShfeFtdcSequencialPositionField_FrozenCommission_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_CashIn_get, _riskuserapi.CShfeFtdcSequencialPositionField_CashIn_set)
    Commission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_Commission_get, _riskuserapi.CShfeFtdcSequencialPositionField_Commission_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_CloseProfit_get, _riskuserapi.CShfeFtdcSequencialPositionField_CloseProfit_set)
    PositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_PositionProfit_get, _riskuserapi.CShfeFtdcSequencialPositionField_PositionProfit_set)
    PreSettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_PreSettlementPrice_get, _riskuserapi.CShfeFtdcSequencialPositionField_PreSettlementPrice_set)
    SettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_SettlementPrice_get, _riskuserapi.CShfeFtdcSequencialPositionField_SettlementPrice_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_TradingDay_get, _riskuserapi.CShfeFtdcSequencialPositionField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_SettlementID_get, _riskuserapi.CShfeFtdcSequencialPositionField_SettlementID_set)
    OpenCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_OpenCost_get, _riskuserapi.CShfeFtdcSequencialPositionField_OpenCost_set)
    ExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_ExchangeMargin_get, _riskuserapi.CShfeFtdcSequencialPositionField_ExchangeMargin_set)
    CombPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_CombPosition_get, _riskuserapi.CShfeFtdcSequencialPositionField_CombPosition_set)
    CombLongFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_CombLongFrozen_get, _riskuserapi.CShfeFtdcSequencialPositionField_CombLongFrozen_set)
    CombShortFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_CombShortFrozen_get, _riskuserapi.CShfeFtdcSequencialPositionField_CombShortFrozen_set)
    CloseProfitByDate: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_CloseProfitByDate_get, _riskuserapi.CShfeFtdcSequencialPositionField_CloseProfitByDate_set)
    CloseProfitByTrade: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_CloseProfitByTrade_get, _riskuserapi.CShfeFtdcSequencialPositionField_CloseProfitByTrade_set)
    TodayPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_TodayPosition_get, _riskuserapi.CShfeFtdcSequencialPositionField_TodayPosition_set)
    MarginRateByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_MarginRateByMoney_get, _riskuserapi.CShfeFtdcSequencialPositionField_MarginRateByMoney_set)
    MarginRateByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_MarginRateByVolume_get, _riskuserapi.CShfeFtdcSequencialPositionField_MarginRateByVolume_set)
    StrikeFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_StrikeFrozen_get, _riskuserapi.CShfeFtdcSequencialPositionField_StrikeFrozen_set)
    StrikeFrozenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_StrikeFrozenAmount_get, _riskuserapi.CShfeFtdcSequencialPositionField_StrikeFrozenAmount_set)
    AbandonFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_AbandonFrozen_get, _riskuserapi.CShfeFtdcSequencialPositionField_AbandonFrozen_set)
    OptionValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_OptionValue_get, _riskuserapi.CShfeFtdcSequencialPositionField_OptionValue_set)
    MaintUseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_MaintUseMargin_get, _riskuserapi.CShfeFtdcSequencialPositionField_MaintUseMargin_set)
    MaintExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_MaintExchangeMargin_get, _riskuserapi.CShfeFtdcSequencialPositionField_MaintExchangeMargin_set)
    IndexSettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_IndexSettlementPrice_get, _riskuserapi.CShfeFtdcSequencialPositionField_IndexSettlementPrice_set)
    FixedMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_FixedMargin_get, _riskuserapi.CShfeFtdcSequencialPositionField_FixedMargin_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_ExchangeID_get, _riskuserapi.CShfeFtdcSequencialPositionField_ExchangeID_set)
    YdStrikeFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_YdStrikeFrozen_get, _riskuserapi.CShfeFtdcSequencialPositionField_YdStrikeFrozen_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_InvestUnitID_get, _riskuserapi.CShfeFtdcSequencialPositionField_InvestUnitID_set)
    PositionCostOffset: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_PositionCostOffset_get, _riskuserapi.CShfeFtdcSequencialPositionField_PositionCostOffset_set)
    TasPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_TasPosition_get, _riskuserapi.CShfeFtdcSequencialPositionField_TasPosition_set)
    TasPositionCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialPositionField_TasPositionCost_get, _riskuserapi.CShfeFtdcSequencialPositionField_TasPositionCost_set)

    def __eq__(self, ct: "CShfeFtdcSequencialPositionField") -> "bool":
        return _riskuserapi.CShfeFtdcSequencialPositionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSequencialPositionField_swiginit(self, _riskuserapi.new_CShfeFtdcSequencialPositionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSequencialPositionField

# Register CShfeFtdcSequencialPositionField in _riskuserapi:
_riskuserapi.CShfeFtdcSequencialPositionField_swigregister(CShfeFtdcSequencialPositionField)
class CShfeFtdcQryRiskNotifyPatternField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryRiskNotifyPatternField_BrokerID_get, _riskuserapi.CShfeFtdcQryRiskNotifyPatternField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcQryRiskNotifyPatternField_UserID_get, _riskuserapi.CShfeFtdcQryRiskNotifyPatternField_UserID_set)
    Reserve: "TShfeFtdcCommentType" = property(_riskuserapi.CShfeFtdcQryRiskNotifyPatternField_Reserve_get, _riskuserapi.CShfeFtdcQryRiskNotifyPatternField_Reserve_set)

    def __eq__(self, ct: "CShfeFtdcQryRiskNotifyPatternField") -> "bool":
        return _riskuserapi.CShfeFtdcQryRiskNotifyPatternField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryRiskNotifyPatternField_swiginit(self, _riskuserapi.new_CShfeFtdcQryRiskNotifyPatternField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryRiskNotifyPatternField

# Register CShfeFtdcQryRiskNotifyPatternField in _riskuserapi:
_riskuserapi.CShfeFtdcQryRiskNotifyPatternField_swigregister(CShfeFtdcQryRiskNotifyPatternField)
class CShfeFtdcRiskNotifyPatternField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyPatternField_BrokerID_get, _riskuserapi.CShfeFtdcRiskNotifyPatternField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyPatternField_UserID_get, _riskuserapi.CShfeFtdcRiskNotifyPatternField_UserID_set)
    NotifyClass: "TShfeFtdcNotifyClassType" = property(_riskuserapi.CShfeFtdcRiskNotifyPatternField_NotifyClass_get, _riskuserapi.CShfeFtdcRiskNotifyPatternField_NotifyClass_set)
    IsActive: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskNotifyPatternField_IsActive_get, _riskuserapi.CShfeFtdcRiskNotifyPatternField_IsActive_set)
    IsAutoSystem: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskNotifyPatternField_IsAutoSystem_get, _riskuserapi.CShfeFtdcRiskNotifyPatternField_IsAutoSystem_set)
    IsAutoSMS: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskNotifyPatternField_IsAutoSMS_get, _riskuserapi.CShfeFtdcRiskNotifyPatternField_IsAutoSMS_set)
    IsAutoEmail: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskNotifyPatternField_IsAutoEmail_get, _riskuserapi.CShfeFtdcRiskNotifyPatternField_IsAutoEmail_set)
    SystemPattern: "TShfeFtdcRiskNofityInfoType" = property(_riskuserapi.CShfeFtdcRiskNotifyPatternField_SystemPattern_get, _riskuserapi.CShfeFtdcRiskNotifyPatternField_SystemPattern_set)
    SMSPattern: "TShfeFtdcRiskNofityInfoType" = property(_riskuserapi.CShfeFtdcRiskNotifyPatternField_SMSPattern_get, _riskuserapi.CShfeFtdcRiskNotifyPatternField_SMSPattern_set)
    EmailPattern: "TShfeFtdcRiskNofityInfoType" = property(_riskuserapi.CShfeFtdcRiskNotifyPatternField_EmailPattern_get, _riskuserapi.CShfeFtdcRiskNotifyPatternField_EmailPattern_set)
    Reserve: "TShfeFtdcAddressType" = property(_riskuserapi.CShfeFtdcRiskNotifyPatternField_Reserve_get, _riskuserapi.CShfeFtdcRiskNotifyPatternField_Reserve_set)

    def __eq__(self, ct: "CShfeFtdcRiskNotifyPatternField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskNotifyPatternField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskNotifyPatternField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskNotifyPatternField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskNotifyPatternField

# Register CShfeFtdcRiskNotifyPatternField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskNotifyPatternField_swigregister(CShfeFtdcRiskNotifyPatternField)
class CShfeFtdcQryRiskNotifyTokenField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryRiskNotifyTokenField_BrokerID_get, _riskuserapi.CShfeFtdcQryRiskNotifyTokenField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcQryRiskNotifyTokenField_UserID_get, _riskuserapi.CShfeFtdcQryRiskNotifyTokenField_UserID_set)

    def __eq__(self, ct: "CShfeFtdcQryRiskNotifyTokenField") -> "bool":
        return _riskuserapi.CShfeFtdcQryRiskNotifyTokenField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryRiskNotifyTokenField_swiginit(self, _riskuserapi.new_CShfeFtdcQryRiskNotifyTokenField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryRiskNotifyTokenField

# Register CShfeFtdcQryRiskNotifyTokenField in _riskuserapi:
_riskuserapi.CShfeFtdcQryRiskNotifyTokenField_swigregister(CShfeFtdcQryRiskNotifyTokenField)
class CShfeFtdcRiskNotifyTokenField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Token: "TShfeFtdcExchangeNameType" = property(_riskuserapi.CShfeFtdcRiskNotifyTokenField_Token_get, _riskuserapi.CShfeFtdcRiskNotifyTokenField_Token_set)
    Description: "TShfeFtdcBrokerNameType" = property(_riskuserapi.CShfeFtdcRiskNotifyTokenField_Description_get, _riskuserapi.CShfeFtdcRiskNotifyTokenField_Description_set)

    def __eq__(self, ct: "CShfeFtdcRiskNotifyTokenField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskNotifyTokenField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskNotifyTokenField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskNotifyTokenField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskNotifyTokenField

# Register CShfeFtdcRiskNotifyTokenField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskNotifyTokenField_swigregister(CShfeFtdcRiskNotifyTokenField)
class CShfeFtdcRiskNotifyCommandField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyCommandField_BrokerID_get, _riskuserapi.CShfeFtdcRiskNotifyCommandField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyCommandField_UserID_get, _riskuserapi.CShfeFtdcRiskNotifyCommandField_UserID_set)
    NotifyClass: "TShfeFtdcNotifyClassType" = property(_riskuserapi.CShfeFtdcRiskNotifyCommandField_NotifyClass_get, _riskuserapi.CShfeFtdcRiskNotifyCommandField_NotifyClass_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyCommandField_InvestorID_get, _riskuserapi.CShfeFtdcRiskNotifyCommandField_InvestorID_set)
    IsAutoSystem: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskNotifyCommandField_IsAutoSystem_get, _riskuserapi.CShfeFtdcRiskNotifyCommandField_IsAutoSystem_set)
    IsAutoSMS: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskNotifyCommandField_IsAutoSMS_get, _riskuserapi.CShfeFtdcRiskNotifyCommandField_IsAutoSMS_set)
    IsAutoEmail: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskNotifyCommandField_IsAutoEmail_get, _riskuserapi.CShfeFtdcRiskNotifyCommandField_IsAutoEmail_set)
    Reserve: "TShfeFtdcCommentType" = property(_riskuserapi.CShfeFtdcRiskNotifyCommandField_Reserve_get, _riskuserapi.CShfeFtdcRiskNotifyCommandField_Reserve_set)
    Pattern: "TShfeFtdcRiskNofityInfoType" = property(_riskuserapi.CShfeFtdcRiskNotifyCommandField_Pattern_get, _riskuserapi.CShfeFtdcRiskNotifyCommandField_Pattern_set)
    IsNormal: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskNotifyCommandField_IsNormal_get, _riskuserapi.CShfeFtdcRiskNotifyCommandField_IsNormal_set)
    IsWarn: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskNotifyCommandField_IsWarn_get, _riskuserapi.CShfeFtdcRiskNotifyCommandField_IsWarn_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyCommandField_CurrencyID_get, _riskuserapi.CShfeFtdcRiskNotifyCommandField_CurrencyID_set)
    IsAutoVoice: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskNotifyCommandField_IsAutoVoice_get, _riskuserapi.CShfeFtdcRiskNotifyCommandField_IsAutoVoice_set)

    def __eq__(self, ct: "CShfeFtdcRiskNotifyCommandField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskNotifyCommandField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskNotifyCommandField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskNotifyCommandField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskNotifyCommandField

# Register CShfeFtdcRiskNotifyCommandField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskNotifyCommandField_swigregister(CShfeFtdcRiskNotifyCommandField)
class CShfeFtdcForceCloseStandardField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ForceCloseLevel: "TShfeFtdcForceCloseLevelType" = property(_riskuserapi.CShfeFtdcForceCloseStandardField_ForceCloseLevel_get, _riskuserapi.CShfeFtdcForceCloseStandardField_ForceCloseLevel_set)
    ForceCloseRelease: "TShfeFtdcForceCloseReleaseType" = property(_riskuserapi.CShfeFtdcForceCloseStandardField_ForceCloseRelease_get, _riskuserapi.CShfeFtdcForceCloseStandardField_ForceCloseRelease_set)
    FCNonLimitFirst: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcForceCloseStandardField_FCNonLimitFirst_get, _riskuserapi.CShfeFtdcForceCloseStandardField_FCNonLimitFirst_set)
    FCPosiProfitLossFirst: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcForceCloseStandardField_FCPosiProfitLossFirst_get, _riskuserapi.CShfeFtdcForceCloseStandardField_FCPosiProfitLossFirst_set)
    FCCustomAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForceCloseStandardField_FCCustomAmount_get, _riskuserapi.CShfeFtdcForceCloseStandardField_FCCustomAmount_set)
    FCCustomRiskLevel: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcForceCloseStandardField_FCCustomRiskLevel_get, _riskuserapi.CShfeFtdcForceCloseStandardField_FCCustomRiskLevel_set)
    FCMode: "TShfeFtdcFCModeType" = property(_riskuserapi.CShfeFtdcForceCloseStandardField_FCMode_get, _riskuserapi.CShfeFtdcForceCloseStandardField_FCMode_set)
    FCPositionType: "TShfeFtdcFCPositionTypeType" = property(_riskuserapi.CShfeFtdcForceCloseStandardField_FCPositionType_get, _riskuserapi.CShfeFtdcForceCloseStandardField_FCPositionType_set)

    def __eq__(self, ct: "CShfeFtdcForceCloseStandardField") -> "bool":
        return _riskuserapi.CShfeFtdcForceCloseStandardField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcForceCloseStandardField_swiginit(self, _riskuserapi.new_CShfeFtdcForceCloseStandardField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcForceCloseStandardField

# Register CShfeFtdcForceCloseStandardField in _riskuserapi:
_riskuserapi.CShfeFtdcForceCloseStandardField_swigregister(CShfeFtdcForceCloseStandardField)
class CShfeFtdcForceClosePositionRuleField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductInstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcForceClosePositionRuleField_ProductInstrumentID_get, _riskuserapi.CShfeFtdcForceClosePositionRuleField_ProductInstrumentID_set)
    FCPosiDirection: "TShfeFtdcForceClosePosiDirectionType" = property(_riskuserapi.CShfeFtdcForceClosePositionRuleField_FCPosiDirection_get, _riskuserapi.CShfeFtdcForceClosePositionRuleField_FCPosiDirection_set)
    FCHedgeFlag: "TShfeFtdcForceCloseHedgeFlagType" = property(_riskuserapi.CShfeFtdcForceClosePositionRuleField_FCHedgeFlag_get, _riskuserapi.CShfeFtdcForceClosePositionRuleField_FCHedgeFlag_set)
    FCCombPosiFlag: "TShfeFtdcForceCloseCombPosiFlagType" = property(_riskuserapi.CShfeFtdcForceClosePositionRuleField_FCCombPosiFlag_get, _riskuserapi.CShfeFtdcForceClosePositionRuleField_FCCombPosiFlag_set)
    FCHistoryPosiOrder: "TShfeFtdcForceCloseHistoryPosiOrderType" = property(_riskuserapi.CShfeFtdcForceClosePositionRuleField_FCHistoryPosiOrder_get, _riskuserapi.CShfeFtdcForceClosePositionRuleField_FCHistoryPosiOrder_set)
    FCPrice: "TShfeFtdcForceClosePriceTypeType" = property(_riskuserapi.CShfeFtdcForceClosePositionRuleField_FCPrice_get, _riskuserapi.CShfeFtdcForceClosePositionRuleField_FCPrice_set)
    PriceTick: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForceClosePositionRuleField_PriceTick_get, _riskuserapi.CShfeFtdcForceClosePositionRuleField_PriceTick_set)
    FCRulePriority: "TShfeFtdcFCRulePriorityType" = property(_riskuserapi.CShfeFtdcForceClosePositionRuleField_FCRulePriority_get, _riskuserapi.CShfeFtdcForceClosePositionRuleField_FCRulePriority_set)

    def __eq__(self, ct: "CShfeFtdcForceClosePositionRuleField") -> "bool":
        return _riskuserapi.CShfeFtdcForceClosePositionRuleField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcForceClosePositionRuleField_swiginit(self, _riskuserapi.new_CShfeFtdcForceClosePositionRuleField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcForceClosePositionRuleField

# Register CShfeFtdcForceClosePositionRuleField in _riskuserapi:
_riskuserapi.CShfeFtdcForceClosePositionRuleField_swigregister(CShfeFtdcForceClosePositionRuleField)
class CShfeFtdcForceCloseListField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcForceCloseListField_BrokerID_get, _riskuserapi.CShfeFtdcForceCloseListField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcForceCloseListField_InvestorID_get, _riskuserapi.CShfeFtdcForceCloseListField_InvestorID_set)

    def __eq__(self, ct: "CShfeFtdcForceCloseListField") -> "bool":
        return _riskuserapi.CShfeFtdcForceCloseListField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcForceCloseListField_swiginit(self, _riskuserapi.new_CShfeFtdcForceCloseListField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcForceCloseListField

# Register CShfeFtdcForceCloseListField in _riskuserapi:
_riskuserapi.CShfeFtdcForceCloseListField_swigregister(CShfeFtdcForceCloseListField)
class CShfeFtdcForceClosePositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcForceClosePositionField_InstrumentID_get, _riskuserapi.CShfeFtdcForceClosePositionField_InstrumentID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcForceClosePositionField_BrokerID_get, _riskuserapi.CShfeFtdcForceClosePositionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcForceClosePositionField_InvestorID_get, _riskuserapi.CShfeFtdcForceClosePositionField_InvestorID_set)
    PosiDirection: "TShfeFtdcPosiDirectionType" = property(_riskuserapi.CShfeFtdcForceClosePositionField_PosiDirection_get, _riskuserapi.CShfeFtdcForceClosePositionField_PosiDirection_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcForceClosePositionField_HedgeFlag_get, _riskuserapi.CShfeFtdcForceClosePositionField_HedgeFlag_set)
    PositionDate: "TShfeFtdcPositionDateType" = property(_riskuserapi.CShfeFtdcForceClosePositionField_PositionDate_get, _riskuserapi.CShfeFtdcForceClosePositionField_PositionDate_set)
    Position: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForceClosePositionField_Position_get, _riskuserapi.CShfeFtdcForceClosePositionField_Position_set)
    FCPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForceClosePositionField_FCPosition_get, _riskuserapi.CShfeFtdcForceClosePositionField_FCPosition_set)
    FCPriceType: "TShfeFtdcForceClosePriceTypeType" = property(_riskuserapi.CShfeFtdcForceClosePositionField_FCPriceType_get, _riskuserapi.CShfeFtdcForceClosePositionField_FCPriceType_set)
    PriceTick: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForceClosePositionField_PriceTick_get, _riskuserapi.CShfeFtdcForceClosePositionField_PriceTick_set)
    FCPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcForceClosePositionField_FCPrice_get, _riskuserapi.CShfeFtdcForceClosePositionField_FCPrice_set)
    ReleaseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForceClosePositionField_ReleaseMargin_get, _riskuserapi.CShfeFtdcForceClosePositionField_ReleaseMargin_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForceClosePositionField_CloseProfit_get, _riskuserapi.CShfeFtdcForceClosePositionField_CloseProfit_set)
    ExchReleaseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForceClosePositionField_ExchReleaseMargin_get, _riskuserapi.CShfeFtdcForceClosePositionField_ExchReleaseMargin_set)
    PosiProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForceClosePositionField_PosiProfit_get, _riskuserapi.CShfeFtdcForceClosePositionField_PosiProfit_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForceClosePositionField_CashIn_get, _riskuserapi.CShfeFtdcForceClosePositionField_CashIn_set)
    OptionValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForceClosePositionField_OptionValue_get, _riskuserapi.CShfeFtdcForceClosePositionField_OptionValue_set)

    def __eq__(self, ct: "CShfeFtdcForceClosePositionField") -> "bool":
        return _riskuserapi.CShfeFtdcForceClosePositionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcForceClosePositionField_swiginit(self, _riskuserapi.new_CShfeFtdcForceClosePositionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcForceClosePositionField

# Register CShfeFtdcForceClosePositionField in _riskuserapi:
_riskuserapi.CShfeFtdcForceClosePositionField_swigregister(CShfeFtdcForceClosePositionField)
class CShfeFtdcRspForceClosePositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_InstrumentID_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_InstrumentID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_BrokerID_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_InvestorID_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_InvestorID_set)
    PosiDirection: "TShfeFtdcPosiDirectionType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_PosiDirection_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_PosiDirection_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_HedgeFlag_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_HedgeFlag_set)
    PositionDate: "TShfeFtdcPositionDateType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_PositionDate_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_PositionDate_set)
    Position: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_Position_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_Position_set)
    FCPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_FCPosition_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_FCPosition_set)
    FCPriceType: "TShfeFtdcForceClosePriceTypeType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_FCPriceType_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_FCPriceType_set)
    PriceTick: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_PriceTick_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_PriceTick_set)
    FCPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_FCPrice_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_FCPrice_set)
    ReleaseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_ReleaseMargin_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_ReleaseMargin_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_CloseProfit_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_CloseProfit_set)
    FCID: "TShfeFtdcForceCloseSceneIdType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_FCID_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_FCID_set)
    Time: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_Time_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_Time_set)
    CurrMillisec: "TShfeFtdcMillisecType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_CurrMillisec_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_CurrMillisec_set)
    ExchReleaseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_ExchReleaseMargin_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_ExchReleaseMargin_set)
    PosiProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_PosiProfit_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_PosiProfit_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_CashIn_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_CashIn_set)
    OptionValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspForceClosePositionField_OptionValue_get, _riskuserapi.CShfeFtdcRspForceClosePositionField_OptionValue_set)

    def __eq__(self, ct: "CShfeFtdcRspForceClosePositionField") -> "bool":
        return _riskuserapi.CShfeFtdcRspForceClosePositionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRspForceClosePositionField_swiginit(self, _riskuserapi.new_CShfeFtdcRspForceClosePositionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRspForceClosePositionField

# Register CShfeFtdcRspForceClosePositionField in _riskuserapi:
_riskuserapi.CShfeFtdcRspForceClosePositionField_swigregister(CShfeFtdcRspForceClosePositionField)
class CShfeFtdcRiskForceCloseOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FCType: "TShfeFtdcForceCloseTypeType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_FCType_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_FCType_set)
    Time1: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_Time1_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_Time1_set)
    Millisec1: "TShfeFtdcMillisecType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_Millisec1_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_Millisec1_set)
    Time2: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_Time2_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_Time2_set)
    Millisec2: "TShfeFtdcMillisecType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_Millisec2_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_Millisec2_set)
    FCSceneId: "TShfeFtdcForceCloseSceneIdType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_FCSceneId_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_FCSceneId_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_BrokerID_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_InvestorID_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_InstrumentID_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_InstrumentID_set)
    OrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_OrderRef_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_OrderRef_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_UserID_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_UserID_set)
    OrderPriceType: "TShfeFtdcOrderPriceTypeType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_OrderPriceType_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_OrderPriceType_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_Direction_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_Direction_set)
    CombOffsetFlag: "TShfeFtdcCombOffsetFlagType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_CombOffsetFlag_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_CombOffsetFlag_set)
    CombHedgeFlag: "TShfeFtdcCombHedgeFlagType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_CombHedgeFlag_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_CombHedgeFlag_set)
    LimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_LimitPrice_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_LimitPrice_set)
    VolumeTotalOriginal: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_VolumeTotalOriginal_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_VolumeTotalOriginal_set)
    TimeCondition: "TShfeFtdcTimeConditionType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_TimeCondition_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_TimeCondition_set)
    GTDDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_GTDDate_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_GTDDate_set)
    VolumeCondition: "TShfeFtdcVolumeConditionType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_VolumeCondition_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_VolumeCondition_set)
    MinVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_MinVolume_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_MinVolume_set)
    ContingentCondition: "TShfeFtdcContingentConditionType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_ContingentCondition_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_ContingentCondition_set)
    StopPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_StopPrice_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_StopPrice_set)
    ForceCloseReason: "TShfeFtdcForceCloseReasonType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_ForceCloseReason_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_ForceCloseReason_set)
    IsAutoSuspend: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_IsAutoSuspend_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_IsAutoSuspend_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_BusinessUnit_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_BusinessUnit_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_RequestID_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_RequestID_set)
    UserForceClose: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_UserForceClose_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_UserForceClose_set)
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_FrontID_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_FrontID_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_SessionID_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_SessionID_set)
    IsSwapOrder: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_IsSwapOrder_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_IsSwapOrder_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_ExchangeID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_InvestUnitID_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_InvestUnitID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_AccountID_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_CurrencyID_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_CurrencyID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_ClientID_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_ClientID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_IPAddress_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_MacAddress_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_MacAddress_set)
    OrderMemo: "TShfeFtdcOrderMemoType" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_OrderMemo_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_OrderMemo_set)
    SessionReqSeq: "TShfeFtdcSequenceNo12Type" = property(_riskuserapi.CShfeFtdcRiskForceCloseOrderField_SessionReqSeq_get, _riskuserapi.CShfeFtdcRiskForceCloseOrderField_SessionReqSeq_set)

    def __eq__(self, ct: "CShfeFtdcRiskForceCloseOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskForceCloseOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskForceCloseOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskForceCloseOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskForceCloseOrderField

# Register CShfeFtdcRiskForceCloseOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskForceCloseOrderField_swigregister(CShfeFtdcRiskForceCloseOrderField)
class CShfeFtdcFrontStatusReportField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Seconds: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcFrontStatusReportField_Seconds_get, _riskuserapi.CShfeFtdcFrontStatusReportField_Seconds_set)
    WorkStatus: "TShfeFtdcWorkStatusType" = property(_riskuserapi.CShfeFtdcFrontStatusReportField_WorkStatus_get, _riskuserapi.CShfeFtdcFrontStatusReportField_WorkStatus_set)

    def __eq__(self, ct: "CShfeFtdcFrontStatusReportField") -> "bool":
        return _riskuserapi.CShfeFtdcFrontStatusReportField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcFrontStatusReportField_swiginit(self, _riskuserapi.new_CShfeFtdcFrontStatusReportField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcFrontStatusReportField

# Register CShfeFtdcFrontStatusReportField in _riskuserapi:
_riskuserapi.CShfeFtdcFrontStatusReportField_swigregister(CShfeFtdcFrontStatusReportField)
class CShfeFtdcIndexNPPParamField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcIndexNPPParamField_BrokerID_get, _riskuserapi.CShfeFtdcIndexNPPParamField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcIndexNPPParamField_InvestorID_get, _riskuserapi.CShfeFtdcIndexNPPParamField_InvestorID_set)
    ProductIDs: "TShfeFtdcInstrumentIDsType" = property(_riskuserapi.CShfeFtdcIndexNPPParamField_ProductIDs_get, _riskuserapi.CShfeFtdcIndexNPPParamField_ProductIDs_set)
    WarnLevel: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcIndexNPPParamField_WarnLevel_get, _riskuserapi.CShfeFtdcIndexNPPParamField_WarnLevel_set)

    def __eq__(self, ct: "CShfeFtdcIndexNPPParamField") -> "bool":
        return _riskuserapi.CShfeFtdcIndexNPPParamField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcIndexNPPParamField_swiginit(self, _riskuserapi.new_CShfeFtdcIndexNPPParamField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcIndexNPPParamField

# Register CShfeFtdcIndexNPPParamField in _riskuserapi:
_riskuserapi.CShfeFtdcIndexNPPParamField_swigregister(CShfeFtdcIndexNPPParamField)
class CShfeFtdcIndexNPPField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcIndexNPPField_BrokerID_get, _riskuserapi.CShfeFtdcIndexNPPField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcIndexNPPField_InvestorID_get, _riskuserapi.CShfeFtdcIndexNPPField_InvestorID_set)
    ProductIDs: "TShfeFtdcInstrumentIDsType" = property(_riskuserapi.CShfeFtdcIndexNPPField_ProductIDs_get, _riskuserapi.CShfeFtdcIndexNPPField_ProductIDs_set)
    Value: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcIndexNPPField_Value_get, _riskuserapi.CShfeFtdcIndexNPPField_Value_set)
    LongMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcIndexNPPField_LongMargin_get, _riskuserapi.CShfeFtdcIndexNPPField_LongMargin_set)
    ShortMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcIndexNPPField_ShortMargin_get, _riskuserapi.CShfeFtdcIndexNPPField_ShortMargin_set)
    Balance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcIndexNPPField_Balance_get, _riskuserapi.CShfeFtdcIndexNPPField_Balance_set)
    WarnLevel: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcIndexNPPField_WarnLevel_get, _riskuserapi.CShfeFtdcIndexNPPField_WarnLevel_set)

    def __eq__(self, ct: "CShfeFtdcIndexNPPField") -> "bool":
        return _riskuserapi.CShfeFtdcIndexNPPField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcIndexNPPField_swiginit(self, _riskuserapi.new_CShfeFtdcIndexNPPField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcIndexNPPField

# Register CShfeFtdcIndexNPPField in _riskuserapi:
_riskuserapi.CShfeFtdcIndexNPPField_swigregister(CShfeFtdcIndexNPPField)
class CShfeFtdcNormalRiskQueryField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcNormalRiskQueryField_BrokerID_get, _riskuserapi.CShfeFtdcNormalRiskQueryField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcNormalRiskQueryField_UserID_get, _riskuserapi.CShfeFtdcNormalRiskQueryField_UserID_set)

    def __eq__(self, ct: "CShfeFtdcNormalRiskQueryField") -> "bool":
        return _riskuserapi.CShfeFtdcNormalRiskQueryField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcNormalRiskQueryField_swiginit(self, _riskuserapi.new_CShfeFtdcNormalRiskQueryField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcNormalRiskQueryField

# Register CShfeFtdcNormalRiskQueryField in _riskuserapi:
_riskuserapi.CShfeFtdcNormalRiskQueryField_swigregister(CShfeFtdcNormalRiskQueryField)
class CShfeFtdcQrySafePriceRangeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    PriceVaryAlgo: "TShfeFtdcPriceVaryAlgoType" = property(_riskuserapi.CShfeFtdcQrySafePriceRangeField_PriceVaryAlgo_get, _riskuserapi.CShfeFtdcQrySafePriceRangeField_PriceVaryAlgo_set)
    RiskLevel: "TShfeFtdcNotifyClassType" = property(_riskuserapi.CShfeFtdcQrySafePriceRangeField_RiskLevel_get, _riskuserapi.CShfeFtdcQrySafePriceRangeField_RiskLevel_set)
    MaxLimitDay: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcQrySafePriceRangeField_MaxLimitDay_get, _riskuserapi.CShfeFtdcQrySafePriceRangeField_MaxLimitDay_set)

    def __eq__(self, ct: "CShfeFtdcQrySafePriceRangeField") -> "bool":
        return _riskuserapi.CShfeFtdcQrySafePriceRangeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQrySafePriceRangeField_swiginit(self, _riskuserapi.new_CShfeFtdcQrySafePriceRangeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQrySafePriceRangeField

# Register CShfeFtdcQrySafePriceRangeField in _riskuserapi:
_riskuserapi.CShfeFtdcQrySafePriceRangeField_swigregister(CShfeFtdcQrySafePriceRangeField)
class CShfeFtdcPriceVaryParamField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcPriceVaryParamField_InstrumentID_get, _riskuserapi.CShfeFtdcPriceVaryParamField_InstrumentID_set)
    Direction: "TShfeFtdcPriceVaryDirType" = property(_riskuserapi.CShfeFtdcPriceVaryParamField_Direction_get, _riskuserapi.CShfeFtdcPriceVaryParamField_Direction_set)
    Pecent: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcPriceVaryParamField_Pecent_get, _riskuserapi.CShfeFtdcPriceVaryParamField_Pecent_set)
    BasePriceType: "TShfeFtdcPriceTypeType" = property(_riskuserapi.CShfeFtdcPriceVaryParamField_BasePriceType_get, _riskuserapi.CShfeFtdcPriceVaryParamField_BasePriceType_set)
    BasePrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcPriceVaryParamField_BasePrice_get, _riskuserapi.CShfeFtdcPriceVaryParamField_BasePrice_set)

    def __eq__(self, ct: "CShfeFtdcPriceVaryParamField") -> "bool":
        return _riskuserapi.CShfeFtdcPriceVaryParamField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcPriceVaryParamField_swiginit(self, _riskuserapi.new_CShfeFtdcPriceVaryParamField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcPriceVaryParamField

# Register CShfeFtdcPriceVaryParamField in _riskuserapi:
_riskuserapi.CShfeFtdcPriceVaryParamField_swigregister(CShfeFtdcPriceVaryParamField)
class CShfeFtdcSafePriceRangeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSafePriceRangeField_BrokerID_get, _riskuserapi.CShfeFtdcSafePriceRangeField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSafePriceRangeField_InvestorID_get, _riskuserapi.CShfeFtdcSafePriceRangeField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSafePriceRangeField_InstrumentID_get, _riskuserapi.CShfeFtdcSafePriceRangeField_InstrumentID_set)
    BasePrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSafePriceRangeField_BasePrice_get, _riskuserapi.CShfeFtdcSafePriceRangeField_BasePrice_set)
    LimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSafePriceRangeField_LimitPrice_get, _riskuserapi.CShfeFtdcSafePriceRangeField_LimitPrice_set)
    VaryPecent: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSafePriceRangeField_VaryPecent_get, _riskuserapi.CShfeFtdcSafePriceRangeField_VaryPecent_set)
    LimitDayCnt: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSafePriceRangeField_LimitDayCnt_get, _riskuserapi.CShfeFtdcSafePriceRangeField_LimitDayCnt_set)
    VaryTickCnt: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSafePriceRangeField_VaryTickCnt_get, _riskuserapi.CShfeFtdcSafePriceRangeField_VaryTickCnt_set)
    LimitTickCnt: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSafePriceRangeField_LimitTickCnt_get, _riskuserapi.CShfeFtdcSafePriceRangeField_LimitTickCnt_set)
    HasLimit: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSafePriceRangeField_HasLimit_get, _riskuserapi.CShfeFtdcSafePriceRangeField_HasLimit_set)
    PecentPerLimit: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSafePriceRangeField_PecentPerLimit_get, _riskuserapi.CShfeFtdcSafePriceRangeField_PecentPerLimit_set)
    InLimitVaryPct: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSafePriceRangeField_InLimitVaryPct_get, _riskuserapi.CShfeFtdcSafePriceRangeField_InLimitVaryPct_set)
    OutLimitVaryPct: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSafePriceRangeField_OutLimitVaryPct_get, _riskuserapi.CShfeFtdcSafePriceRangeField_OutLimitVaryPct_set)
    LongVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSafePriceRangeField_LongVol_get, _riskuserapi.CShfeFtdcSafePriceRangeField_LongVol_set)
    ShortVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSafePriceRangeField_ShortVol_get, _riskuserapi.CShfeFtdcSafePriceRangeField_ShortVol_set)
    Direction: "TShfeFtdcPriceVaryDirType" = property(_riskuserapi.CShfeFtdcSafePriceRangeField_Direction_get, _riskuserapi.CShfeFtdcSafePriceRangeField_Direction_set)
    BadDir: "TShfeFtdcPriceVaryDirType" = property(_riskuserapi.CShfeFtdcSafePriceRangeField_BadDir_get, _riskuserapi.CShfeFtdcSafePriceRangeField_BadDir_set)

    def __eq__(self, ct: "CShfeFtdcSafePriceRangeField") -> "bool":
        return _riskuserapi.CShfeFtdcSafePriceRangeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSafePriceRangeField_swiginit(self, _riskuserapi.new_CShfeFtdcSafePriceRangeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSafePriceRangeField

# Register CShfeFtdcSafePriceRangeField in _riskuserapi:
_riskuserapi.CShfeFtdcSafePriceRangeField_swigregister(CShfeFtdcSafePriceRangeField)
class CShfeFtdcQryPriceVaryEffectField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryPriceVaryEffectField_BrokerID_get, _riskuserapi.CShfeFtdcQryPriceVaryEffectField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryPriceVaryEffectField_InvestorID_get, _riskuserapi.CShfeFtdcQryPriceVaryEffectField_InvestorID_set)
    RiskLevel: "TShfeFtdcNotifyClassType" = property(_riskuserapi.CShfeFtdcQryPriceVaryEffectField_RiskLevel_get, _riskuserapi.CShfeFtdcQryPriceVaryEffectField_RiskLevel_set)

    def __eq__(self, ct: "CShfeFtdcQryPriceVaryEffectField") -> "bool":
        return _riskuserapi.CShfeFtdcQryPriceVaryEffectField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryPriceVaryEffectField_swiginit(self, _riskuserapi.new_CShfeFtdcQryPriceVaryEffectField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryPriceVaryEffectField

# Register CShfeFtdcQryPriceVaryEffectField in _riskuserapi:
_riskuserapi.CShfeFtdcQryPriceVaryEffectField_swigregister(CShfeFtdcQryPriceVaryEffectField)
class CShfeFtdcBrokerInvestorField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcBrokerInvestorField_BrokerID_get, _riskuserapi.CShfeFtdcBrokerInvestorField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcBrokerInvestorField_InvestorID_get, _riskuserapi.CShfeFtdcBrokerInvestorField_InvestorID_set)

    def __eq__(self, ct: "CShfeFtdcBrokerInvestorField") -> "bool":
        return _riskuserapi.CShfeFtdcBrokerInvestorField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcBrokerInvestorField_swiginit(self, _riskuserapi.new_CShfeFtdcBrokerInvestorField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcBrokerInvestorField

# Register CShfeFtdcBrokerInvestorField in _riskuserapi:
_riskuserapi.CShfeFtdcBrokerInvestorField_swigregister(CShfeFtdcBrokerInvestorField)
class CShfeFtdcTradeParamField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcTradeParamField_BrokerID_get, _riskuserapi.CShfeFtdcTradeParamField_BrokerID_set)
    TradeParamID: "TShfeFtdcTradeParamIDType" = property(_riskuserapi.CShfeFtdcTradeParamField_TradeParamID_get, _riskuserapi.CShfeFtdcTradeParamField_TradeParamID_set)
    TradeParamValue: "TShfeFtdcSettlementParamValueType" = property(_riskuserapi.CShfeFtdcTradeParamField_TradeParamValue_get, _riskuserapi.CShfeFtdcTradeParamField_TradeParamValue_set)
    Memo: "TShfeFtdcMemoType" = property(_riskuserapi.CShfeFtdcTradeParamField_Memo_get, _riskuserapi.CShfeFtdcTradeParamField_Memo_set)

    def __eq__(self, ct: "CShfeFtdcTradeParamField") -> "bool":
        return _riskuserapi.CShfeFtdcTradeParamField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTradeParamField_swiginit(self, _riskuserapi.new_CShfeFtdcTradeParamField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTradeParamField

# Register CShfeFtdcTradeParamField in _riskuserapi:
_riskuserapi.CShfeFtdcTradeParamField_swigregister(CShfeFtdcTradeParamField)
class CShfeFtdcRiskParkedOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParkedOrderID: "TShfeFtdcParkedOrderIDType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_ParkedOrderID_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_ParkedOrderID_set)
    LocalID: "TShfeFtdcParkedOrderIDType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_LocalID_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_LocalID_set)
    UserType: "TShfeFtdcRiskUserTypeType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_UserType_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_UserType_set)
    Status: "TShfeFtdcRiskParkedOrderStatusType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_Status_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_Status_set)
    StatusMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_StatusMsg_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_StatusMsg_set)
    TriggerType: "TShfeFtdcOrderTriggerTypeType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_TriggerType_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_TriggerType_set)
    TradeSegment: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_TradeSegment_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_TradeSegment_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_ExchangeID_set)
    FCType: "TShfeFtdcForceCloseTypeType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_FCType_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_FCType_set)
    Time1: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_Time1_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_Time1_set)
    Millisec1: "TShfeFtdcMillisecType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_Millisec1_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_Millisec1_set)
    Time2: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_Time2_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_Time2_set)
    Millisec2: "TShfeFtdcMillisecType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_Millisec2_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_Millisec2_set)
    FCSceneId: "TShfeFtdcForceCloseSceneIdType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_FCSceneId_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_FCSceneId_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_BrokerID_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_InvestorID_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_InstrumentID_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_InstrumentID_set)
    OrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_OrderRef_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_OrderRef_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_UserID_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_UserID_set)
    OrderPriceType: "TShfeFtdcOrderPriceTypeType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_OrderPriceType_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_OrderPriceType_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_Direction_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_Direction_set)
    CombOffsetFlag: "TShfeFtdcCombOffsetFlagType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_CombOffsetFlag_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_CombOffsetFlag_set)
    CombHedgeFlag: "TShfeFtdcCombHedgeFlagType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_CombHedgeFlag_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_CombHedgeFlag_set)
    LimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_LimitPrice_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_LimitPrice_set)
    VolumeTotalOriginal: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_VolumeTotalOriginal_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_VolumeTotalOriginal_set)
    TimeCondition: "TShfeFtdcTimeConditionType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_TimeCondition_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_TimeCondition_set)
    GTDDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_GTDDate_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_GTDDate_set)
    VolumeCondition: "TShfeFtdcVolumeConditionType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_VolumeCondition_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_VolumeCondition_set)
    MinVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_MinVolume_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_MinVolume_set)
    ContingentCondition: "TShfeFtdcContingentConditionType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_ContingentCondition_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_ContingentCondition_set)
    StopPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_StopPrice_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_StopPrice_set)
    ForceCloseReason: "TShfeFtdcForceCloseReasonType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_ForceCloseReason_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_ForceCloseReason_set)
    IsAutoSuspend: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_IsAutoSuspend_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_IsAutoSuspend_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_BusinessUnit_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_BusinessUnit_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_RequestID_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_RequestID_set)
    UserForceClose: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_UserForceClose_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_UserForceClose_set)
    OrderSubmitStatus: "TShfeFtdcOrderSubmitStatusType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_OrderSubmitStatus_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_OrderSubmitStatus_set)
    OrderStatus: "TShfeFtdcOrderStatusType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_OrderStatus_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_OrderStatus_set)
    OrderStatusMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_OrderStatusMsg_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_OrderStatusMsg_set)
    ErrorID: "TShfeFtdcErrorIDType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_ErrorID_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_ErrorID_set)
    ErrorMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_ErrorMsg_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_ErrorMsg_set)
    ParkedTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_ParkedTime_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_ParkedTime_set)
    OriginalParkedVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_OriginalParkedVol_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_OriginalParkedVol_set)
    MaxCloseVol1: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_MaxCloseVol1_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_MaxCloseVol1_set)
    MaxCloseVol2: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_MaxCloseVol2_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_MaxCloseVol2_set)
    Call1: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_Call1_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_Call1_set)
    Call2: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_Call2_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_Call2_set)
    MoneyIO1: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_MoneyIO1_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_MoneyIO1_set)
    MoneyIO2: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_MoneyIO2_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_MoneyIO2_set)
    DeleteReason: "TShfeFtdcCommentType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_DeleteReason_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_DeleteReason_set)
    ForceCloseRelease: "TShfeFtdcForceCloseReleaseType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_ForceCloseRelease_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_ForceCloseRelease_set)
    IsSwapOrder: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_IsSwapOrder_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_IsSwapOrder_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_InvestUnitID_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_InvestUnitID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_AccountID_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_CurrencyID_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_CurrencyID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_ClientID_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_ClientID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_IPAddress_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_MacAddress_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_MacAddress_set)
    OrderMemo: "TShfeFtdcOrderMemoType" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_OrderMemo_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_OrderMemo_set)
    SessionReqSeq: "TShfeFtdcSequenceNo12Type" = property(_riskuserapi.CShfeFtdcRiskParkedOrderField_SessionReqSeq_get, _riskuserapi.CShfeFtdcRiskParkedOrderField_SessionReqSeq_set)

    def __eq__(self, ct: "CShfeFtdcRiskParkedOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskParkedOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskParkedOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskParkedOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskParkedOrderField

# Register CShfeFtdcRiskParkedOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskParkedOrderField_swigregister(CShfeFtdcRiskParkedOrderField)
class CShfeFtdcRemoveRiskParkedOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRemoveRiskParkedOrderField_BrokerID_get, _riskuserapi.CShfeFtdcRemoveRiskParkedOrderField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRemoveRiskParkedOrderField_UserID_get, _riskuserapi.CShfeFtdcRemoveRiskParkedOrderField_UserID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRemoveRiskParkedOrderField_InvestorID_get, _riskuserapi.CShfeFtdcRemoveRiskParkedOrderField_InvestorID_set)
    ParkedOrderID: "TShfeFtdcParkedOrderIDType" = property(_riskuserapi.CShfeFtdcRemoveRiskParkedOrderField_ParkedOrderID_get, _riskuserapi.CShfeFtdcRemoveRiskParkedOrderField_ParkedOrderID_set)

    def __eq__(self, ct: "CShfeFtdcRemoveRiskParkedOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcRemoveRiskParkedOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRemoveRiskParkedOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcRemoveRiskParkedOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRemoveRiskParkedOrderField

# Register CShfeFtdcRemoveRiskParkedOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcRemoveRiskParkedOrderField_swigregister(CShfeFtdcRemoveRiskParkedOrderField)
class CShfeFtdcSeqRiskParkedOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UniqSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_UniqSequenceNo_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_UniqSequenceNo_set)
    ParkedOrderID: "TShfeFtdcParkedOrderIDType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_ParkedOrderID_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_ParkedOrderID_set)
    LocalID: "TShfeFtdcParkedOrderIDType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_LocalID_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_LocalID_set)
    UserType: "TShfeFtdcRiskUserTypeType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_UserType_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_UserType_set)
    Status: "TShfeFtdcRiskParkedOrderStatusType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_Status_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_Status_set)
    StatusMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_StatusMsg_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_StatusMsg_set)
    TriggerType: "TShfeFtdcOrderTriggerTypeType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_TriggerType_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_TriggerType_set)
    TradeSegment: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_TradeSegment_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_TradeSegment_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_ExchangeID_set)
    FCType: "TShfeFtdcForceCloseTypeType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_FCType_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_FCType_set)
    Time1: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_Time1_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_Time1_set)
    Millisec1: "TShfeFtdcMillisecType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_Millisec1_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_Millisec1_set)
    Time2: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_Time2_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_Time2_set)
    Millisec2: "TShfeFtdcMillisecType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_Millisec2_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_Millisec2_set)
    FCSceneId: "TShfeFtdcForceCloseSceneIdType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_FCSceneId_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_FCSceneId_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_BrokerID_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_InvestorID_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_InstrumentID_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_InstrumentID_set)
    OrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_OrderRef_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_OrderRef_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_UserID_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_UserID_set)
    OrderPriceType: "TShfeFtdcOrderPriceTypeType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_OrderPriceType_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_OrderPriceType_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_Direction_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_Direction_set)
    CombOffsetFlag: "TShfeFtdcCombOffsetFlagType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_CombOffsetFlag_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_CombOffsetFlag_set)
    CombHedgeFlag: "TShfeFtdcCombHedgeFlagType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_CombHedgeFlag_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_CombHedgeFlag_set)
    LimitPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_LimitPrice_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_LimitPrice_set)
    VolumeTotalOriginal: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_VolumeTotalOriginal_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_VolumeTotalOriginal_set)
    TimeCondition: "TShfeFtdcTimeConditionType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_TimeCondition_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_TimeCondition_set)
    GTDDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_GTDDate_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_GTDDate_set)
    VolumeCondition: "TShfeFtdcVolumeConditionType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_VolumeCondition_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_VolumeCondition_set)
    MinVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_MinVolume_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_MinVolume_set)
    ContingentCondition: "TShfeFtdcContingentConditionType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_ContingentCondition_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_ContingentCondition_set)
    StopPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_StopPrice_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_StopPrice_set)
    ForceCloseReason: "TShfeFtdcForceCloseReasonType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_ForceCloseReason_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_ForceCloseReason_set)
    IsAutoSuspend: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_IsAutoSuspend_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_IsAutoSuspend_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_BusinessUnit_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_BusinessUnit_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_RequestID_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_RequestID_set)
    UserForceClose: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_UserForceClose_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_UserForceClose_set)
    OrderSubmitStatus: "TShfeFtdcOrderSubmitStatusType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_OrderSubmitStatus_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_OrderSubmitStatus_set)
    OrderStatus: "TShfeFtdcOrderStatusType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_OrderStatus_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_OrderStatus_set)
    OrderStatusMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_OrderStatusMsg_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_OrderStatusMsg_set)
    ErrorID: "TShfeFtdcErrorIDType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_ErrorID_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_ErrorID_set)
    ErrorMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_ErrorMsg_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_ErrorMsg_set)
    ParkedTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_ParkedTime_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_ParkedTime_set)
    OriginalParkedVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_OriginalParkedVol_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_OriginalParkedVol_set)
    MaxCloseVol1: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_MaxCloseVol1_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_MaxCloseVol1_set)
    MaxCloseVol2: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_MaxCloseVol2_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_MaxCloseVol2_set)
    Call1: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_Call1_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_Call1_set)
    Call2: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_Call2_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_Call2_set)
    MoneyIO1: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_MoneyIO1_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_MoneyIO1_set)
    MoneyIO2: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_MoneyIO2_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_MoneyIO2_set)
    DeleteReason: "TShfeFtdcCommentType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_DeleteReason_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_DeleteReason_set)
    ForceCloseRelease: "TShfeFtdcForceCloseReleaseType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_ForceCloseRelease_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_ForceCloseRelease_set)
    IsSwapOrder: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_IsSwapOrder_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_IsSwapOrder_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_InvestUnitID_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_InvestUnitID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_AccountID_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_CurrencyID_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_CurrencyID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_ClientID_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_ClientID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_IPAddress_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_MacAddress_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_MacAddress_set)
    OrderMemo: "TShfeFtdcOrderMemoType" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_OrderMemo_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_OrderMemo_set)
    SessionReqSeq: "TShfeFtdcSequenceNo12Type" = property(_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_SessionReqSeq_get, _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_SessionReqSeq_set)

    def __eq__(self, ct: "CShfeFtdcSeqRiskParkedOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcSeqRiskParkedOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSeqRiskParkedOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcSeqRiskParkedOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSeqRiskParkedOrderField

# Register CShfeFtdcSeqRiskParkedOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcSeqRiskParkedOrderField_swigregister(CShfeFtdcSeqRiskParkedOrderField)
class CShfeFtdcRiskInvestorInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskInvestorInfoField_BrokerID_get, _riskuserapi.CShfeFtdcRiskInvestorInfoField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRiskInvestorInfoField_InvestorID_get, _riskuserapi.CShfeFtdcRiskInvestorInfoField_InvestorID_set)
    Mobile: "TShfeFtdcTelephoneType" = property(_riskuserapi.CShfeFtdcRiskInvestorInfoField_Mobile_get, _riskuserapi.CShfeFtdcRiskInvestorInfoField_Mobile_set)
    EMail: "TShfeFtdcUOAEMailType" = property(_riskuserapi.CShfeFtdcRiskInvestorInfoField_EMail_get, _riskuserapi.CShfeFtdcRiskInvestorInfoField_EMail_set)
    IsEMail: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskInvestorInfoField_IsEMail_get, _riskuserapi.CShfeFtdcRiskInvestorInfoField_IsEMail_set)
    IsSMS: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskInvestorInfoField_IsSMS_get, _riskuserapi.CShfeFtdcRiskInvestorInfoField_IsSMS_set)
    InvestorType: "TShfeFtdcInvestorTypeType" = property(_riskuserapi.CShfeFtdcRiskInvestorInfoField_InvestorType_get, _riskuserapi.CShfeFtdcRiskInvestorInfoField_InvestorType_set)
    PhoneCountryCode: "TShfeFtdcUOACountryCodeType" = property(_riskuserapi.CShfeFtdcRiskInvestorInfoField_PhoneCountryCode_get, _riskuserapi.CShfeFtdcRiskInvestorInfoField_PhoneCountryCode_set)
    PhoneAreaCode: "TShfeFtdcAreaCodeType" = property(_riskuserapi.CShfeFtdcRiskInvestorInfoField_PhoneAreaCode_get, _riskuserapi.CShfeFtdcRiskInvestorInfoField_PhoneAreaCode_set)
    OpenPhoneCountryCode: "TShfeFtdcUOACountryCodeType" = property(_riskuserapi.CShfeFtdcRiskInvestorInfoField_OpenPhoneCountryCode_get, _riskuserapi.CShfeFtdcRiskInvestorInfoField_OpenPhoneCountryCode_set)
    OpenPhoneAreaCode: "TShfeFtdcAreaCodeType" = property(_riskuserapi.CShfeFtdcRiskInvestorInfoField_OpenPhoneAreaCode_get, _riskuserapi.CShfeFtdcRiskInvestorInfoField_OpenPhoneAreaCode_set)
    OrderPhoneCountryCode: "TShfeFtdcUOACountryCodeType" = property(_riskuserapi.CShfeFtdcRiskInvestorInfoField_OrderPhoneCountryCode_get, _riskuserapi.CShfeFtdcRiskInvestorInfoField_OrderPhoneCountryCode_set)
    OrderPhoneAreaCode: "TShfeFtdcAreaCodeType" = property(_riskuserapi.CShfeFtdcRiskInvestorInfoField_OrderPhoneAreaCode_get, _riskuserapi.CShfeFtdcRiskInvestorInfoField_OrderPhoneAreaCode_set)
    FundPhoneCountryCode: "TShfeFtdcUOACountryCodeType" = property(_riskuserapi.CShfeFtdcRiskInvestorInfoField_FundPhoneCountryCode_get, _riskuserapi.CShfeFtdcRiskInvestorInfoField_FundPhoneCountryCode_set)
    FundPhoneAreaCode: "TShfeFtdcAreaCodeType" = property(_riskuserapi.CShfeFtdcRiskInvestorInfoField_FundPhoneAreaCode_get, _riskuserapi.CShfeFtdcRiskInvestorInfoField_FundPhoneAreaCode_set)
    SettlePhoneCountryCode: "TShfeFtdcUOACountryCodeType" = property(_riskuserapi.CShfeFtdcRiskInvestorInfoField_SettlePhoneCountryCode_get, _riskuserapi.CShfeFtdcRiskInvestorInfoField_SettlePhoneCountryCode_set)
    SettlePhoneAreaCode: "TShfeFtdcAreaCodeType" = property(_riskuserapi.CShfeFtdcRiskInvestorInfoField_SettlePhoneAreaCode_get, _riskuserapi.CShfeFtdcRiskInvestorInfoField_SettlePhoneAreaCode_set)
    FreezeStatus: "TShfeFtdcFreezeStatusType" = property(_riskuserapi.CShfeFtdcRiskInvestorInfoField_FreezeStatus_get, _riskuserapi.CShfeFtdcRiskInvestorInfoField_FreezeStatus_set)

    def __eq__(self, ct: "CShfeFtdcRiskInvestorInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskInvestorInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskInvestorInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskInvestorInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskInvestorInfoField

# Register CShfeFtdcRiskInvestorInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskInvestorInfoField_swigregister(CShfeFtdcRiskInvestorInfoField)
class CShfeFtdcRiskNotifyAField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcRiskNotifyAField_SequenceNo_get, _riskuserapi.CShfeFtdcRiskNotifyAField_SequenceNo_set)
    EventDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRiskNotifyAField_EventDate_get, _riskuserapi.CShfeFtdcRiskNotifyAField_EventDate_set)
    EventTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRiskNotifyAField_EventTime_get, _riskuserapi.CShfeFtdcRiskNotifyAField_EventTime_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyAField_BrokerID_get, _riskuserapi.CShfeFtdcRiskNotifyAField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyAField_UserID_get, _riskuserapi.CShfeFtdcRiskNotifyAField_UserID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyAField_InvestorID_get, _riskuserapi.CShfeFtdcRiskNotifyAField_InvestorID_set)
    NotifyClass: "TShfeFtdcNotifyClassType" = property(_riskuserapi.CShfeFtdcRiskNotifyAField_NotifyClass_get, _riskuserapi.CShfeFtdcRiskNotifyAField_NotifyClass_set)
    NotifyMethod: "TShfeFtdcRiskNotifyMethodType" = property(_riskuserapi.CShfeFtdcRiskNotifyAField_NotifyMethod_get, _riskuserapi.CShfeFtdcRiskNotifyAField_NotifyMethod_set)
    NotifyStatus: "TShfeFtdcRiskNotifyStatusType" = property(_riskuserapi.CShfeFtdcRiskNotifyAField_NotifyStatus_get, _riskuserapi.CShfeFtdcRiskNotifyAField_NotifyStatus_set)
    Message: "TShfeFtdcRiskNofityInfoType" = property(_riskuserapi.CShfeFtdcRiskNotifyAField_Message_get, _riskuserapi.CShfeFtdcRiskNotifyAField_Message_set)
    Reserve: "TShfeFtdcCommentType" = property(_riskuserapi.CShfeFtdcRiskNotifyAField_Reserve_get, _riskuserapi.CShfeFtdcRiskNotifyAField_Reserve_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyAField_CurrencyID_get, _riskuserapi.CShfeFtdcRiskNotifyAField_CurrencyID_set)

    def __eq__(self, ct: "CShfeFtdcRiskNotifyAField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskNotifyAField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskNotifyAField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskNotifyAField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskNotifyAField

# Register CShfeFtdcRiskNotifyAField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskNotifyAField_swigregister(CShfeFtdcRiskNotifyAField)
class CShfeFtdcSeqRiskNotifyAField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UniqSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyAField_UniqSequenceNo_get, _riskuserapi.CShfeFtdcSeqRiskNotifyAField_UniqSequenceNo_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyAField_SequenceNo_get, _riskuserapi.CShfeFtdcSeqRiskNotifyAField_SequenceNo_set)
    EventDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyAField_EventDate_get, _riskuserapi.CShfeFtdcSeqRiskNotifyAField_EventDate_set)
    EventTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyAField_EventTime_get, _riskuserapi.CShfeFtdcSeqRiskNotifyAField_EventTime_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyAField_BrokerID_get, _riskuserapi.CShfeFtdcSeqRiskNotifyAField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyAField_UserID_get, _riskuserapi.CShfeFtdcSeqRiskNotifyAField_UserID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyAField_InvestorID_get, _riskuserapi.CShfeFtdcSeqRiskNotifyAField_InvestorID_set)
    NotifyClass: "TShfeFtdcNotifyClassType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyAField_NotifyClass_get, _riskuserapi.CShfeFtdcSeqRiskNotifyAField_NotifyClass_set)
    NotifyMethod: "TShfeFtdcRiskNotifyMethodType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyAField_NotifyMethod_get, _riskuserapi.CShfeFtdcSeqRiskNotifyAField_NotifyMethod_set)
    NotifyStatus: "TShfeFtdcRiskNotifyStatusType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyAField_NotifyStatus_get, _riskuserapi.CShfeFtdcSeqRiskNotifyAField_NotifyStatus_set)
    Message: "TShfeFtdcRiskNofityInfoType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyAField_Message_get, _riskuserapi.CShfeFtdcSeqRiskNotifyAField_Message_set)
    Reserve: "TShfeFtdcCommentType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyAField_Reserve_get, _riskuserapi.CShfeFtdcSeqRiskNotifyAField_Reserve_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyAField_CurrencyID_get, _riskuserapi.CShfeFtdcSeqRiskNotifyAField_CurrencyID_set)

    def __eq__(self, ct: "CShfeFtdcSeqRiskNotifyAField") -> "bool":
        return _riskuserapi.CShfeFtdcSeqRiskNotifyAField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSeqRiskNotifyAField_swiginit(self, _riskuserapi.new_CShfeFtdcSeqRiskNotifyAField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSeqRiskNotifyAField

# Register CShfeFtdcSeqRiskNotifyAField in _riskuserapi:
_riskuserapi.CShfeFtdcSeqRiskNotifyAField_swigregister(CShfeFtdcSeqRiskNotifyAField)
class CShfeFtdcSeqDepositField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UniqSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSeqDepositField_UniqSequenceNo_get, _riskuserapi.CShfeFtdcSeqDepositField_UniqSequenceNo_set)
    Type: "TShfeFtdcFundIOTypeType" = property(_riskuserapi.CShfeFtdcSeqDepositField_Type_get, _riskuserapi.CShfeFtdcSeqDepositField_Type_set)
    Flag: "TShfeFtdcAvailabilityFlagType" = property(_riskuserapi.CShfeFtdcSeqDepositField_Flag_get, _riskuserapi.CShfeFtdcSeqDepositField_Flag_set)
    Direction: "TShfeFtdcFundDirectionType" = property(_riskuserapi.CShfeFtdcSeqDepositField_Direction_get, _riskuserapi.CShfeFtdcSeqDepositField_Direction_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSeqDepositField_TradingDay_get, _riskuserapi.CShfeFtdcSeqDepositField_TradingDay_set)
    SequenceNo: "TShfeFtdcDepositSeqNoType" = property(_riskuserapi.CShfeFtdcSeqDepositField_SequenceNo_get, _riskuserapi.CShfeFtdcSeqDepositField_SequenceNo_set)
    Time: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcSeqDepositField_Time_get, _riskuserapi.CShfeFtdcSeqDepositField_Time_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSeqDepositField_BrokerID_get, _riskuserapi.CShfeFtdcSeqDepositField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSeqDepositField_InvestorID_get, _riskuserapi.CShfeFtdcSeqDepositField_InvestorID_set)
    Amount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqDepositField_Amount_get, _riskuserapi.CShfeFtdcSeqDepositField_Amount_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcSeqDepositField_CurrencyID_get, _riskuserapi.CShfeFtdcSeqDepositField_CurrencyID_set)
    BankName: "TShfeFtdcBankNameType" = property(_riskuserapi.CShfeFtdcSeqDepositField_BankName_get, _riskuserapi.CShfeFtdcSeqDepositField_BankName_set)

    def __eq__(self, ct: "CShfeFtdcSeqDepositField") -> "bool":
        return _riskuserapi.CShfeFtdcSeqDepositField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSeqDepositField_swiginit(self, _riskuserapi.new_CShfeFtdcSeqDepositField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSeqDepositField

# Register CShfeFtdcSeqDepositField in _riskuserapi:
_riskuserapi.CShfeFtdcSeqDepositField_swigregister(CShfeFtdcSeqDepositField)
class CShfeFtdcSeqTradingCodeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UniqSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSeqTradingCodeField_UniqSequenceNo_get, _riskuserapi.CShfeFtdcSeqTradingCodeField_UniqSequenceNo_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSeqTradingCodeField_InvestorID_get, _riskuserapi.CShfeFtdcSeqTradingCodeField_InvestorID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSeqTradingCodeField_BrokerID_get, _riskuserapi.CShfeFtdcSeqTradingCodeField_BrokerID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSeqTradingCodeField_ExchangeID_get, _riskuserapi.CShfeFtdcSeqTradingCodeField_ExchangeID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcSeqTradingCodeField_ClientID_get, _riskuserapi.CShfeFtdcSeqTradingCodeField_ClientID_set)
    IsActive: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSeqTradingCodeField_IsActive_get, _riskuserapi.CShfeFtdcSeqTradingCodeField_IsActive_set)
    Action: "TShfeFtdcActionFlagType" = property(_riskuserapi.CShfeFtdcSeqTradingCodeField_Action_get, _riskuserapi.CShfeFtdcSeqTradingCodeField_Action_set)
    ClientIDType: "TShfeFtdcClientIDTypeType" = property(_riskuserapi.CShfeFtdcSeqTradingCodeField_ClientIDType_get, _riskuserapi.CShfeFtdcSeqTradingCodeField_ClientIDType_set)

    def __eq__(self, ct: "CShfeFtdcSeqTradingCodeField") -> "bool":
        return _riskuserapi.CShfeFtdcSeqTradingCodeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSeqTradingCodeField_swiginit(self, _riskuserapi.new_CShfeFtdcSeqTradingCodeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSeqTradingCodeField

# Register CShfeFtdcSeqTradingCodeField in _riskuserapi:
_riskuserapi.CShfeFtdcSeqTradingCodeField_swigregister(CShfeFtdcSeqTradingCodeField)
class CShfeFtdcRiskUserEventField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcRiskUserEventField_SequenceNo_get, _riskuserapi.CShfeFtdcRiskUserEventField_SequenceNo_set)
    EventDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRiskUserEventField_EventDate_get, _riskuserapi.CShfeFtdcRiskUserEventField_EventDate_set)
    EventTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRiskUserEventField_EventTime_get, _riskuserapi.CShfeFtdcRiskUserEventField_EventTime_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskUserEventField_BrokerID_get, _riskuserapi.CShfeFtdcRiskUserEventField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRiskUserEventField_UserID_get, _riskuserapi.CShfeFtdcRiskUserEventField_UserID_set)
    EventType: "TShfeFtdcRiskUserEventType" = property(_riskuserapi.CShfeFtdcRiskUserEventField_EventType_get, _riskuserapi.CShfeFtdcRiskUserEventField_EventType_set)
    EventInfo: "TShfeFtdcUserEventInfoType" = property(_riskuserapi.CShfeFtdcRiskUserEventField_EventInfo_get, _riskuserapi.CShfeFtdcRiskUserEventField_EventInfo_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRiskUserEventField_TradingDay_get, _riskuserapi.CShfeFtdcRiskUserEventField_TradingDay_set)

    def __eq__(self, ct: "CShfeFtdcRiskUserEventField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskUserEventField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskUserEventField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskUserEventField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskUserEventField

# Register CShfeFtdcRiskUserEventField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskUserEventField_swigregister(CShfeFtdcRiskUserEventField)
class CShfeFtdcRiskNtfSequenceField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcRiskNtfSequenceField_SequenceNo_get, _riskuserapi.CShfeFtdcRiskNtfSequenceField_SequenceNo_set)
    DataType: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcRiskNtfSequenceField_DataType_get, _riskuserapi.CShfeFtdcRiskNtfSequenceField_DataType_set)

    def __eq__(self, ct: "CShfeFtdcRiskNtfSequenceField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskNtfSequenceField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskNtfSequenceField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskNtfSequenceField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskNtfSequenceField

# Register CShfeFtdcRiskNtfSequenceField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskNtfSequenceField_swigregister(CShfeFtdcRiskNtfSequenceField)
class CShfeFtdcRiskNotifyPatternAField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyPatternAField_BrokerID_get, _riskuserapi.CShfeFtdcRiskNotifyPatternAField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyPatternAField_UserID_get, _riskuserapi.CShfeFtdcRiskNotifyPatternAField_UserID_set)
    NotifyClass: "TShfeFtdcNotifyClassType" = property(_riskuserapi.CShfeFtdcRiskNotifyPatternAField_NotifyClass_get, _riskuserapi.CShfeFtdcRiskNotifyPatternAField_NotifyClass_set)
    NotifyMethod: "TShfeFtdcRiskNotifyMethodType" = property(_riskuserapi.CShfeFtdcRiskNotifyPatternAField_NotifyMethod_get, _riskuserapi.CShfeFtdcRiskNotifyPatternAField_NotifyMethod_set)
    IsActive: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskNotifyPatternAField_IsActive_get, _riskuserapi.CShfeFtdcRiskNotifyPatternAField_IsActive_set)
    Pattern: "TShfeFtdcRiskNofityInfoType" = property(_riskuserapi.CShfeFtdcRiskNotifyPatternAField_Pattern_get, _riskuserapi.CShfeFtdcRiskNotifyPatternAField_Pattern_set)
    Reserve: "TShfeFtdcCommentType" = property(_riskuserapi.CShfeFtdcRiskNotifyPatternAField_Reserve_get, _riskuserapi.CShfeFtdcRiskNotifyPatternAField_Reserve_set)

    def __eq__(self, ct: "CShfeFtdcRiskNotifyPatternAField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskNotifyPatternAField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskNotifyPatternAField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskNotifyPatternAField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskNotifyPatternAField

# Register CShfeFtdcRiskNotifyPatternAField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskNotifyPatternAField_swigregister(CShfeFtdcRiskNotifyPatternAField)
class CShfeFtdcProductLimitsField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcProductLimitsField_ProductID_get, _riskuserapi.CShfeFtdcProductLimitsField_ProductID_set)
    Limit1: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcProductLimitsField_Limit1_get, _riskuserapi.CShfeFtdcProductLimitsField_Limit1_set)
    Limit2: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcProductLimitsField_Limit2_get, _riskuserapi.CShfeFtdcProductLimitsField_Limit2_set)
    Limit3: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcProductLimitsField_Limit3_get, _riskuserapi.CShfeFtdcProductLimitsField_Limit3_set)
    Limit4: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcProductLimitsField_Limit4_get, _riskuserapi.CShfeFtdcProductLimitsField_Limit4_set)
    MaxMarginRate1: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcProductLimitsField_MaxMarginRate1_get, _riskuserapi.CShfeFtdcProductLimitsField_MaxMarginRate1_set)
    Price: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcProductLimitsField_Price_get, _riskuserapi.CShfeFtdcProductLimitsField_Price_set)
    PriceType: "TShfeFtdcPriceTypeType" = property(_riskuserapi.CShfeFtdcProductLimitsField_PriceType_get, _riskuserapi.CShfeFtdcProductLimitsField_PriceType_set)

    def __eq__(self, ct: "CShfeFtdcProductLimitsField") -> "bool":
        return _riskuserapi.CShfeFtdcProductLimitsField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcProductLimitsField_swiginit(self, _riskuserapi.new_CShfeFtdcProductLimitsField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcProductLimitsField

# Register CShfeFtdcProductLimitsField in _riskuserapi:
_riskuserapi.CShfeFtdcProductLimitsField_swigregister(CShfeFtdcProductLimitsField)
class CShfeFtdcPredictRiskAccountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcPredictRiskAccountField_BrokerID_get, _riskuserapi.CShfeFtdcPredictRiskAccountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcPredictRiskAccountField_InvestorID_get, _riskuserapi.CShfeFtdcPredictRiskAccountField_InvestorID_set)
    Balance0: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPredictRiskAccountField_Balance0_get, _riskuserapi.CShfeFtdcPredictRiskAccountField_Balance0_set)
    Lose1: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPredictRiskAccountField_Lose1_get, _riskuserapi.CShfeFtdcPredictRiskAccountField_Lose1_set)
    Balance1: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPredictRiskAccountField_Balance1_get, _riskuserapi.CShfeFtdcPredictRiskAccountField_Balance1_set)
    Lose2: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPredictRiskAccountField_Lose2_get, _riskuserapi.CShfeFtdcPredictRiskAccountField_Lose2_set)
    Balance2: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPredictRiskAccountField_Balance2_get, _riskuserapi.CShfeFtdcPredictRiskAccountField_Balance2_set)
    Lose3: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPredictRiskAccountField_Lose3_get, _riskuserapi.CShfeFtdcPredictRiskAccountField_Lose3_set)
    Balance3: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPredictRiskAccountField_Balance3_get, _riskuserapi.CShfeFtdcPredictRiskAccountField_Balance3_set)
    Lose4: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPredictRiskAccountField_Lose4_get, _riskuserapi.CShfeFtdcPredictRiskAccountField_Lose4_set)
    Balance4: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPredictRiskAccountField_Balance4_get, _riskuserapi.CShfeFtdcPredictRiskAccountField_Balance4_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcPredictRiskAccountField_CurrencyID_get, _riskuserapi.CShfeFtdcPredictRiskAccountField_CurrencyID_set)
    FundMortgageIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPredictRiskAccountField_FundMortgageIn_get, _riskuserapi.CShfeFtdcPredictRiskAccountField_FundMortgageIn_set)

    def __eq__(self, ct: "CShfeFtdcPredictRiskAccountField") -> "bool":
        return _riskuserapi.CShfeFtdcPredictRiskAccountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcPredictRiskAccountField_swiginit(self, _riskuserapi.new_CShfeFtdcPredictRiskAccountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcPredictRiskAccountField

# Register CShfeFtdcPredictRiskAccountField in _riskuserapi:
_riskuserapi.CShfeFtdcPredictRiskAccountField_swigregister(CShfeFtdcPredictRiskAccountField)
class CShfeFtdcPredictRiskPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_BrokerID_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_InvestorID_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_InstrumentID_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_InstrumentID_set)
    LongVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_LongVol_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_LongVol_set)
    ShortVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_ShortVol_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_ShortVol_set)
    NetVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_NetVol_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_NetVol_set)
    Price0: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_Price0_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_Price0_set)
    Price1: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_Price1_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_Price1_set)
    Limit1: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_Limit1_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_Limit1_set)
    Limit2: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_Limit2_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_Limit2_set)
    Limit3: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_Limit3_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_Limit3_set)
    Limit4: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_Limit4_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_Limit4_set)
    Multiple: "TShfeFtdcVolumeMultipleType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_Multiple_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_Multiple_set)
    Lose1: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_Lose1_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_Lose1_set)
    Lose2: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_Lose2_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_Lose2_set)
    Lose3: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_Lose3_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_Lose3_set)
    Lose4: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_Lose4_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_Lose4_set)
    LeftVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_LeftVol_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_LeftVol_set)
    ShouldClose: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_ShouldClose_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_ShouldClose_set)
    CanClose: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_CanClose_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_CanClose_set)
    CurrMarginRate: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_CurrMarginRate_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_CurrMarginRate_set)
    MarginRate1: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_MarginRate1_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_MarginRate1_set)
    NetMargin1: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_NetMargin1_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_NetMargin1_set)
    Available1: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_Available1_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_Available1_set)
    Margin1PerVol: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPredictRiskPositionField_Margin1PerVol_get, _riskuserapi.CShfeFtdcPredictRiskPositionField_Margin1PerVol_set)

    def __eq__(self, ct: "CShfeFtdcPredictRiskPositionField") -> "bool":
        return _riskuserapi.CShfeFtdcPredictRiskPositionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcPredictRiskPositionField_swiginit(self, _riskuserapi.new_CShfeFtdcPredictRiskPositionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcPredictRiskPositionField

# Register CShfeFtdcPredictRiskPositionField in _riskuserapi:
_riskuserapi.CShfeFtdcPredictRiskPositionField_swigregister(CShfeFtdcPredictRiskPositionField)
class CShfeFtdcPredictRiskParamField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    D1: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPredictRiskParamField_D1_get, _riskuserapi.CShfeFtdcPredictRiskParamField_D1_set)
    IsFilter: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcPredictRiskParamField_IsFilter_get, _riskuserapi.CShfeFtdcPredictRiskParamField_IsFilter_set)

    def __eq__(self, ct: "CShfeFtdcPredictRiskParamField") -> "bool":
        return _riskuserapi.CShfeFtdcPredictRiskParamField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcPredictRiskParamField_swiginit(self, _riskuserapi.new_CShfeFtdcPredictRiskParamField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcPredictRiskParamField

# Register CShfeFtdcPredictRiskParamField in _riskuserapi:
_riskuserapi.CShfeFtdcPredictRiskParamField_swigregister(CShfeFtdcPredictRiskParamField)
class CShfeFtdcRiskSyncInvestorField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Action: "TShfeFtdcActionFlagType" = property(_riskuserapi.CShfeFtdcRiskSyncInvestorField_Action_get, _riskuserapi.CShfeFtdcRiskSyncInvestorField_Action_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRiskSyncInvestorField_InvestorID_get, _riskuserapi.CShfeFtdcRiskSyncInvestorField_InvestorID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskSyncInvestorField_BrokerID_get, _riskuserapi.CShfeFtdcRiskSyncInvestorField_BrokerID_set)
    InvestorGroupID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRiskSyncInvestorField_InvestorGroupID_get, _riskuserapi.CShfeFtdcRiskSyncInvestorField_InvestorGroupID_set)
    InvestorName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcRiskSyncInvestorField_InvestorName_get, _riskuserapi.CShfeFtdcRiskSyncInvestorField_InvestorName_set)
    IdentifiedCardType: "TShfeFtdcIdCardTypeType" = property(_riskuserapi.CShfeFtdcRiskSyncInvestorField_IdentifiedCardType_get, _riskuserapi.CShfeFtdcRiskSyncInvestorField_IdentifiedCardType_set)
    IdentifiedCardNo: "TShfeFtdcIdentifiedCardNoType" = property(_riskuserapi.CShfeFtdcRiskSyncInvestorField_IdentifiedCardNo_get, _riskuserapi.CShfeFtdcRiskSyncInvestorField_IdentifiedCardNo_set)
    IsActive: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcRiskSyncInvestorField_IsActive_get, _riskuserapi.CShfeFtdcRiskSyncInvestorField_IsActive_set)
    Telephone: "TShfeFtdcTelephoneType" = property(_riskuserapi.CShfeFtdcRiskSyncInvestorField_Telephone_get, _riskuserapi.CShfeFtdcRiskSyncInvestorField_Telephone_set)
    Address: "TShfeFtdcAddressType" = property(_riskuserapi.CShfeFtdcRiskSyncInvestorField_Address_get, _riskuserapi.CShfeFtdcRiskSyncInvestorField_Address_set)
    OpenDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRiskSyncInvestorField_OpenDate_get, _riskuserapi.CShfeFtdcRiskSyncInvestorField_OpenDate_set)
    Mobile: "TShfeFtdcMobileType" = property(_riskuserapi.CShfeFtdcRiskSyncInvestorField_Mobile_get, _riskuserapi.CShfeFtdcRiskSyncInvestorField_Mobile_set)

    def __eq__(self, ct: "CShfeFtdcRiskSyncInvestorField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskSyncInvestorField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskSyncInvestorField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskSyncInvestorField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskSyncInvestorField

# Register CShfeFtdcRiskSyncInvestorField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskSyncInvestorField_swigregister(CShfeFtdcRiskSyncInvestorField)
class CShfeFtdcInstrumentPriceField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInstrumentPriceField_InstrumentID_get, _riskuserapi.CShfeFtdcInstrumentPriceField_InstrumentID_set)
    PriceType: "TShfeFtdcPriceTypeType" = property(_riskuserapi.CShfeFtdcInstrumentPriceField_PriceType_get, _riskuserapi.CShfeFtdcInstrumentPriceField_PriceType_set)
    Price: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcInstrumentPriceField_Price_get, _riskuserapi.CShfeFtdcInstrumentPriceField_Price_set)

    def __eq__(self, ct: "CShfeFtdcInstrumentPriceField") -> "bool":
        return _riskuserapi.CShfeFtdcInstrumentPriceField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInstrumentPriceField_swiginit(self, _riskuserapi.new_CShfeFtdcInstrumentPriceField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInstrumentPriceField

# Register CShfeFtdcInstrumentPriceField in _riskuserapi:
_riskuserapi.CShfeFtdcInstrumentPriceField_swigregister(CShfeFtdcInstrumentPriceField)
class CShfeFtdcInvestorHashField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    MD5: "TShfeFtdcFullMD5Type" = property(_riskuserapi.CShfeFtdcInvestorHashField_MD5_get, _riskuserapi.CShfeFtdcInvestorHashField_MD5_set)
    InvestorIDBeg: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorHashField_InvestorIDBeg_get, _riskuserapi.CShfeFtdcInvestorHashField_InvestorIDBeg_set)
    InvestorIDEnd: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorHashField_InvestorIDEnd_get, _riskuserapi.CShfeFtdcInvestorHashField_InvestorIDEnd_set)

    def __eq__(self, ct: "CShfeFtdcInvestorHashField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorHashField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorHashField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorHashField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorHashField

# Register CShfeFtdcInvestorHashField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorHashField_swigregister(CShfeFtdcInvestorHashField)
class CShfeFtdcInvestorIDRangeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorIDBeg: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorIDRangeField_InvestorIDBeg_get, _riskuserapi.CShfeFtdcInvestorIDRangeField_InvestorIDBeg_set)
    InvestorIDEnd: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorIDRangeField_InvestorIDEnd_get, _riskuserapi.CShfeFtdcInvestorIDRangeField_InvestorIDEnd_set)

    def __eq__(self, ct: "CShfeFtdcInvestorIDRangeField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorIDRangeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorIDRangeField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorIDRangeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorIDRangeField

# Register CShfeFtdcInvestorIDRangeField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorIDRangeField_swigregister(CShfeFtdcInvestorIDRangeField)
class CShfeFtdcCommPhaseSequenceField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CommPhaseNo: "TShfeFtdcCommPhaseNoType" = property(_riskuserapi.CShfeFtdcCommPhaseSequenceField_CommPhaseNo_get, _riskuserapi.CShfeFtdcCommPhaseSequenceField_CommPhaseNo_set)
    SequenceSeries: "TShfeFtdcSequenceSeriesType" = property(_riskuserapi.CShfeFtdcCommPhaseSequenceField_SequenceSeries_get, _riskuserapi.CShfeFtdcCommPhaseSequenceField_SequenceSeries_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcCommPhaseSequenceField_SequenceNo_get, _riskuserapi.CShfeFtdcCommPhaseSequenceField_SequenceNo_set)

    def __eq__(self, ct: "CShfeFtdcCommPhaseSequenceField") -> "bool":
        return _riskuserapi.CShfeFtdcCommPhaseSequenceField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcCommPhaseSequenceField_swiginit(self, _riskuserapi.new_CShfeFtdcCommPhaseSequenceField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcCommPhaseSequenceField

# Register CShfeFtdcCommPhaseSequenceField in _riskuserapi:
_riskuserapi.CShfeFtdcCommPhaseSequenceField_swigregister(CShfeFtdcCommPhaseSequenceField)
class CShfeFtdcRiskUserFunctionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskUserFunctionField_BrokerID_get, _riskuserapi.CShfeFtdcRiskUserFunctionField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRiskUserFunctionField_UserID_get, _riskuserapi.CShfeFtdcRiskUserFunctionField_UserID_set)
    Function: "TShfeFtdcFunctionIDType" = property(_riskuserapi.CShfeFtdcRiskUserFunctionField_Function_get, _riskuserapi.CShfeFtdcRiskUserFunctionField_Function_set)

    def __eq__(self, ct: "CShfeFtdcRiskUserFunctionField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskUserFunctionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskUserFunctionField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskUserFunctionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskUserFunctionField

# Register CShfeFtdcRiskUserFunctionField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskUserFunctionField_swigregister(CShfeFtdcRiskUserFunctionField)
class CShfeFtdcLinkStatusField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    LinkStatus: "TShfeFtdcLinkStatusType" = property(_riskuserapi.CShfeFtdcLinkStatusField_LinkStatus_get, _riskuserapi.CShfeFtdcLinkStatusField_LinkStatus_set)

    def __eq__(self, ct: "CShfeFtdcLinkStatusField") -> "bool":
        return _riskuserapi.CShfeFtdcLinkStatusField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcLinkStatusField_swiginit(self, _riskuserapi.new_CShfeFtdcLinkStatusField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcLinkStatusField

# Register CShfeFtdcLinkStatusField in _riskuserapi:
_riskuserapi.CShfeFtdcLinkStatusField_swigregister(CShfeFtdcLinkStatusField)
class CShfeFtdcRiskSyncAccountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_BrokerID_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_InvestorID_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_InvestorID_set)
    Withdraw: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_Withdraw_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_Withdraw_set)
    CurrMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_CurrMargin_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_CurrMargin_set)
    Commission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_Commission_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_Commission_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_CloseProfit_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_CloseProfit_set)
    PositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_PositionProfit_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_PositionProfit_set)
    Balance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_Balance_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_Balance_set)
    Available: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_Available_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_Available_set)
    Mortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_Mortgage_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_Mortgage_set)
    ExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_ExchangeMargin_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_ExchangeMargin_set)
    WithdrawQuota: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_WithdrawQuota_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_WithdrawQuota_set)
    Credit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_Credit_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_Credit_set)
    FrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_FrozenMargin_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_FrozenMargin_set)
    FrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_FrozenCommission_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_FrozenCommission_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_CurrencyID_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_CurrencyID_set)
    Deposit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_Deposit_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_Deposit_set)
    TradingPositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_TradingPositionProfit_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_TradingPositionProfit_set)
    FundMortgageIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_FundMortgageIn_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_FundMortgageIn_set)
    FundMortgageOut: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_FundMortgageOut_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_FundMortgageOut_set)
    FundMortgageAvailable: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_FundMortgageAvailable_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_FundMortgageAvailable_set)
    MortgageableFund: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_MortgageableFund_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_MortgageableFund_set)
    SpecProductExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_SpecProductExchangeMargin_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_SpecProductExchangeMargin_set)
    SpecProductFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_SpecProductFrozenMargin_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_SpecProductFrozenMargin_set)
    SpecProductMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_SpecProductMargin_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_SpecProductMargin_set)
    SpecProductCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_SpecProductCommission_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_SpecProductCommission_set)
    SpecProductFrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_SpecProductFrozenCommission_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_SpecProductFrozenCommission_set)
    SpecProductPositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_SpecProductPositionProfit_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_SpecProductPositionProfit_set)
    SpecProductCloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_SpecProductCloseProfit_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_SpecProductCloseProfit_set)
    SpecProductPositionProfitByAlg: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_SpecProductPositionProfitByAlg_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_SpecProductPositionProfitByAlg_set)
    FrozenMarginOnMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_FrozenMarginOnMortgage_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_FrozenMarginOnMortgage_set)
    MarginOnMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_MarginOnMortgage_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_MarginOnMortgage_set)
    ExchMarginOnMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_ExchMarginOnMortgage_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_ExchMarginOnMortgage_set)
    FrozenCommissionOnMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_FrozenCommissionOnMortgage_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_FrozenCommissionOnMortgage_set)
    PositionProfitOnMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_PositionProfitOnMortgage_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_PositionProfitOnMortgage_set)
    CommissionOnMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_CommissionOnMortgage_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_CommissionOnMortgage_set)
    CloseProfitOnMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_CloseProfitOnMortgage_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_CloseProfitOnMortgage_set)
    OptionCloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_OptionCloseProfit_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_OptionCloseProfit_set)
    OptionValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_OptionValue_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_OptionValue_set)
    FrozenCash: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_FrozenCash_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_FrozenCash_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_CashIn_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_CashIn_set)
    MaintCurrMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_MaintCurrMargin_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_MaintCurrMargin_set)
    MaintExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_MaintExchangeMargin_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_MaintExchangeMargin_set)
    FixedMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_FixedMargin_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_FixedMargin_set)
    ExchFixedMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_ExchFixedMargin_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_ExchFixedMargin_set)
    FrozenSwap: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_FrozenSwap_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_FrozenSwap_set)
    RemainSwap: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_RemainSwap_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_RemainSwap_set)
    NCombMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskSyncAccountField_NCombMargin_get, _riskuserapi.CShfeFtdcRiskSyncAccountField_NCombMargin_set)

    def __eq__(self, ct: "CShfeFtdcRiskSyncAccountField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskSyncAccountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskSyncAccountField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskSyncAccountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskSyncAccountField

# Register CShfeFtdcRiskSyncAccountField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskSyncAccountField_swigregister(CShfeFtdcRiskSyncAccountField)
class CShfeFtdcSeqPreRiskAccountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UniqSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_UniqSequenceNo_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_UniqSequenceNo_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_BrokerID_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_InvestorID_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_InvestorID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_AccountID_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_AccountID_set)
    PreMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreMortgage_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreMortgage_set)
    PreCredit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreCredit_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreCredit_set)
    PreDeposit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreDeposit_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreDeposit_set)
    PreBalance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreBalance_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreBalance_set)
    PreMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreMargin_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreMargin_set)
    Reserve: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_Reserve_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_Reserve_set)
    PreExchMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreExchMargin_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreExchMargin_set)
    ForceCloseStat: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_ForceCloseStat_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_ForceCloseStat_set)
    DeliveryMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_DeliveryMargin_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_DeliveryMargin_set)
    ExchangeDeliveryMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_ExchangeDeliveryMargin_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_ExchangeDeliveryMargin_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_CurrencyID_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_CurrencyID_set)
    PreSpecProductMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreSpecProductMargin_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreSpecProductMargin_set)
    PreSpecProductExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreSpecProductExchangeMargin_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreSpecProductExchangeMargin_set)
    PreMarginOnMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreMarginOnMortgage_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreMarginOnMortgage_set)
    PreExchMarginOnMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreExchMarginOnMortgage_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreExchMarginOnMortgage_set)
    PreFundMortgageIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreFundMortgageIn_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreFundMortgageIn_set)
    PreFundMortgageOut: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreFundMortgageOut_get, _riskuserapi.CShfeFtdcSeqPreRiskAccountField_PreFundMortgageOut_set)

    def __eq__(self, ct: "CShfeFtdcSeqPreRiskAccountField") -> "bool":
        return _riskuserapi.CShfeFtdcSeqPreRiskAccountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSeqPreRiskAccountField_swiginit(self, _riskuserapi.new_CShfeFtdcSeqPreRiskAccountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSeqPreRiskAccountField

# Register CShfeFtdcSeqPreRiskAccountField in _riskuserapi:
_riskuserapi.CShfeFtdcSeqPreRiskAccountField_swigregister(CShfeFtdcSeqPreRiskAccountField)
class CShfeFtdcRspLocalFrontLoginField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CommPhaseNo: "TShfeFtdcCommPhaseNoType" = property(_riskuserapi.CShfeFtdcRspLocalFrontLoginField_CommPhaseNo_get, _riskuserapi.CShfeFtdcRspLocalFrontLoginField_CommPhaseNo_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRspLocalFrontLoginField_BrokerID_get, _riskuserapi.CShfeFtdcRspLocalFrontLoginField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRspLocalFrontLoginField_UserID_get, _riskuserapi.CShfeFtdcRspLocalFrontLoginField_UserID_set)
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcRspLocalFrontLoginField_FrontID_get, _riskuserapi.CShfeFtdcRspLocalFrontLoginField_FrontID_set)
    FrontSessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcRspLocalFrontLoginField_FrontSessionID_get, _riskuserapi.CShfeFtdcRspLocalFrontLoginField_FrontSessionID_set)

    def __eq__(self, ct: "CShfeFtdcRspLocalFrontLoginField") -> "bool":
        return _riskuserapi.CShfeFtdcRspLocalFrontLoginField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRspLocalFrontLoginField_swiginit(self, _riskuserapi.new_CShfeFtdcRspLocalFrontLoginField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRspLocalFrontLoginField

# Register CShfeFtdcRspLocalFrontLoginField in _riskuserapi:
_riskuserapi.CShfeFtdcRspLocalFrontLoginField_swigregister(CShfeFtdcRspLocalFrontLoginField)
class CShfeFtdcNoticeTokenField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Token: "TShfeFtdcExchangeNameType" = property(_riskuserapi.CShfeFtdcNoticeTokenField_Token_get, _riskuserapi.CShfeFtdcNoticeTokenField_Token_set)
    Description: "TShfeFtdcBrokerNameType" = property(_riskuserapi.CShfeFtdcNoticeTokenField_Description_get, _riskuserapi.CShfeFtdcNoticeTokenField_Description_set)

    def __eq__(self, ct: "CShfeFtdcNoticeTokenField") -> "bool":
        return _riskuserapi.CShfeFtdcNoticeTokenField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcNoticeTokenField_swiginit(self, _riskuserapi.new_CShfeFtdcNoticeTokenField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcNoticeTokenField

# Register CShfeFtdcNoticeTokenField in _riskuserapi:
_riskuserapi.CShfeFtdcNoticeTokenField_swigregister(CShfeFtdcNoticeTokenField)
class CShfeFtdcNoticePatternField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcNoticePatternField_BrokerID_get, _riskuserapi.CShfeFtdcNoticePatternField_BrokerID_set)
    BizType: "TShfeFtdcParamNameType" = property(_riskuserapi.CShfeFtdcNoticePatternField_BizType_get, _riskuserapi.CShfeFtdcNoticePatternField_BizType_set)
    Method: "TShfeFtdcRiskNotifyMethodType" = property(_riskuserapi.CShfeFtdcNoticePatternField_Method_get, _riskuserapi.CShfeFtdcNoticePatternField_Method_set)
    BizName: "TShfeFtdcParamNameType" = property(_riskuserapi.CShfeFtdcNoticePatternField_BizName_get, _riskuserapi.CShfeFtdcNoticePatternField_BizName_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcNoticePatternField_UserID_get, _riskuserapi.CShfeFtdcNoticePatternField_UserID_set)
    IsActive: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcNoticePatternField_IsActive_get, _riskuserapi.CShfeFtdcNoticePatternField_IsActive_set)
    Pattern: "TShfeFtdcContentType" = property(_riskuserapi.CShfeFtdcNoticePatternField_Pattern_get, _riskuserapi.CShfeFtdcNoticePatternField_Pattern_set)

    def __eq__(self, ct: "CShfeFtdcNoticePatternField") -> "bool":
        return _riskuserapi.CShfeFtdcNoticePatternField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcNoticePatternField_swiginit(self, _riskuserapi.new_CShfeFtdcNoticePatternField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcNoticePatternField

# Register CShfeFtdcNoticePatternField in _riskuserapi:
_riskuserapi.CShfeFtdcNoticePatternField_swigregister(CShfeFtdcNoticePatternField)
class CShfeFtdcBizNoticeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcBizNoticeField_TradingDay_get, _riskuserapi.CShfeFtdcBizNoticeField_TradingDay_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcBizNoticeField_SequenceNo_get, _riskuserapi.CShfeFtdcBizNoticeField_SequenceNo_set)
    Method: "TShfeFtdcRiskNotifyMethodType" = property(_riskuserapi.CShfeFtdcBizNoticeField_Method_get, _riskuserapi.CShfeFtdcBizNoticeField_Method_set)
    EventTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcBizNoticeField_EventTime_get, _riskuserapi.CShfeFtdcBizNoticeField_EventTime_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcBizNoticeField_BrokerID_get, _riskuserapi.CShfeFtdcBizNoticeField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcBizNoticeField_UserID_get, _riskuserapi.CShfeFtdcBizNoticeField_UserID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcBizNoticeField_InvestorID_get, _riskuserapi.CShfeFtdcBizNoticeField_InvestorID_set)
    BizType: "TShfeFtdcParamNameType" = property(_riskuserapi.CShfeFtdcBizNoticeField_BizType_get, _riskuserapi.CShfeFtdcBizNoticeField_BizType_set)
    Status: "TShfeFtdcRiskNotifyStatusType" = property(_riskuserapi.CShfeFtdcBizNoticeField_Status_get, _riskuserapi.CShfeFtdcBizNoticeField_Status_set)
    Message: "TShfeFtdcContentType" = property(_riskuserapi.CShfeFtdcBizNoticeField_Message_get, _riskuserapi.CShfeFtdcBizNoticeField_Message_set)
    ErrorMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcBizNoticeField_ErrorMsg_get, _riskuserapi.CShfeFtdcBizNoticeField_ErrorMsg_set)

    def __eq__(self, ct: "CShfeFtdcBizNoticeField") -> "bool":
        return _riskuserapi.CShfeFtdcBizNoticeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcBizNoticeField_swiginit(self, _riskuserapi.new_CShfeFtdcBizNoticeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcBizNoticeField

# Register CShfeFtdcBizNoticeField in _riskuserapi:
_riskuserapi.CShfeFtdcBizNoticeField_swigregister(CShfeFtdcBizNoticeField)
class CShfeFtdcRiskInvestorParamField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParamID: "TShfeFtdcParamIDType" = property(_riskuserapi.CShfeFtdcRiskInvestorParamField_ParamID_get, _riskuserapi.CShfeFtdcRiskInvestorParamField_ParamID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskInvestorParamField_BrokerID_get, _riskuserapi.CShfeFtdcRiskInvestorParamField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRiskInvestorParamField_InvestorID_get, _riskuserapi.CShfeFtdcRiskInvestorParamField_InvestorID_set)
    ParamValue: "TShfeFtdcParamValueType" = property(_riskuserapi.CShfeFtdcRiskInvestorParamField_ParamValue_get, _riskuserapi.CShfeFtdcRiskInvestorParamField_ParamValue_set)

    def __eq__(self, ct: "CShfeFtdcRiskInvestorParamField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskInvestorParamField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskInvestorParamField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskInvestorParamField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskInvestorParamField

# Register CShfeFtdcRiskInvestorParamField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskInvestorParamField_swigregister(CShfeFtdcRiskInvestorParamField)
class CShfeFtdcVaryMarketDataField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcVaryMarketDataField_InstrumentID_get, _riskuserapi.CShfeFtdcVaryMarketDataField_InstrumentID_set)
    LastPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcVaryMarketDataField_LastPrice_get, _riskuserapi.CShfeFtdcVaryMarketDataField_LastPrice_set)

    def __eq__(self, ct: "CShfeFtdcVaryMarketDataField") -> "bool":
        return _riskuserapi.CShfeFtdcVaryMarketDataField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcVaryMarketDataField_swiginit(self, _riskuserapi.new_CShfeFtdcVaryMarketDataField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcVaryMarketDataField

# Register CShfeFtdcVaryMarketDataField in _riskuserapi:
_riskuserapi.CShfeFtdcVaryMarketDataField_swigregister(CShfeFtdcVaryMarketDataField)
class CShfeFtdcPriceRangeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcPriceRangeField_InstrumentID_get, _riskuserapi.CShfeFtdcPriceRangeField_InstrumentID_set)
    Price1: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcPriceRangeField_Price1_get, _riskuserapi.CShfeFtdcPriceRangeField_Price1_set)
    Price2: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcPriceRangeField_Price2_get, _riskuserapi.CShfeFtdcPriceRangeField_Price2_set)

    def __eq__(self, ct: "CShfeFtdcPriceRangeField") -> "bool":
        return _riskuserapi.CShfeFtdcPriceRangeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcPriceRangeField_swiginit(self, _riskuserapi.new_CShfeFtdcPriceRangeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcPriceRangeField

# Register CShfeFtdcPriceRangeField in _riskuserapi:
_riskuserapi.CShfeFtdcPriceRangeField_swigregister(CShfeFtdcPriceRangeField)
class CShfeFtdcSeqBizNoticeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UniqSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSeqBizNoticeField_UniqSequenceNo_get, _riskuserapi.CShfeFtdcSeqBizNoticeField_UniqSequenceNo_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSeqBizNoticeField_TradingDay_get, _riskuserapi.CShfeFtdcSeqBizNoticeField_TradingDay_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSeqBizNoticeField_SequenceNo_get, _riskuserapi.CShfeFtdcSeqBizNoticeField_SequenceNo_set)
    Method: "TShfeFtdcRiskNotifyMethodType" = property(_riskuserapi.CShfeFtdcSeqBizNoticeField_Method_get, _riskuserapi.CShfeFtdcSeqBizNoticeField_Method_set)
    EventTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcSeqBizNoticeField_EventTime_get, _riskuserapi.CShfeFtdcSeqBizNoticeField_EventTime_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSeqBizNoticeField_BrokerID_get, _riskuserapi.CShfeFtdcSeqBizNoticeField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcSeqBizNoticeField_UserID_get, _riskuserapi.CShfeFtdcSeqBizNoticeField_UserID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSeqBizNoticeField_InvestorID_get, _riskuserapi.CShfeFtdcSeqBizNoticeField_InvestorID_set)
    BizType: "TShfeFtdcParamNameType" = property(_riskuserapi.CShfeFtdcSeqBizNoticeField_BizType_get, _riskuserapi.CShfeFtdcSeqBizNoticeField_BizType_set)
    Status: "TShfeFtdcRiskNotifyStatusType" = property(_riskuserapi.CShfeFtdcSeqBizNoticeField_Status_get, _riskuserapi.CShfeFtdcSeqBizNoticeField_Status_set)
    Message: "TShfeFtdcContentType" = property(_riskuserapi.CShfeFtdcSeqBizNoticeField_Message_get, _riskuserapi.CShfeFtdcSeqBizNoticeField_Message_set)
    ErrorMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcSeqBizNoticeField_ErrorMsg_get, _riskuserapi.CShfeFtdcSeqBizNoticeField_ErrorMsg_set)

    def __eq__(self, ct: "CShfeFtdcSeqBizNoticeField") -> "bool":
        return _riskuserapi.CShfeFtdcSeqBizNoticeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSeqBizNoticeField_swiginit(self, _riskuserapi.new_CShfeFtdcSeqBizNoticeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSeqBizNoticeField

# Register CShfeFtdcSeqBizNoticeField in _riskuserapi:
_riskuserapi.CShfeFtdcSeqBizNoticeField_swigregister(CShfeFtdcSeqBizNoticeField)
class CShfeFtdcRiskParamInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParamID: "TShfeFtdcParamIDType" = property(_riskuserapi.CShfeFtdcRiskParamInfoField_ParamID_get, _riskuserapi.CShfeFtdcRiskParamInfoField_ParamID_set)
    Description: "TShfeFtdcDescriptionType" = property(_riskuserapi.CShfeFtdcRiskParamInfoField_Description_get, _riskuserapi.CShfeFtdcRiskParamInfoField_Description_set)

    def __eq__(self, ct: "CShfeFtdcRiskParamInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskParamInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskParamInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskParamInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskParamInfoField

# Register CShfeFtdcRiskParamInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskParamInfoField_swigregister(CShfeFtdcRiskParamInfoField)
class CShfeFtdcRiskLoginInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskLoginInfoField_BrokerID_get, _riskuserapi.CShfeFtdcRiskLoginInfoField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRiskLoginInfoField_UserID_get, _riskuserapi.CShfeFtdcRiskLoginInfoField_UserID_set)
    LocalSessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcRiskLoginInfoField_LocalSessionID_get, _riskuserapi.CShfeFtdcRiskLoginInfoField_LocalSessionID_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcRiskLoginInfoField_SessionID_get, _riskuserapi.CShfeFtdcRiskLoginInfoField_SessionID_set)
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcRiskLoginInfoField_FrontID_get, _riskuserapi.CShfeFtdcRiskLoginInfoField_FrontID_set)

    def __eq__(self, ct: "CShfeFtdcRiskLoginInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskLoginInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskLoginInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskLoginInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskLoginInfoField

# Register CShfeFtdcRiskLoginInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskLoginInfoField_swigregister(CShfeFtdcRiskLoginInfoField)
class CShfeFtdcRiskPatternField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskPatternField_BrokerID_get, _riskuserapi.CShfeFtdcRiskPatternField_BrokerID_set)
    BizType: "TShfeFtdcParamNameType" = property(_riskuserapi.CShfeFtdcRiskPatternField_BizType_get, _riskuserapi.CShfeFtdcRiskPatternField_BizType_set)
    PatternID: "TShfeFtdcParamIDType" = property(_riskuserapi.CShfeFtdcRiskPatternField_PatternID_get, _riskuserapi.CShfeFtdcRiskPatternField_PatternID_set)
    PatternName: "TShfeFtdcParamNameType" = property(_riskuserapi.CShfeFtdcRiskPatternField_PatternName_get, _riskuserapi.CShfeFtdcRiskPatternField_PatternName_set)
    Pattern: "TShfeFtdcContentType" = property(_riskuserapi.CShfeFtdcRiskPatternField_Pattern_get, _riskuserapi.CShfeFtdcRiskPatternField_Pattern_set)

    def __eq__(self, ct: "CShfeFtdcRiskPatternField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskPatternField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskPatternField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskPatternField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskPatternField

# Register CShfeFtdcRiskPatternField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskPatternField_swigregister(CShfeFtdcRiskPatternField)
class CShfeFtdcInvestorPatternField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorPatternField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorPatternField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorPatternField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorPatternField_InvestorID_set)
    BizType: "TShfeFtdcParamNameType" = property(_riskuserapi.CShfeFtdcInvestorPatternField_BizType_get, _riskuserapi.CShfeFtdcInvestorPatternField_BizType_set)
    Method: "TShfeFtdcRiskNotifyMethodType" = property(_riskuserapi.CShfeFtdcInvestorPatternField_Method_get, _riskuserapi.CShfeFtdcInvestorPatternField_Method_set)
    PatternID: "TShfeFtdcParamIDType" = property(_riskuserapi.CShfeFtdcInvestorPatternField_PatternID_get, _riskuserapi.CShfeFtdcInvestorPatternField_PatternID_set)
    IsActive: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcInvestorPatternField_IsActive_get, _riskuserapi.CShfeFtdcInvestorPatternField_IsActive_set)

    def __eq__(self, ct: "CShfeFtdcInvestorPatternField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorPatternField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorPatternField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorPatternField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorPatternField

# Register CShfeFtdcInvestorPatternField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorPatternField_swigregister(CShfeFtdcInvestorPatternField)
class CShfeFtdcRiskNotifyBField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcRiskNotifyBField_SequenceNo_get, _riskuserapi.CShfeFtdcRiskNotifyBField_SequenceNo_set)
    EventDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRiskNotifyBField_EventDate_get, _riskuserapi.CShfeFtdcRiskNotifyBField_EventDate_set)
    EventTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRiskNotifyBField_EventTime_get, _riskuserapi.CShfeFtdcRiskNotifyBField_EventTime_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyBField_BrokerID_get, _riskuserapi.CShfeFtdcRiskNotifyBField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyBField_UserID_get, _riskuserapi.CShfeFtdcRiskNotifyBField_UserID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyBField_InvestorID_get, _riskuserapi.CShfeFtdcRiskNotifyBField_InvestorID_set)
    NotifyClass: "TShfeFtdcNotifyClassType" = property(_riskuserapi.CShfeFtdcRiskNotifyBField_NotifyClass_get, _riskuserapi.CShfeFtdcRiskNotifyBField_NotifyClass_set)
    NotifyMethod: "TShfeFtdcRiskNotifyMethodType" = property(_riskuserapi.CShfeFtdcRiskNotifyBField_NotifyMethod_get, _riskuserapi.CShfeFtdcRiskNotifyBField_NotifyMethod_set)
    NotifyStatus: "TShfeFtdcRiskNotifyStatusType" = property(_riskuserapi.CShfeFtdcRiskNotifyBField_NotifyStatus_get, _riskuserapi.CShfeFtdcRiskNotifyBField_NotifyStatus_set)
    Message: "TShfeFtdcContentType" = property(_riskuserapi.CShfeFtdcRiskNotifyBField_Message_get, _riskuserapi.CShfeFtdcRiskNotifyBField_Message_set)
    Reserve: "TShfeFtdcCommentType" = property(_riskuserapi.CShfeFtdcRiskNotifyBField_Reserve_get, _riskuserapi.CShfeFtdcRiskNotifyBField_Reserve_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRiskNotifyBField_TradingDay_get, _riskuserapi.CShfeFtdcRiskNotifyBField_TradingDay_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyBField_CurrencyID_get, _riskuserapi.CShfeFtdcRiskNotifyBField_CurrencyID_set)
    AckContent: "TShfeFtdcAckContentType" = property(_riskuserapi.CShfeFtdcRiskNotifyBField_AckContent_get, _riskuserapi.CShfeFtdcRiskNotifyBField_AckContent_set)

    def __eq__(self, ct: "CShfeFtdcRiskNotifyBField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskNotifyBField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskNotifyBField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskNotifyBField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskNotifyBField

# Register CShfeFtdcRiskNotifyBField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskNotifyBField_swigregister(CShfeFtdcRiskNotifyBField)
class CShfeFtdcSeqRiskNotifyBField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UniqSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyBField_UniqSequenceNo_get, _riskuserapi.CShfeFtdcSeqRiskNotifyBField_UniqSequenceNo_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyBField_SequenceNo_get, _riskuserapi.CShfeFtdcSeqRiskNotifyBField_SequenceNo_set)
    EventDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyBField_EventDate_get, _riskuserapi.CShfeFtdcSeqRiskNotifyBField_EventDate_set)
    EventTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyBField_EventTime_get, _riskuserapi.CShfeFtdcSeqRiskNotifyBField_EventTime_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyBField_BrokerID_get, _riskuserapi.CShfeFtdcSeqRiskNotifyBField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyBField_UserID_get, _riskuserapi.CShfeFtdcSeqRiskNotifyBField_UserID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyBField_InvestorID_get, _riskuserapi.CShfeFtdcSeqRiskNotifyBField_InvestorID_set)
    NotifyClass: "TShfeFtdcNotifyClassType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyBField_NotifyClass_get, _riskuserapi.CShfeFtdcSeqRiskNotifyBField_NotifyClass_set)
    NotifyMethod: "TShfeFtdcRiskNotifyMethodType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyBField_NotifyMethod_get, _riskuserapi.CShfeFtdcSeqRiskNotifyBField_NotifyMethod_set)
    NotifyStatus: "TShfeFtdcRiskNotifyStatusType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyBField_NotifyStatus_get, _riskuserapi.CShfeFtdcSeqRiskNotifyBField_NotifyStatus_set)
    Message: "TShfeFtdcContentType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyBField_Message_get, _riskuserapi.CShfeFtdcSeqRiskNotifyBField_Message_set)
    Reserve: "TShfeFtdcCommentType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyBField_Reserve_get, _riskuserapi.CShfeFtdcSeqRiskNotifyBField_Reserve_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyBField_TradingDay_get, _riskuserapi.CShfeFtdcSeqRiskNotifyBField_TradingDay_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyBField_CurrencyID_get, _riskuserapi.CShfeFtdcSeqRiskNotifyBField_CurrencyID_set)
    AckContent: "TShfeFtdcAckContentType" = property(_riskuserapi.CShfeFtdcSeqRiskNotifyBField_AckContent_get, _riskuserapi.CShfeFtdcSeqRiskNotifyBField_AckContent_set)

    def __eq__(self, ct: "CShfeFtdcSeqRiskNotifyBField") -> "bool":
        return _riskuserapi.CShfeFtdcSeqRiskNotifyBField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSeqRiskNotifyBField_swiginit(self, _riskuserapi.new_CShfeFtdcSeqRiskNotifyBField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSeqRiskNotifyBField

# Register CShfeFtdcSeqRiskNotifyBField in _riskuserapi:
_riskuserapi.CShfeFtdcSeqRiskNotifyBField_swigregister(CShfeFtdcSeqRiskNotifyBField)
class CShfeFtdcQryStatField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryStatField_BrokerID_get, _riskuserapi.CShfeFtdcQryStatField_BrokerID_set)
    ExchangeProductInstID: "TShfeFtdcString100Type" = property(_riskuserapi.CShfeFtdcQryStatField_ExchangeProductInstID_get, _riskuserapi.CShfeFtdcQryStatField_ExchangeProductInstID_set)
    SortType: "TShfeFtdcStatSortTypeType" = property(_riskuserapi.CShfeFtdcQryStatField_SortType_get, _riskuserapi.CShfeFtdcQryStatField_SortType_set)
    ResultCount: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcQryStatField_ResultCount_get, _riskuserapi.CShfeFtdcQryStatField_ResultCount_set)
    ResultRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcQryStatField_ResultRatio_get, _riskuserapi.CShfeFtdcQryStatField_ResultRatio_set)
    MaxCount: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcQryStatField_MaxCount_get, _riskuserapi.CShfeFtdcQryStatField_MaxCount_set)

    def __eq__(self, ct: "CShfeFtdcQryStatField") -> "bool":
        return _riskuserapi.CShfeFtdcQryStatField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryStatField_swiginit(self, _riskuserapi.new_CShfeFtdcQryStatField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryStatField

# Register CShfeFtdcQryStatField in _riskuserapi:
_riskuserapi.CShfeFtdcQryStatField_swigregister(CShfeFtdcQryStatField)
class CShfeFtdcPositionStatField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcPositionStatField_BrokerID_get, _riskuserapi.CShfeFtdcPositionStatField_BrokerID_set)
    ExchangeProductInstID: "TShfeFtdcString100Type" = property(_riskuserapi.CShfeFtdcPositionStatField_ExchangeProductInstID_get, _riskuserapi.CShfeFtdcPositionStatField_ExchangeProductInstID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcPositionStatField_InvestorID_get, _riskuserapi.CShfeFtdcPositionStatField_InvestorID_set)
    YdPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatField_YdPosition_get, _riskuserapi.CShfeFtdcPositionStatField_YdPosition_set)
    Position: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatField_Position_get, _riskuserapi.CShfeFtdcPositionStatField_Position_set)
    LongPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatField_LongPosition_get, _riskuserapi.CShfeFtdcPositionStatField_LongPosition_set)
    ShortPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatField_ShortPosition_get, _riskuserapi.CShfeFtdcPositionStatField_ShortPosition_set)
    NetPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatField_NetPosition_get, _riskuserapi.CShfeFtdcPositionStatField_NetPosition_set)
    SpecuLongPosi: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatField_SpecuLongPosi_get, _riskuserapi.CShfeFtdcPositionStatField_SpecuLongPosi_set)
    SpecuShortPosi: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatField_SpecuShortPosi_get, _riskuserapi.CShfeFtdcPositionStatField_SpecuShortPosi_set)
    HedgeLongPosi: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatField_HedgeLongPosi_get, _riskuserapi.CShfeFtdcPositionStatField_HedgeLongPosi_set)
    HedgeShortPosi: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatField_HedgeShortPosi_get, _riskuserapi.CShfeFtdcPositionStatField_HedgeShortPosi_set)
    TodayPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatField_TodayPosition_get, _riskuserapi.CShfeFtdcPositionStatField_TodayPosition_set)
    PositionCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPositionStatField_PositionCost_get, _riskuserapi.CShfeFtdcPositionStatField_PositionCost_set)

    def __eq__(self, ct: "CShfeFtdcPositionStatField") -> "bool":
        return _riskuserapi.CShfeFtdcPositionStatField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcPositionStatField_swiginit(self, _riskuserapi.new_CShfeFtdcPositionStatField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcPositionStatField

# Register CShfeFtdcPositionStatField in _riskuserapi:
_riskuserapi.CShfeFtdcPositionStatField_swigregister(CShfeFtdcPositionStatField)
class CShfeFtdcTradeStatField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcTradeStatField_BrokerID_get, _riskuserapi.CShfeFtdcTradeStatField_BrokerID_set)
    ExchangeProductInstID: "TShfeFtdcString100Type" = property(_riskuserapi.CShfeFtdcTradeStatField_ExchangeProductInstID_get, _riskuserapi.CShfeFtdcTradeStatField_ExchangeProductInstID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcTradeStatField_InvestorID_get, _riskuserapi.CShfeFtdcTradeStatField_InvestorID_set)
    TotalVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcTradeStatField_TotalVol_get, _riskuserapi.CShfeFtdcTradeStatField_TotalVol_set)
    TotalAmt: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradeStatField_TotalAmt_get, _riskuserapi.CShfeFtdcTradeStatField_TotalAmt_set)
    BuyVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcTradeStatField_BuyVol_get, _riskuserapi.CShfeFtdcTradeStatField_BuyVol_set)
    BuyAmt: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradeStatField_BuyAmt_get, _riskuserapi.CShfeFtdcTradeStatField_BuyAmt_set)
    SellVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcTradeStatField_SellVol_get, _riskuserapi.CShfeFtdcTradeStatField_SellVol_set)
    SellAmt: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradeStatField_SellAmt_get, _riskuserapi.CShfeFtdcTradeStatField_SellAmt_set)
    NetVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcTradeStatField_NetVol_get, _riskuserapi.CShfeFtdcTradeStatField_NetVol_set)
    NetAmt: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcTradeStatField_NetAmt_get, _riskuserapi.CShfeFtdcTradeStatField_NetAmt_set)

    def __eq__(self, ct: "CShfeFtdcTradeStatField") -> "bool":
        return _riskuserapi.CShfeFtdcTradeStatField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTradeStatField_swiginit(self, _riskuserapi.new_CShfeFtdcTradeStatField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTradeStatField

# Register CShfeFtdcTradeStatField in _riskuserapi:
_riskuserapi.CShfeFtdcTradeStatField_swigregister(CShfeFtdcTradeStatField)
class CShfeFtdcOrderStatField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcOrderStatField_BrokerID_get, _riskuserapi.CShfeFtdcOrderStatField_BrokerID_set)
    ExchangeProductInstID: "TShfeFtdcString100Type" = property(_riskuserapi.CShfeFtdcOrderStatField_ExchangeProductInstID_get, _riskuserapi.CShfeFtdcOrderStatField_ExchangeProductInstID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcOrderStatField_InvestorID_get, _riskuserapi.CShfeFtdcOrderStatField_InvestorID_set)
    TotalVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOrderStatField_TotalVol_get, _riskuserapi.CShfeFtdcOrderStatField_TotalVol_set)
    BuyVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOrderStatField_BuyVol_get, _riskuserapi.CShfeFtdcOrderStatField_BuyVol_set)
    SellVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOrderStatField_SellVol_get, _riskuserapi.CShfeFtdcOrderStatField_SellVol_set)
    NetVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOrderStatField_NetVol_get, _riskuserapi.CShfeFtdcOrderStatField_NetVol_set)
    TradeCount: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOrderStatField_TradeCount_get, _riskuserapi.CShfeFtdcOrderStatField_TradeCount_set)
    TotalCount: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOrderStatField_TotalCount_get, _riskuserapi.CShfeFtdcOrderStatField_TotalCount_set)

    def __eq__(self, ct: "CShfeFtdcOrderStatField") -> "bool":
        return _riskuserapi.CShfeFtdcOrderStatField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcOrderStatField_swiginit(self, _riskuserapi.new_CShfeFtdcOrderStatField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcOrderStatField

# Register CShfeFtdcOrderStatField in _riskuserapi:
_riskuserapi.CShfeFtdcOrderStatField_swigregister(CShfeFtdcOrderStatField)
class CShfeFtdcDRSysIDField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DRSysID: "TShfeFtdcDRSysIDType" = property(_riskuserapi.CShfeFtdcDRSysIDField_DRSysID_get, _riskuserapi.CShfeFtdcDRSysIDField_DRSysID_set)

    def __eq__(self, ct: "CShfeFtdcDRSysIDField") -> "bool":
        return _riskuserapi.CShfeFtdcDRSysIDField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcDRSysIDField_swiginit(self, _riskuserapi.new_CShfeFtdcDRSysIDField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcDRSysIDField

# Register CShfeFtdcDRSysIDField in _riskuserapi:
_riskuserapi.CShfeFtdcDRSysIDField_swigregister(CShfeFtdcDRSysIDField)
class CShfeFtdcQryInvestorMarginRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInvestorMarginRateField_BrokerID_get, _riskuserapi.CShfeFtdcQryInvestorMarginRateField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryInvestorMarginRateField_InvestorID_get, _riskuserapi.CShfeFtdcQryInvestorMarginRateField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryInvestorMarginRateField_InstrumentID_get, _riskuserapi.CShfeFtdcQryInvestorMarginRateField_InstrumentID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcQryInvestorMarginRateField_HedgeFlag_get, _riskuserapi.CShfeFtdcQryInvestorMarginRateField_HedgeFlag_set)
    TradingDate: "TShfeFtdcTradingDateType" = property(_riskuserapi.CShfeFtdcQryInvestorMarginRateField_TradingDate_get, _riskuserapi.CShfeFtdcQryInvestorMarginRateField_TradingDate_set)

    def __eq__(self, ct: "CShfeFtdcQryInvestorMarginRateField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInvestorMarginRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInvestorMarginRateField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInvestorMarginRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInvestorMarginRateField

# Register CShfeFtdcQryInvestorMarginRateField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInvestorMarginRateField_swigregister(CShfeFtdcQryInvestorMarginRateField)
class CShfeFtdcInvestorMarginRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInvestorMarginRateField_InstrumentID_get, _riskuserapi.CShfeFtdcInvestorMarginRateField_InstrumentID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcInvestorMarginRateField_InvestorRange_get, _riskuserapi.CShfeFtdcInvestorMarginRateField_InvestorRange_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorMarginRateField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorMarginRateField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorMarginRateField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorMarginRateField_InvestorID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcInvestorMarginRateField_HedgeFlag_get, _riskuserapi.CShfeFtdcInvestorMarginRateField_HedgeFlag_set)
    LongMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInvestorMarginRateField_LongMarginRatioByMoney_get, _riskuserapi.CShfeFtdcInvestorMarginRateField_LongMarginRatioByMoney_set)
    LongMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorMarginRateField_LongMarginRatioByVolume_get, _riskuserapi.CShfeFtdcInvestorMarginRateField_LongMarginRatioByVolume_set)
    ShortMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInvestorMarginRateField_ShortMarginRatioByMoney_get, _riskuserapi.CShfeFtdcInvestorMarginRateField_ShortMarginRatioByMoney_set)
    ShortMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorMarginRateField_ShortMarginRatioByVolume_get, _riskuserapi.CShfeFtdcInvestorMarginRateField_ShortMarginRatioByVolume_set)
    MinMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorMarginRateField_MinMargin_get, _riskuserapi.CShfeFtdcInvestorMarginRateField_MinMargin_set)
    TradingDate: "TShfeFtdcTradingDateType" = property(_riskuserapi.CShfeFtdcInvestorMarginRateField_TradingDate_get, _riskuserapi.CShfeFtdcInvestorMarginRateField_TradingDate_set)

    def __eq__(self, ct: "CShfeFtdcInvestorMarginRateField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorMarginRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorMarginRateField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorMarginRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorMarginRateField

# Register CShfeFtdcInvestorMarginRateField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorMarginRateField_swigregister(CShfeFtdcInvestorMarginRateField)
class CShfeFtdcSTPriceField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSTPriceField_BrokerID_get, _riskuserapi.CShfeFtdcSTPriceField_BrokerID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcSTPriceField_InvestorRange_get, _riskuserapi.CShfeFtdcSTPriceField_InvestorRange_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSTPriceField_InvestorID_get, _riskuserapi.CShfeFtdcSTPriceField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSTPriceField_InstrumentID_get, _riskuserapi.CShfeFtdcSTPriceField_InstrumentID_set)
    PriceType: "TShfeFtdcPriceTypeType" = property(_riskuserapi.CShfeFtdcSTPriceField_PriceType_get, _riskuserapi.CShfeFtdcSTPriceField_PriceType_set)
    Price: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSTPriceField_Price_get, _riskuserapi.CShfeFtdcSTPriceField_Price_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcSTPriceField_UserID_get, _riskuserapi.CShfeFtdcSTPriceField_UserID_set)

    def __eq__(self, ct: "CShfeFtdcSTPriceField") -> "bool":
        return _riskuserapi.CShfeFtdcSTPriceField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSTPriceField_swiginit(self, _riskuserapi.new_CShfeFtdcSTPriceField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSTPriceField

# Register CShfeFtdcSTPriceField in _riskuserapi:
_riskuserapi.CShfeFtdcSTPriceField_swigregister(CShfeFtdcSTPriceField)
class CShfeFtdcSTMarginRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSTMarginRateField_InstrumentID_get, _riskuserapi.CShfeFtdcSTMarginRateField_InstrumentID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcSTMarginRateField_InvestorRange_get, _riskuserapi.CShfeFtdcSTMarginRateField_InvestorRange_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSTMarginRateField_BrokerID_get, _riskuserapi.CShfeFtdcSTMarginRateField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSTMarginRateField_InvestorID_get, _riskuserapi.CShfeFtdcSTMarginRateField_InvestorID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcSTMarginRateField_HedgeFlag_get, _riskuserapi.CShfeFtdcSTMarginRateField_HedgeFlag_set)
    LongMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSTMarginRateField_LongMarginRatioByMoney_get, _riskuserapi.CShfeFtdcSTMarginRateField_LongMarginRatioByMoney_set)
    LongMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSTMarginRateField_LongMarginRatioByVolume_get, _riskuserapi.CShfeFtdcSTMarginRateField_LongMarginRatioByVolume_set)
    ShortMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSTMarginRateField_ShortMarginRatioByMoney_get, _riskuserapi.CShfeFtdcSTMarginRateField_ShortMarginRatioByMoney_set)
    ShortMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSTMarginRateField_ShortMarginRatioByVolume_get, _riskuserapi.CShfeFtdcSTMarginRateField_ShortMarginRatioByVolume_set)
    MinMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSTMarginRateField_MinMargin_get, _riskuserapi.CShfeFtdcSTMarginRateField_MinMargin_set)

    def __eq__(self, ct: "CShfeFtdcSTMarginRateField") -> "bool":
        return _riskuserapi.CShfeFtdcSTMarginRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSTMarginRateField_swiginit(self, _riskuserapi.new_CShfeFtdcSTMarginRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSTMarginRateField

# Register CShfeFtdcSTMarginRateField in _riskuserapi:
_riskuserapi.CShfeFtdcSTMarginRateField_swigregister(CShfeFtdcSTMarginRateField)
class CShfeFtdcSeqSmsCustomNotifyField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UniqSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSeqSmsCustomNotifyField_UniqSequenceNo_get, _riskuserapi.CShfeFtdcSeqSmsCustomNotifyField_UniqSequenceNo_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSeqSmsCustomNotifyField_SequenceNo_get, _riskuserapi.CShfeFtdcSeqSmsCustomNotifyField_SequenceNo_set)
    Type: "TShfeFtdcSmsCustomTypeType" = property(_riskuserapi.CShfeFtdcSeqSmsCustomNotifyField_Type_get, _riskuserapi.CShfeFtdcSeqSmsCustomNotifyField_Type_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSeqSmsCustomNotifyField_BrokerID_get, _riskuserapi.CShfeFtdcSeqSmsCustomNotifyField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcSeqSmsCustomNotifyField_UserID_get, _riskuserapi.CShfeFtdcSeqSmsCustomNotifyField_UserID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSeqSmsCustomNotifyField_InvestorID_get, _riskuserapi.CShfeFtdcSeqSmsCustomNotifyField_InvestorID_set)
    Mobile: "TShfeFtdcMobileType" = property(_riskuserapi.CShfeFtdcSeqSmsCustomNotifyField_Mobile_get, _riskuserapi.CShfeFtdcSeqSmsCustomNotifyField_Mobile_set)
    Message: "TShfeFtdcContentType" = property(_riskuserapi.CShfeFtdcSeqSmsCustomNotifyField_Message_get, _riskuserapi.CShfeFtdcSeqSmsCustomNotifyField_Message_set)

    def __eq__(self, ct: "CShfeFtdcSeqSmsCustomNotifyField") -> "bool":
        return _riskuserapi.CShfeFtdcSeqSmsCustomNotifyField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSeqSmsCustomNotifyField_swiginit(self, _riskuserapi.new_CShfeFtdcSeqSmsCustomNotifyField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSeqSmsCustomNotifyField

# Register CShfeFtdcSeqSmsCustomNotifyField in _riskuserapi:
_riskuserapi.CShfeFtdcSeqSmsCustomNotifyField_swigregister(CShfeFtdcSeqSmsCustomNotifyField)
class CShfeFtdcSetSmsStatusField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSetSmsStatusField_SequenceNo_get, _riskuserapi.CShfeFtdcSetSmsStatusField_SequenceNo_set)
    Type: "TShfeFtdcSmsCustomTypeType" = property(_riskuserapi.CShfeFtdcSetSmsStatusField_Type_get, _riskuserapi.CShfeFtdcSetSmsStatusField_Type_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSetSmsStatusField_BrokerID_get, _riskuserapi.CShfeFtdcSetSmsStatusField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcSetSmsStatusField_UserID_get, _riskuserapi.CShfeFtdcSetSmsStatusField_UserID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSetSmsStatusField_InvestorID_get, _riskuserapi.CShfeFtdcSetSmsStatusField_InvestorID_set)
    Status: "TShfeFtdcRiskNotifyStatusType" = property(_riskuserapi.CShfeFtdcSetSmsStatusField_Status_get, _riskuserapi.CShfeFtdcSetSmsStatusField_Status_set)

    def __eq__(self, ct: "CShfeFtdcSetSmsStatusField") -> "bool":
        return _riskuserapi.CShfeFtdcSetSmsStatusField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSetSmsStatusField_swiginit(self, _riskuserapi.new_CShfeFtdcSetSmsStatusField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSetSmsStatusField

# Register CShfeFtdcSetSmsStatusField in _riskuserapi:
_riskuserapi.CShfeFtdcSetSmsStatusField_swigregister(CShfeFtdcSetSmsStatusField)
class CShfeFtdcSTExchMarginRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSTExchMarginRateField_InstrumentID_get, _riskuserapi.CShfeFtdcSTExchMarginRateField_InstrumentID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcSTExchMarginRateField_InvestorRange_get, _riskuserapi.CShfeFtdcSTExchMarginRateField_InvestorRange_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSTExchMarginRateField_BrokerID_get, _riskuserapi.CShfeFtdcSTExchMarginRateField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSTExchMarginRateField_InvestorID_get, _riskuserapi.CShfeFtdcSTExchMarginRateField_InvestorID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcSTExchMarginRateField_HedgeFlag_get, _riskuserapi.CShfeFtdcSTExchMarginRateField_HedgeFlag_set)
    LongMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSTExchMarginRateField_LongMarginRatioByMoney_get, _riskuserapi.CShfeFtdcSTExchMarginRateField_LongMarginRatioByMoney_set)
    LongMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSTExchMarginRateField_LongMarginRatioByVolume_get, _riskuserapi.CShfeFtdcSTExchMarginRateField_LongMarginRatioByVolume_set)
    ShortMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSTExchMarginRateField_ShortMarginRatioByMoney_get, _riskuserapi.CShfeFtdcSTExchMarginRateField_ShortMarginRatioByMoney_set)
    ShortMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSTExchMarginRateField_ShortMarginRatioByVolume_get, _riskuserapi.CShfeFtdcSTExchMarginRateField_ShortMarginRatioByVolume_set)
    MinMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSTExchMarginRateField_MinMargin_get, _riskuserapi.CShfeFtdcSTExchMarginRateField_MinMargin_set)
    MarginRate: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSTExchMarginRateField_MarginRate_get, _riskuserapi.CShfeFtdcSTExchMarginRateField_MarginRate_set)
    AddOnRate: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSTExchMarginRateField_AddOnRate_get, _riskuserapi.CShfeFtdcSTExchMarginRateField_AddOnRate_set)
    TradingDate: "TShfeFtdcTradingDateType" = property(_riskuserapi.CShfeFtdcSTExchMarginRateField_TradingDate_get, _riskuserapi.CShfeFtdcSTExchMarginRateField_TradingDate_set)

    def __eq__(self, ct: "CShfeFtdcSTExchMarginRateField") -> "bool":
        return _riskuserapi.CShfeFtdcSTExchMarginRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSTExchMarginRateField_swiginit(self, _riskuserapi.new_CShfeFtdcSTExchMarginRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSTExchMarginRateField

# Register CShfeFtdcSTExchMarginRateField in _riskuserapi:
_riskuserapi.CShfeFtdcSTExchMarginRateField_swigregister(CShfeFtdcSTExchMarginRateField)
class CShfeFtdcQryExchMarginRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryExchMarginRateField_BrokerID_get, _riskuserapi.CShfeFtdcQryExchMarginRateField_BrokerID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryExchMarginRateField_InstrumentID_get, _riskuserapi.CShfeFtdcQryExchMarginRateField_InstrumentID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcQryExchMarginRateField_HedgeFlag_get, _riskuserapi.CShfeFtdcQryExchMarginRateField_HedgeFlag_set)
    TradingDate: "TShfeFtdcTradingDateType" = property(_riskuserapi.CShfeFtdcQryExchMarginRateField_TradingDate_get, _riskuserapi.CShfeFtdcQryExchMarginRateField_TradingDate_set)

    def __eq__(self, ct: "CShfeFtdcQryExchMarginRateField") -> "bool":
        return _riskuserapi.CShfeFtdcQryExchMarginRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryExchMarginRateField_swiginit(self, _riskuserapi.new_CShfeFtdcQryExchMarginRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryExchMarginRateField

# Register CShfeFtdcQryExchMarginRateField in _riskuserapi:
_riskuserapi.CShfeFtdcQryExchMarginRateField_swigregister(CShfeFtdcQryExchMarginRateField)
class CShfeFtdcExchMarginRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcExchMarginRateField_BrokerID_get, _riskuserapi.CShfeFtdcExchMarginRateField_BrokerID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcExchMarginRateField_InstrumentID_get, _riskuserapi.CShfeFtdcExchMarginRateField_InstrumentID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcExchMarginRateField_HedgeFlag_get, _riskuserapi.CShfeFtdcExchMarginRateField_HedgeFlag_set)
    LongMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchMarginRateField_LongMarginRatioByMoney_get, _riskuserapi.CShfeFtdcExchMarginRateField_LongMarginRatioByMoney_set)
    LongMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcExchMarginRateField_LongMarginRatioByVolume_get, _riskuserapi.CShfeFtdcExchMarginRateField_LongMarginRatioByVolume_set)
    ShortMarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchMarginRateField_ShortMarginRatioByMoney_get, _riskuserapi.CShfeFtdcExchMarginRateField_ShortMarginRatioByMoney_set)
    ShortMarginRatioByVolume: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcExchMarginRateField_ShortMarginRatioByVolume_get, _riskuserapi.CShfeFtdcExchMarginRateField_ShortMarginRatioByVolume_set)
    MinMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcExchMarginRateField_MinMargin_get, _riskuserapi.CShfeFtdcExchMarginRateField_MinMargin_set)
    TradingDate: "TShfeFtdcTradingDateType" = property(_riskuserapi.CShfeFtdcExchMarginRateField_TradingDate_get, _riskuserapi.CShfeFtdcExchMarginRateField_TradingDate_set)
    MarginRate: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchMarginRateField_MarginRate_get, _riskuserapi.CShfeFtdcExchMarginRateField_MarginRate_set)
    AddOnRate: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchMarginRateField_AddOnRate_get, _riskuserapi.CShfeFtdcExchMarginRateField_AddOnRate_set)

    def __eq__(self, ct: "CShfeFtdcExchMarginRateField") -> "bool":
        return _riskuserapi.CShfeFtdcExchMarginRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcExchMarginRateField_swiginit(self, _riskuserapi.new_CShfeFtdcExchMarginRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcExchMarginRateField

# Register CShfeFtdcExchMarginRateField in _riskuserapi:
_riskuserapi.CShfeFtdcExchMarginRateField_swigregister(CShfeFtdcExchMarginRateField)
class CShfeFtdcSeqIPGroupMarginField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UniqSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_UniqSequenceNo_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_UniqSequenceNo_set)
    ProductGroupID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_ProductGroupID_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_ProductGroupID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_BrokerID_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_InvestorID_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_InvestorID_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_TradingDay_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_SettlementID_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_SettlementID_set)
    FrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_FrozenMargin_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_FrozenMargin_set)
    LongFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_LongFrozenMargin_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_LongFrozenMargin_set)
    ShortFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_ShortFrozenMargin_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_ShortFrozenMargin_set)
    UseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_UseMargin_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_UseMargin_set)
    LongUseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_LongUseMargin_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_LongUseMargin_set)
    ShortUseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_ShortUseMargin_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_ShortUseMargin_set)
    ExchMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_ExchMargin_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_ExchMargin_set)
    LongExchMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_LongExchMargin_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_LongExchMargin_set)
    ShortExchMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_ShortExchMargin_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_ShortExchMargin_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_CloseProfit_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_CloseProfit_set)
    FrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_FrozenCommission_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_FrozenCommission_set)
    Commission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_Commission_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_Commission_set)
    FrozenCash: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_FrozenCash_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_FrozenCash_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_CashIn_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_CashIn_set)
    PositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_PositionProfit_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_PositionProfit_set)
    OffsetAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_OffsetAmount_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_OffsetAmount_set)
    LongOffsetAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_LongOffsetAmount_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_LongOffsetAmount_set)
    ShortOffsetAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_ShortOffsetAmount_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_ShortOffsetAmount_set)
    ExchOffsetAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_ExchOffsetAmount_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_ExchOffsetAmount_set)
    LongExchOffsetAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_LongExchOffsetAmount_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_LongExchOffsetAmount_set)
    ShortExchOffsetAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_ShortExchOffsetAmount_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_ShortExchOffsetAmount_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_HedgeFlag_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_HedgeFlag_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_ExchangeID_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_ExchangeID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcSeqIPGroupMarginField_InvestUnitID_get, _riskuserapi.CShfeFtdcSeqIPGroupMarginField_InvestUnitID_set)

    def __eq__(self, ct: "CShfeFtdcSeqIPGroupMarginField") -> "bool":
        return _riskuserapi.CShfeFtdcSeqIPGroupMarginField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSeqIPGroupMarginField_swiginit(self, _riskuserapi.new_CShfeFtdcSeqIPGroupMarginField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSeqIPGroupMarginField

# Register CShfeFtdcSeqIPGroupMarginField in _riskuserapi:
_riskuserapi.CShfeFtdcSeqIPGroupMarginField_swigregister(CShfeFtdcSeqIPGroupMarginField)
class CShfeFtdcBrokerInvestorCurrencyField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcBrokerInvestorCurrencyField_BrokerID_get, _riskuserapi.CShfeFtdcBrokerInvestorCurrencyField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcBrokerInvestorCurrencyField_InvestorID_get, _riskuserapi.CShfeFtdcBrokerInvestorCurrencyField_InvestorID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcBrokerInvestorCurrencyField_CurrencyID_get, _riskuserapi.CShfeFtdcBrokerInvestorCurrencyField_CurrencyID_set)

    def __eq__(self, ct: "CShfeFtdcBrokerInvestorCurrencyField") -> "bool":
        return _riskuserapi.CShfeFtdcBrokerInvestorCurrencyField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcBrokerInvestorCurrencyField_swiginit(self, _riskuserapi.new_CShfeFtdcBrokerInvestorCurrencyField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcBrokerInvestorCurrencyField

# Register CShfeFtdcBrokerInvestorCurrencyField in _riskuserapi:
_riskuserapi.CShfeFtdcBrokerInvestorCurrencyField_swigregister(CShfeFtdcBrokerInvestorCurrencyField)
class CShfeFtdcSecAgentInvestorField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSecAgentInvestorField_BrokerID_get, _riskuserapi.CShfeFtdcSecAgentInvestorField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSecAgentInvestorField_InvestorID_get, _riskuserapi.CShfeFtdcSecAgentInvestorField_InvestorID_set)
    BrokerSecAgentID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcSecAgentInvestorField_BrokerSecAgentID_get, _riskuserapi.CShfeFtdcSecAgentInvestorField_BrokerSecAgentID_set)

    def __eq__(self, ct: "CShfeFtdcSecAgentInvestorField") -> "bool":
        return _riskuserapi.CShfeFtdcSecAgentInvestorField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSecAgentInvestorField_swiginit(self, _riskuserapi.new_CShfeFtdcSecAgentInvestorField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSecAgentInvestorField

# Register CShfeFtdcSecAgentInvestorField in _riskuserapi:
_riskuserapi.CShfeFtdcSecAgentInvestorField_swigregister(CShfeFtdcSecAgentInvestorField)
class CShfeFtdcSTStandardField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    STDCECombMarginUsed: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSTStandardField_STDCECombMarginUsed_get, _riskuserapi.CShfeFtdcSTStandardField_STDCECombMarginUsed_set)
    STGFEXCombMarginUsed: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSTStandardField_STGFEXCombMarginUsed_get, _riskuserapi.CShfeFtdcSTStandardField_STGFEXCombMarginUsed_set)

    def __eq__(self, ct: "CShfeFtdcSTStandardField") -> "bool":
        return _riskuserapi.CShfeFtdcSTStandardField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSTStandardField_swiginit(self, _riskuserapi.new_CShfeFtdcSTStandardField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSTStandardField

# Register CShfeFtdcSTStandardField in _riskuserapi:
_riskuserapi.CShfeFtdcSTStandardField_swigregister(CShfeFtdcSTStandardField)
class CShfeFtdcSTDCECombMarginParamField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    STDCECombType: "TShfeFtdcSTDCECombTypeType" = property(_riskuserapi.CShfeFtdcSTDCECombMarginParamField_STDCECombType_get, _riskuserapi.CShfeFtdcSTDCECombMarginParamField_STDCECombType_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSTDCECombMarginParamField_SequenceNo_get, _riskuserapi.CShfeFtdcSTDCECombMarginParamField_SequenceNo_set)
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSTDCECombMarginParamField_ProductID_get, _riskuserapi.CShfeFtdcSTDCECombMarginParamField_ProductID_set)
    ProductID2: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSTDCECombMarginParamField_ProductID2_get, _riskuserapi.CShfeFtdcSTDCECombMarginParamField_ProductID2_set)

    def __eq__(self, ct: "CShfeFtdcSTDCECombMarginParamField") -> "bool":
        return _riskuserapi.CShfeFtdcSTDCECombMarginParamField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSTDCECombMarginParamField_swiginit(self, _riskuserapi.new_CShfeFtdcSTDCECombMarginParamField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSTDCECombMarginParamField

# Register CShfeFtdcSTDCECombMarginParamField in _riskuserapi:
_riskuserapi.CShfeFtdcSTDCECombMarginParamField_swigregister(CShfeFtdcSTDCECombMarginParamField)
class CShfeFtdcSTDCESPInsGroupParamField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSTDCESPInsGroupParamField_ProductID_get, _riskuserapi.CShfeFtdcSTDCESPInsGroupParamField_ProductID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSTDCESPInsGroupParamField_InstrumentID_get, _riskuserapi.CShfeFtdcSTDCESPInsGroupParamField_InstrumentID_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSTDCESPInsGroupParamField_SequenceNo_get, _riskuserapi.CShfeFtdcSTDCESPInsGroupParamField_SequenceNo_set)

    def __eq__(self, ct: "CShfeFtdcSTDCESPInsGroupParamField") -> "bool":
        return _riskuserapi.CShfeFtdcSTDCESPInsGroupParamField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSTDCESPInsGroupParamField_swiginit(self, _riskuserapi.new_CShfeFtdcSTDCESPInsGroupParamField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSTDCESPInsGroupParamField

# Register CShfeFtdcSTDCESPInsGroupParamField in _riskuserapi:
_riskuserapi.CShfeFtdcSTDCESPInsGroupParamField_swigregister(CShfeFtdcSTDCESPInsGroupParamField)
class CShfeFtdcProductExchRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcProductExchRateField_ProductID_get, _riskuserapi.CShfeFtdcProductExchRateField_ProductID_set)
    QuoteCurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcProductExchRateField_QuoteCurrencyID_get, _riskuserapi.CShfeFtdcProductExchRateField_QuoteCurrencyID_set)
    ExchangeRate: "TShfeFtdcExchangeRateType" = property(_riskuserapi.CShfeFtdcProductExchRateField_ExchangeRate_get, _riskuserapi.CShfeFtdcProductExchRateField_ExchangeRate_set)

    def __eq__(self, ct: "CShfeFtdcProductExchRateField") -> "bool":
        return _riskuserapi.CShfeFtdcProductExchRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcProductExchRateField_swiginit(self, _riskuserapi.new_CShfeFtdcProductExchRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcProductExchRateField

# Register CShfeFtdcProductExchRateField in _riskuserapi:
_riskuserapi.CShfeFtdcProductExchRateField_swigregister(CShfeFtdcProductExchRateField)
class CShfeFtdcRiskInvestorPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_InstrumentID_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_InstrumentID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_BrokerID_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_InvestorID_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_InvestorID_set)
    PosiDirection: "TShfeFtdcPosiDirectionType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_PosiDirection_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_PosiDirection_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_HedgeFlag_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_HedgeFlag_set)
    PositionDate: "TShfeFtdcPositionDateType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_PositionDate_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_PositionDate_set)
    YdPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_YdPosition_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_YdPosition_set)
    Position: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_Position_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_Position_set)
    LongFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_LongFrozen_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_LongFrozen_set)
    ShortFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_ShortFrozen_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_ShortFrozen_set)
    LongFrozenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_LongFrozenAmount_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_LongFrozenAmount_set)
    ShortFrozenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_ShortFrozenAmount_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_ShortFrozenAmount_set)
    OpenVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_OpenVolume_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_OpenVolume_set)
    CloseVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_CloseVolume_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_CloseVolume_set)
    OpenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_OpenAmount_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_OpenAmount_set)
    CloseAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_CloseAmount_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_CloseAmount_set)
    PositionCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_PositionCost_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_PositionCost_set)
    PreMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_PreMargin_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_PreMargin_set)
    UseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_UseMargin_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_UseMargin_set)
    FrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_FrozenMargin_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_FrozenMargin_set)
    FrozenCash: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_FrozenCash_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_FrozenCash_set)
    FrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_FrozenCommission_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_FrozenCommission_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_CashIn_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_CashIn_set)
    Commission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_Commission_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_Commission_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_CloseProfit_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_CloseProfit_set)
    PositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_PositionProfit_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_PositionProfit_set)
    PreSettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_PreSettlementPrice_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_PreSettlementPrice_set)
    SettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_SettlementPrice_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_SettlementPrice_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_TradingDay_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_SettlementID_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_SettlementID_set)
    OpenCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_OpenCost_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_OpenCost_set)
    ExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_ExchangeMargin_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_ExchangeMargin_set)
    CombPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_CombPosition_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_CombPosition_set)
    CombLongFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_CombLongFrozen_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_CombLongFrozen_set)
    CombShortFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_CombShortFrozen_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_CombShortFrozen_set)
    CloseProfitByDate: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_CloseProfitByDate_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_CloseProfitByDate_set)
    CloseProfitByTrade: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_CloseProfitByTrade_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_CloseProfitByTrade_set)
    TodayPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_TodayPosition_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_TodayPosition_set)
    MarginRateByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_MarginRateByMoney_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_MarginRateByMoney_set)
    MarginRateByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_MarginRateByVolume_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_MarginRateByVolume_set)
    StrikeFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_StrikeFrozen_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_StrikeFrozen_set)
    StrikeFrozenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_StrikeFrozenAmount_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_StrikeFrozenAmount_set)
    AbandonFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_AbandonFrozen_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_AbandonFrozen_set)
    OptionValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_OptionValue_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_OptionValue_set)
    MaintUseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_MaintUseMargin_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_MaintUseMargin_set)
    MaintExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_MaintExchangeMargin_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_MaintExchangeMargin_set)
    IndexSettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_IndexSettlementPrice_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_IndexSettlementPrice_set)
    FixedMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_FixedMargin_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_FixedMargin_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_ExchangeID_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_ExchangeID_set)
    YdStrikeFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_YdStrikeFrozen_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_YdStrikeFrozen_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_InvestUnitID_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_InvestUnitID_set)
    PositionCostOffset: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_PositionCostOffset_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_PositionCostOffset_set)
    TasPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_TasPosition_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_TasPosition_set)
    TasPositionCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRiskInvestorPositionField_TasPositionCost_get, _riskuserapi.CShfeFtdcRiskInvestorPositionField_TasPositionCost_set)

    def __eq__(self, ct: "CShfeFtdcRiskInvestorPositionField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskInvestorPositionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskInvestorPositionField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskInvestorPositionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskInvestorPositionField

# Register CShfeFtdcRiskInvestorPositionField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskInvestorPositionField_swigregister(CShfeFtdcRiskInvestorPositionField)
class CShfeFtdcRiskQryExecOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskQryExecOrderField_BrokerID_get, _riskuserapi.CShfeFtdcRiskQryExecOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRiskQryExecOrderField_InvestorID_get, _riskuserapi.CShfeFtdcRiskQryExecOrderField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRiskQryExecOrderField_InstrumentID_get, _riskuserapi.CShfeFtdcRiskQryExecOrderField_InstrumentID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcRiskQryExecOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcRiskQryExecOrderField_ExchangeID_set)
    ExecOrderSysID: "TShfeFtdcExecOrderSysIDType" = property(_riskuserapi.CShfeFtdcRiskQryExecOrderField_ExecOrderSysID_get, _riskuserapi.CShfeFtdcRiskQryExecOrderField_ExecOrderSysID_set)
    InsertTimeStart: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRiskQryExecOrderField_InsertTimeStart_get, _riskuserapi.CShfeFtdcRiskQryExecOrderField_InsertTimeStart_set)
    InsertTimeEnd: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRiskQryExecOrderField_InsertTimeEnd_get, _riskuserapi.CShfeFtdcRiskQryExecOrderField_InsertTimeEnd_set)

    def __eq__(self, ct: "CShfeFtdcRiskQryExecOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskQryExecOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskQryExecOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskQryExecOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskQryExecOrderField

# Register CShfeFtdcRiskQryExecOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskQryExecOrderField_swigregister(CShfeFtdcRiskQryExecOrderField)
class CShfeFtdcRiskExecOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_BrokerID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_InvestorID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_InstrumentID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_InstrumentID_set)
    ExecOrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_ExecOrderRef_get, _riskuserapi.CShfeFtdcRiskExecOrderField_ExecOrderRef_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_UserID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_UserID_set)
    Volume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_Volume_get, _riskuserapi.CShfeFtdcRiskExecOrderField_Volume_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_RequestID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_RequestID_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_BusinessUnit_get, _riskuserapi.CShfeFtdcRiskExecOrderField_BusinessUnit_set)
    OffsetFlag: "TShfeFtdcOffsetFlagType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_OffsetFlag_get, _riskuserapi.CShfeFtdcRiskExecOrderField_OffsetFlag_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_HedgeFlag_get, _riskuserapi.CShfeFtdcRiskExecOrderField_HedgeFlag_set)
    ActionType: "TShfeFtdcActionTypeType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_ActionType_get, _riskuserapi.CShfeFtdcRiskExecOrderField_ActionType_set)
    PosiDirection: "TShfeFtdcPosiDirectionType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_PosiDirection_get, _riskuserapi.CShfeFtdcRiskExecOrderField_PosiDirection_set)
    ReservePositionFlag: "TShfeFtdcExecOrderPositionFlagType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_ReservePositionFlag_get, _riskuserapi.CShfeFtdcRiskExecOrderField_ReservePositionFlag_set)
    CloseFlag: "TShfeFtdcExecOrderCloseFlagType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_CloseFlag_get, _riskuserapi.CShfeFtdcRiskExecOrderField_CloseFlag_set)
    ExecOrderLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_ExecOrderLocalID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_ExecOrderLocalID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_ExchangeID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_ParticipantID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_ClientID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_ClientID_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_ExchangeInstID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_ExchangeInstID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_TraderID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_TraderID_set)
    InstallID: "TShfeFtdcInstallIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_InstallID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_InstallID_set)
    OrderSubmitStatus: "TShfeFtdcOrderSubmitStatusType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_OrderSubmitStatus_get, _riskuserapi.CShfeFtdcRiskExecOrderField_OrderSubmitStatus_set)
    NotifySequence: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_NotifySequence_get, _riskuserapi.CShfeFtdcRiskExecOrderField_NotifySequence_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_TradingDay_get, _riskuserapi.CShfeFtdcRiskExecOrderField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_SettlementID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_SettlementID_set)
    ExecOrderSysID: "TShfeFtdcExecOrderSysIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_ExecOrderSysID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_ExecOrderSysID_set)
    InsertDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_InsertDate_get, _riskuserapi.CShfeFtdcRiskExecOrderField_InsertDate_set)
    InsertTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_InsertTime_get, _riskuserapi.CShfeFtdcRiskExecOrderField_InsertTime_set)
    CancelTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_CancelTime_get, _riskuserapi.CShfeFtdcRiskExecOrderField_CancelTime_set)
    ExecResult: "TShfeFtdcExecResultType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_ExecResult_get, _riskuserapi.CShfeFtdcRiskExecOrderField_ExecResult_set)
    ClearingPartID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_ClearingPartID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_ClearingPartID_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_SequenceNo_get, _riskuserapi.CShfeFtdcRiskExecOrderField_SequenceNo_set)
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_FrontID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_FrontID_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_SessionID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_SessionID_set)
    UserProductInfo: "TShfeFtdcProductInfoType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_UserProductInfo_get, _riskuserapi.CShfeFtdcRiskExecOrderField_UserProductInfo_set)
    StatusMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_StatusMsg_get, _riskuserapi.CShfeFtdcRiskExecOrderField_StatusMsg_set)
    ActiveUserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_ActiveUserID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_ActiveUserID_set)
    BrokerExecOrderSeq: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_BrokerExecOrderSeq_get, _riskuserapi.CShfeFtdcRiskExecOrderField_BrokerExecOrderSeq_set)
    BranchID: "TShfeFtdcBranchIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_BranchID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_BranchID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_InvestUnitID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_InvestUnitID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_AccountID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_CurrencyID_get, _riskuserapi.CShfeFtdcRiskExecOrderField_CurrencyID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_IPAddress_get, _riskuserapi.CShfeFtdcRiskExecOrderField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcRiskExecOrderField_MacAddress_get, _riskuserapi.CShfeFtdcRiskExecOrderField_MacAddress_set)

    def __eq__(self, ct: "CShfeFtdcRiskExecOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskExecOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskExecOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskExecOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskExecOrderField

# Register CShfeFtdcRiskExecOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskExecOrderField_swigregister(CShfeFtdcRiskExecOrderField)
class CShfeFtdcOptionInstrCommRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcOptionInstrCommRateField_InstrumentID_get, _riskuserapi.CShfeFtdcOptionInstrCommRateField_InstrumentID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcOptionInstrCommRateField_InvestorRange_get, _riskuserapi.CShfeFtdcOptionInstrCommRateField_InvestorRange_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcOptionInstrCommRateField_BrokerID_get, _riskuserapi.CShfeFtdcOptionInstrCommRateField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcOptionInstrCommRateField_InvestorID_get, _riskuserapi.CShfeFtdcOptionInstrCommRateField_InvestorID_set)
    OpenRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcOptionInstrCommRateField_OpenRatioByMoney_get, _riskuserapi.CShfeFtdcOptionInstrCommRateField_OpenRatioByMoney_set)
    OpenRatioByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcOptionInstrCommRateField_OpenRatioByVolume_get, _riskuserapi.CShfeFtdcOptionInstrCommRateField_OpenRatioByVolume_set)
    CloseRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcOptionInstrCommRateField_CloseRatioByMoney_get, _riskuserapi.CShfeFtdcOptionInstrCommRateField_CloseRatioByMoney_set)
    CloseRatioByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcOptionInstrCommRateField_CloseRatioByVolume_get, _riskuserapi.CShfeFtdcOptionInstrCommRateField_CloseRatioByVolume_set)
    CloseTodayRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcOptionInstrCommRateField_CloseTodayRatioByMoney_get, _riskuserapi.CShfeFtdcOptionInstrCommRateField_CloseTodayRatioByMoney_set)
    CloseTodayRatioByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcOptionInstrCommRateField_CloseTodayRatioByVolume_get, _riskuserapi.CShfeFtdcOptionInstrCommRateField_CloseTodayRatioByVolume_set)
    StrikeRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcOptionInstrCommRateField_StrikeRatioByMoney_get, _riskuserapi.CShfeFtdcOptionInstrCommRateField_StrikeRatioByMoney_set)
    StrikeRatioByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcOptionInstrCommRateField_StrikeRatioByVolume_get, _riskuserapi.CShfeFtdcOptionInstrCommRateField_StrikeRatioByVolume_set)

    def __eq__(self, ct: "CShfeFtdcOptionInstrCommRateField") -> "bool":
        return _riskuserapi.CShfeFtdcOptionInstrCommRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcOptionInstrCommRateField_swiginit(self, _riskuserapi.new_CShfeFtdcOptionInstrCommRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcOptionInstrCommRateField

# Register CShfeFtdcOptionInstrCommRateField in _riskuserapi:
_riskuserapi.CShfeFtdcOptionInstrCommRateField_swigregister(CShfeFtdcOptionInstrCommRateField)
class CShfeFtdcQryOptionInstrCommRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryOptionInstrCommRateField_BrokerID_get, _riskuserapi.CShfeFtdcQryOptionInstrCommRateField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryOptionInstrCommRateField_InvestorID_get, _riskuserapi.CShfeFtdcQryOptionInstrCommRateField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryOptionInstrCommRateField_InstrumentID_get, _riskuserapi.CShfeFtdcQryOptionInstrCommRateField_InstrumentID_set)

    def __eq__(self, ct: "CShfeFtdcQryOptionInstrCommRateField") -> "bool":
        return _riskuserapi.CShfeFtdcQryOptionInstrCommRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryOptionInstrCommRateField_swiginit(self, _riskuserapi.new_CShfeFtdcQryOptionInstrCommRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryOptionInstrCommRateField

# Register CShfeFtdcQryOptionInstrCommRateField in _riskuserapi:
_riskuserapi.CShfeFtdcQryOptionInstrCommRateField_swigregister(CShfeFtdcQryOptionInstrCommRateField)
class CShfeFtdcMMOptionInstrCommRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcMMOptionInstrCommRateField_InstrumentID_get, _riskuserapi.CShfeFtdcMMOptionInstrCommRateField_InstrumentID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcMMOptionInstrCommRateField_InvestorRange_get, _riskuserapi.CShfeFtdcMMOptionInstrCommRateField_InvestorRange_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcMMOptionInstrCommRateField_BrokerID_get, _riskuserapi.CShfeFtdcMMOptionInstrCommRateField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcMMOptionInstrCommRateField_InvestorID_get, _riskuserapi.CShfeFtdcMMOptionInstrCommRateField_InvestorID_set)
    OpenRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcMMOptionInstrCommRateField_OpenRatioByMoney_get, _riskuserapi.CShfeFtdcMMOptionInstrCommRateField_OpenRatioByMoney_set)
    OpenRatioByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcMMOptionInstrCommRateField_OpenRatioByVolume_get, _riskuserapi.CShfeFtdcMMOptionInstrCommRateField_OpenRatioByVolume_set)
    CloseRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcMMOptionInstrCommRateField_CloseRatioByMoney_get, _riskuserapi.CShfeFtdcMMOptionInstrCommRateField_CloseRatioByMoney_set)
    CloseRatioByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcMMOptionInstrCommRateField_CloseRatioByVolume_get, _riskuserapi.CShfeFtdcMMOptionInstrCommRateField_CloseRatioByVolume_set)
    CloseTodayRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcMMOptionInstrCommRateField_CloseTodayRatioByMoney_get, _riskuserapi.CShfeFtdcMMOptionInstrCommRateField_CloseTodayRatioByMoney_set)
    CloseTodayRatioByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcMMOptionInstrCommRateField_CloseTodayRatioByVolume_get, _riskuserapi.CShfeFtdcMMOptionInstrCommRateField_CloseTodayRatioByVolume_set)
    StrikeRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcMMOptionInstrCommRateField_StrikeRatioByMoney_get, _riskuserapi.CShfeFtdcMMOptionInstrCommRateField_StrikeRatioByMoney_set)
    StrikeRatioByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcMMOptionInstrCommRateField_StrikeRatioByVolume_get, _riskuserapi.CShfeFtdcMMOptionInstrCommRateField_StrikeRatioByVolume_set)

    def __eq__(self, ct: "CShfeFtdcMMOptionInstrCommRateField") -> "bool":
        return _riskuserapi.CShfeFtdcMMOptionInstrCommRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcMMOptionInstrCommRateField_swiginit(self, _riskuserapi.new_CShfeFtdcMMOptionInstrCommRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcMMOptionInstrCommRateField

# Register CShfeFtdcMMOptionInstrCommRateField in _riskuserapi:
_riskuserapi.CShfeFtdcMMOptionInstrCommRateField_swigregister(CShfeFtdcMMOptionInstrCommRateField)
class CShfeFtdcQryMMOptionInstrCommRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryMMOptionInstrCommRateField_BrokerID_get, _riskuserapi.CShfeFtdcQryMMOptionInstrCommRateField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryMMOptionInstrCommRateField_InvestorID_get, _riskuserapi.CShfeFtdcQryMMOptionInstrCommRateField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryMMOptionInstrCommRateField_InstrumentID_get, _riskuserapi.CShfeFtdcQryMMOptionInstrCommRateField_InstrumentID_set)

    def __eq__(self, ct: "CShfeFtdcQryMMOptionInstrCommRateField") -> "bool":
        return _riskuserapi.CShfeFtdcQryMMOptionInstrCommRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryMMOptionInstrCommRateField_swiginit(self, _riskuserapi.new_CShfeFtdcQryMMOptionInstrCommRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryMMOptionInstrCommRateField

# Register CShfeFtdcQryMMOptionInstrCommRateField in _riskuserapi:
_riskuserapi.CShfeFtdcQryMMOptionInstrCommRateField_swigregister(CShfeFtdcQryMMOptionInstrCommRateField)
class CShfeFtdcRiskQryLogUserLoginStatField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskQryLogUserLoginStatField_BrokerID_get, _riskuserapi.CShfeFtdcRiskQryLogUserLoginStatField_BrokerID_set)
    FailNumByUser: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskQryLogUserLoginStatField_FailNumByUser_get, _riskuserapi.CShfeFtdcRiskQryLogUserLoginStatField_FailNumByUser_set)
    AddressNumByUser: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskQryLogUserLoginStatField_AddressNumByUser_get, _riskuserapi.CShfeFtdcRiskQryLogUserLoginStatField_AddressNumByUser_set)
    UserNumByAddress: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskQryLogUserLoginStatField_UserNumByAddress_get, _riskuserapi.CShfeFtdcRiskQryLogUserLoginStatField_UserNumByAddress_set)
    TotalNumByAddress: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskQryLogUserLoginStatField_TotalNumByAddress_get, _riskuserapi.CShfeFtdcRiskQryLogUserLoginStatField_TotalNumByAddress_set)

    def __eq__(self, ct: "CShfeFtdcRiskQryLogUserLoginStatField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskQryLogUserLoginStatField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskQryLogUserLoginStatField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskQryLogUserLoginStatField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskQryLogUserLoginStatField

# Register CShfeFtdcRiskQryLogUserLoginStatField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskQryLogUserLoginStatField_swigregister(CShfeFtdcRiskQryLogUserLoginStatField)
class CShfeFtdcRiskLogUserLoginStatField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    StatType: "TShfeFtdcLoginStatTypeType" = property(_riskuserapi.CShfeFtdcRiskLogUserLoginStatField_StatType_get, _riskuserapi.CShfeFtdcRiskLogUserLoginStatField_StatType_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskLogUserLoginStatField_BrokerID_get, _riskuserapi.CShfeFtdcRiskLogUserLoginStatField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRiskLogUserLoginStatField_UserID_get, _riskuserapi.CShfeFtdcRiskLogUserLoginStatField_UserID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcRiskLogUserLoginStatField_IPAddress_get, _riskuserapi.CShfeFtdcRiskLogUserLoginStatField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcRiskLogUserLoginStatField_MacAddress_get, _riskuserapi.CShfeFtdcRiskLogUserLoginStatField_MacAddress_set)
    TotalNum: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskLogUserLoginStatField_TotalNum_get, _riskuserapi.CShfeFtdcRiskLogUserLoginStatField_TotalNum_set)
    SuccessNum: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskLogUserLoginStatField_SuccessNum_get, _riskuserapi.CShfeFtdcRiskLogUserLoginStatField_SuccessNum_set)
    FailNum: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskLogUserLoginStatField_FailNum_get, _riskuserapi.CShfeFtdcRiskLogUserLoginStatField_FailNum_set)
    UserNumByAddress: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskLogUserLoginStatField_UserNumByAddress_get, _riskuserapi.CShfeFtdcRiskLogUserLoginStatField_UserNumByAddress_set)
    AddressNumByUser: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskLogUserLoginStatField_AddressNumByUser_get, _riskuserapi.CShfeFtdcRiskLogUserLoginStatField_AddressNumByUser_set)

    def __eq__(self, ct: "CShfeFtdcRiskLogUserLoginStatField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskLogUserLoginStatField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskLogUserLoginStatField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskLogUserLoginStatField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskLogUserLoginStatField

# Register CShfeFtdcRiskLogUserLoginStatField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskLogUserLoginStatField_swigregister(CShfeFtdcRiskLogUserLoginStatField)
class CShfeFtdcRiskQryLogUserLoginInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskQryLogUserLoginInfoField_BrokerID_get, _riskuserapi.CShfeFtdcRiskQryLogUserLoginInfoField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRiskQryLogUserLoginInfoField_UserID_get, _riskuserapi.CShfeFtdcRiskQryLogUserLoginInfoField_UserID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcRiskQryLogUserLoginInfoField_IPAddress_get, _riskuserapi.CShfeFtdcRiskQryLogUserLoginInfoField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcRiskQryLogUserLoginInfoField_MacAddress_get, _riskuserapi.CShfeFtdcRiskQryLogUserLoginInfoField_MacAddress_set)

    def __eq__(self, ct: "CShfeFtdcRiskQryLogUserLoginInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskQryLogUserLoginInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskQryLogUserLoginInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskQryLogUserLoginInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskQryLogUserLoginInfoField

# Register CShfeFtdcRiskQryLogUserLoginInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskQryLogUserLoginInfoField_swigregister(CShfeFtdcRiskQryLogUserLoginInfoField)
class CShfeFtdcRiskLogUserLoginInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRiskLogUserLoginInfoField_TradingDay_get, _riskuserapi.CShfeFtdcRiskLogUserLoginInfoField_TradingDay_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskLogUserLoginInfoField_BrokerID_get, _riskuserapi.CShfeFtdcRiskLogUserLoginInfoField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRiskLogUserLoginInfoField_UserID_get, _riskuserapi.CShfeFtdcRiskLogUserLoginInfoField_UserID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcRiskLogUserLoginInfoField_IPAddress_get, _riskuserapi.CShfeFtdcRiskLogUserLoginInfoField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcRiskLogUserLoginInfoField_MacAddress_get, _riskuserapi.CShfeFtdcRiskLogUserLoginInfoField_MacAddress_set)
    TotalNum: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskLogUserLoginInfoField_TotalNum_get, _riskuserapi.CShfeFtdcRiskLogUserLoginInfoField_TotalNum_set)
    SuccessNum: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskLogUserLoginInfoField_SuccessNum_get, _riskuserapi.CShfeFtdcRiskLogUserLoginInfoField_SuccessNum_set)
    FailNum: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRiskLogUserLoginInfoField_FailNum_get, _riskuserapi.CShfeFtdcRiskLogUserLoginInfoField_FailNum_set)

    def __eq__(self, ct: "CShfeFtdcRiskLogUserLoginInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskLogUserLoginInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskLogUserLoginInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskLogUserLoginInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskLogUserLoginInfoField

# Register CShfeFtdcRiskLogUserLoginInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskLogUserLoginInfoField_swigregister(CShfeFtdcRiskLogUserLoginInfoField)
class CShfeFtdcRiskQryInstrumentGreeksField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskQryInstrumentGreeksField_BrokerID_get, _riskuserapi.CShfeFtdcRiskQryInstrumentGreeksField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRiskQryInstrumentGreeksField_UserID_get, _riskuserapi.CShfeFtdcRiskQryInstrumentGreeksField_UserID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRiskQryInstrumentGreeksField_InstrumentID_get, _riskuserapi.CShfeFtdcRiskQryInstrumentGreeksField_InstrumentID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcRiskQryInstrumentGreeksField_ExchangeID_get, _riskuserapi.CShfeFtdcRiskQryInstrumentGreeksField_ExchangeID_set)

    def __eq__(self, ct: "CShfeFtdcRiskQryInstrumentGreeksField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskQryInstrumentGreeksField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskQryInstrumentGreeksField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskQryInstrumentGreeksField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskQryInstrumentGreeksField

# Register CShfeFtdcRiskQryInstrumentGreeksField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskQryInstrumentGreeksField_swigregister(CShfeFtdcRiskQryInstrumentGreeksField)
class CShfeFtdcRiskInstrumentGreeksField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRiskInstrumentGreeksField_InstrumentID_get, _riskuserapi.CShfeFtdcRiskInstrumentGreeksField_InstrumentID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcRiskInstrumentGreeksField_ExchangeID_get, _riskuserapi.CShfeFtdcRiskInstrumentGreeksField_ExchangeID_set)
    Delta: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcRiskInstrumentGreeksField_Delta_get, _riskuserapi.CShfeFtdcRiskInstrumentGreeksField_Delta_set)
    Gamma: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcRiskInstrumentGreeksField_Gamma_get, _riskuserapi.CShfeFtdcRiskInstrumentGreeksField_Gamma_set)
    Vega: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcRiskInstrumentGreeksField_Vega_get, _riskuserapi.CShfeFtdcRiskInstrumentGreeksField_Vega_set)
    Theta: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcRiskInstrumentGreeksField_Theta_get, _riskuserapi.CShfeFtdcRiskInstrumentGreeksField_Theta_set)
    SettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcRiskInstrumentGreeksField_SettlementPrice_get, _riskuserapi.CShfeFtdcRiskInstrumentGreeksField_SettlementPrice_set)
    volatility: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcRiskInstrumentGreeksField_volatility_get, _riskuserapi.CShfeFtdcRiskInstrumentGreeksField_volatility_set)

    def __eq__(self, ct: "CShfeFtdcRiskInstrumentGreeksField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskInstrumentGreeksField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskInstrumentGreeksField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskInstrumentGreeksField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskInstrumentGreeksField

# Register CShfeFtdcRiskInstrumentGreeksField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskInstrumentGreeksField_swigregister(CShfeFtdcRiskInstrumentGreeksField)
class CShfeFtdcETPriceField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcETPriceField_BrokerID_get, _riskuserapi.CShfeFtdcETPriceField_BrokerID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcETPriceField_InvestorRange_get, _riskuserapi.CShfeFtdcETPriceField_InvestorRange_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcETPriceField_InvestorID_get, _riskuserapi.CShfeFtdcETPriceField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcETPriceField_InstrumentID_get, _riskuserapi.CShfeFtdcETPriceField_InstrumentID_set)
    PriceType: "TShfeFtdcPriceTypeType" = property(_riskuserapi.CShfeFtdcETPriceField_PriceType_get, _riskuserapi.CShfeFtdcETPriceField_PriceType_set)
    Price: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcETPriceField_Price_get, _riskuserapi.CShfeFtdcETPriceField_Price_set)

    def __eq__(self, ct: "CShfeFtdcETPriceField") -> "bool":
        return _riskuserapi.CShfeFtdcETPriceField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcETPriceField_swiginit(self, _riskuserapi.new_CShfeFtdcETPriceField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcETPriceField

# Register CShfeFtdcETPriceField in _riskuserapi:
_riskuserapi.CShfeFtdcETPriceField_swigregister(CShfeFtdcETPriceField)
class CShfeFtdcETStrikePositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcETStrikePositionField_InstrumentID_get, _riskuserapi.CShfeFtdcETStrikePositionField_InstrumentID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcETStrikePositionField_BrokerID_get, _riskuserapi.CShfeFtdcETStrikePositionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcETStrikePositionField_InvestorID_get, _riskuserapi.CShfeFtdcETStrikePositionField_InvestorID_set)
    PosiDirection: "TShfeFtdcPosiDirectionType" = property(_riskuserapi.CShfeFtdcETStrikePositionField_PosiDirection_get, _riskuserapi.CShfeFtdcETStrikePositionField_PosiDirection_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcETStrikePositionField_HedgeFlag_get, _riskuserapi.CShfeFtdcETStrikePositionField_HedgeFlag_set)
    PositionDate: "TShfeFtdcPositionDateType" = property(_riskuserapi.CShfeFtdcETStrikePositionField_PositionDate_get, _riskuserapi.CShfeFtdcETStrikePositionField_PositionDate_set)
    Position: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcETStrikePositionField_Position_get, _riskuserapi.CShfeFtdcETStrikePositionField_Position_set)
    EXEPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcETStrikePositionField_EXEPosition_get, _riskuserapi.CShfeFtdcETStrikePositionField_EXEPosition_set)
    EXEPriceType: "TShfeFtdcPriceTypeType" = property(_riskuserapi.CShfeFtdcETStrikePositionField_EXEPriceType_get, _riskuserapi.CShfeFtdcETStrikePositionField_EXEPriceType_set)
    EXEPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcETStrikePositionField_EXEPrice_get, _riskuserapi.CShfeFtdcETStrikePositionField_EXEPrice_set)

    def __eq__(self, ct: "CShfeFtdcETStrikePositionField") -> "bool":
        return _riskuserapi.CShfeFtdcETStrikePositionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcETStrikePositionField_swiginit(self, _riskuserapi.new_CShfeFtdcETStrikePositionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcETStrikePositionField

# Register CShfeFtdcETStrikePositionField in _riskuserapi:
_riskuserapi.CShfeFtdcETStrikePositionField_swigregister(CShfeFtdcETStrikePositionField)
class CShfeFtdcETDCECombMarginParamField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    STDCECombType: "TShfeFtdcSTDCECombTypeType" = property(_riskuserapi.CShfeFtdcETDCECombMarginParamField_STDCECombType_get, _riskuserapi.CShfeFtdcETDCECombMarginParamField_STDCECombType_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcETDCECombMarginParamField_SequenceNo_get, _riskuserapi.CShfeFtdcETDCECombMarginParamField_SequenceNo_set)
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcETDCECombMarginParamField_ProductID_get, _riskuserapi.CShfeFtdcETDCECombMarginParamField_ProductID_set)
    ProductID2: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcETDCECombMarginParamField_ProductID2_get, _riskuserapi.CShfeFtdcETDCECombMarginParamField_ProductID2_set)

    def __eq__(self, ct: "CShfeFtdcETDCECombMarginParamField") -> "bool":
        return _riskuserapi.CShfeFtdcETDCECombMarginParamField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcETDCECombMarginParamField_swiginit(self, _riskuserapi.new_CShfeFtdcETDCECombMarginParamField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcETDCECombMarginParamField

# Register CShfeFtdcETDCECombMarginParamField in _riskuserapi:
_riskuserapi.CShfeFtdcETDCECombMarginParamField_swigregister(CShfeFtdcETDCECombMarginParamField)
class CShfeFtdcETDCESPInsGroupParamField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcETDCESPInsGroupParamField_ProductID_get, _riskuserapi.CShfeFtdcETDCESPInsGroupParamField_ProductID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcETDCESPInsGroupParamField_InstrumentID_get, _riskuserapi.CShfeFtdcETDCESPInsGroupParamField_InstrumentID_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcETDCESPInsGroupParamField_SequenceNo_get, _riskuserapi.CShfeFtdcETDCESPInsGroupParamField_SequenceNo_set)

    def __eq__(self, ct: "CShfeFtdcETDCESPInsGroupParamField") -> "bool":
        return _riskuserapi.CShfeFtdcETDCESPInsGroupParamField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcETDCESPInsGroupParamField_swiginit(self, _riskuserapi.new_CShfeFtdcETDCESPInsGroupParamField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcETDCESPInsGroupParamField

# Register CShfeFtdcETDCESPInsGroupParamField in _riskuserapi:
_riskuserapi.CShfeFtdcETDCESPInsGroupParamField_swigregister(CShfeFtdcETDCESPInsGroupParamField)
class CShfeFtdcInvestorTestResultField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorTestResultField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorTestResultField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorTestResultField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorTestResultField_InvestorID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcInvestorTestResultField_AccountID_get, _riskuserapi.CShfeFtdcInvestorTestResultField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcInvestorTestResultField_CurrencyID_get, _riskuserapi.CShfeFtdcInvestorTestResultField_CurrencyID_set)
    Balance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorTestResultField_Balance_get, _riskuserapi.CShfeFtdcInvestorTestResultField_Balance_set)
    Available: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorTestResultField_Available_get, _riskuserapi.CShfeFtdcInvestorTestResultField_Available_set)
    LongExeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorTestResultField_LongExeMargin_get, _riskuserapi.CShfeFtdcInvestorTestResultField_LongExeMargin_set)
    ShortExeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorTestResultField_ShortExeMargin_get, _riskuserapi.CShfeFtdcInvestorTestResultField_ShortExeMargin_set)
    ExeMoney: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorTestResultField_ExeMoney_get, _riskuserapi.CShfeFtdcInvestorTestResultField_ExeMoney_set)
    ExeProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorTestResultField_ExeProfit_get, _riskuserapi.CShfeFtdcInvestorTestResultField_ExeProfit_set)
    ReleaseMoney: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorTestResultField_ReleaseMoney_get, _riskuserapi.CShfeFtdcInvestorTestResultField_ReleaseMoney_set)
    RiskValue: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInvestorTestResultField_RiskValue_get, _riskuserapi.CShfeFtdcInvestorTestResultField_RiskValue_set)
    ExchangeRiskValue: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInvestorTestResultField_ExchangeRiskValue_get, _riskuserapi.CShfeFtdcInvestorTestResultField_ExchangeRiskValue_set)
    ExchangeAvailable: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorTestResultField_ExchangeAvailable_get, _riskuserapi.CShfeFtdcInvestorTestResultField_ExchangeAvailable_set)
    NewAvailable: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorTestResultField_NewAvailable_get, _riskuserapi.CShfeFtdcInvestorTestResultField_NewAvailable_set)

    def __eq__(self, ct: "CShfeFtdcInvestorTestResultField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorTestResultField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorTestResultField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorTestResultField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorTestResultField

# Register CShfeFtdcInvestorTestResultField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorTestResultField_swigregister(CShfeFtdcInvestorTestResultField)
class CShfeFtdcUserRightsAssignField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcUserRightsAssignField_BrokerID_get, _riskuserapi.CShfeFtdcUserRightsAssignField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcUserRightsAssignField_UserID_get, _riskuserapi.CShfeFtdcUserRightsAssignField_UserID_set)
    DRIdentityID: "TShfeFtdcDRIdentityIDType" = property(_riskuserapi.CShfeFtdcUserRightsAssignField_DRIdentityID_get, _riskuserapi.CShfeFtdcUserRightsAssignField_DRIdentityID_set)

    def __eq__(self, ct: "CShfeFtdcUserRightsAssignField") -> "bool":
        return _riskuserapi.CShfeFtdcUserRightsAssignField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcUserRightsAssignField_swiginit(self, _riskuserapi.new_CShfeFtdcUserRightsAssignField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcUserRightsAssignField

# Register CShfeFtdcUserRightsAssignField in _riskuserapi:
_riskuserapi.CShfeFtdcUserRightsAssignField_swigregister(CShfeFtdcUserRightsAssignField)
class CShfeFtdcCurrDRIdentityField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DRIdentityID: "TShfeFtdcDRIdentityIDType" = property(_riskuserapi.CShfeFtdcCurrDRIdentityField_DRIdentityID_get, _riskuserapi.CShfeFtdcCurrDRIdentityField_DRIdentityID_set)

    def __eq__(self, ct: "CShfeFtdcCurrDRIdentityField") -> "bool":
        return _riskuserapi.CShfeFtdcCurrDRIdentityField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcCurrDRIdentityField_swiginit(self, _riskuserapi.new_CShfeFtdcCurrDRIdentityField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcCurrDRIdentityField

# Register CShfeFtdcCurrDRIdentityField in _riskuserapi:
_riskuserapi.CShfeFtdcCurrDRIdentityField_swigregister(CShfeFtdcCurrDRIdentityField)
class CShfeFtdcQrySyncDelaySwapField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQrySyncDelaySwapField_BrokerID_get, _riskuserapi.CShfeFtdcQrySyncDelaySwapField_BrokerID_set)
    DelaySwapSeqNo: "TShfeFtdcDepositSeqNoType" = property(_riskuserapi.CShfeFtdcQrySyncDelaySwapField_DelaySwapSeqNo_get, _riskuserapi.CShfeFtdcQrySyncDelaySwapField_DelaySwapSeqNo_set)

    def __eq__(self, ct: "CShfeFtdcQrySyncDelaySwapField") -> "bool":
        return _riskuserapi.CShfeFtdcQrySyncDelaySwapField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQrySyncDelaySwapField_swiginit(self, _riskuserapi.new_CShfeFtdcQrySyncDelaySwapField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQrySyncDelaySwapField

# Register CShfeFtdcQrySyncDelaySwapField in _riskuserapi:
_riskuserapi.CShfeFtdcQrySyncDelaySwapField_swigregister(CShfeFtdcQrySyncDelaySwapField)
class CShfeFtdcSyncDelaySwapField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DelaySwapSeqNo: "TShfeFtdcDepositSeqNoType" = property(_riskuserapi.CShfeFtdcSyncDelaySwapField_DelaySwapSeqNo_get, _riskuserapi.CShfeFtdcSyncDelaySwapField_DelaySwapSeqNo_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSyncDelaySwapField_BrokerID_get, _riskuserapi.CShfeFtdcSyncDelaySwapField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSyncDelaySwapField_InvestorID_get, _riskuserapi.CShfeFtdcSyncDelaySwapField_InvestorID_set)
    FromCurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcSyncDelaySwapField_FromCurrencyID_get, _riskuserapi.CShfeFtdcSyncDelaySwapField_FromCurrencyID_set)
    FromAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncDelaySwapField_FromAmount_get, _riskuserapi.CShfeFtdcSyncDelaySwapField_FromAmount_set)
    FromFrozenSwap: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncDelaySwapField_FromFrozenSwap_get, _riskuserapi.CShfeFtdcSyncDelaySwapField_FromFrozenSwap_set)
    FromRemainSwap: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncDelaySwapField_FromRemainSwap_get, _riskuserapi.CShfeFtdcSyncDelaySwapField_FromRemainSwap_set)
    ToCurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcSyncDelaySwapField_ToCurrencyID_get, _riskuserapi.CShfeFtdcSyncDelaySwapField_ToCurrencyID_set)
    ToAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncDelaySwapField_ToAmount_get, _riskuserapi.CShfeFtdcSyncDelaySwapField_ToAmount_set)
    IsManualSwap: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSyncDelaySwapField_IsManualSwap_get, _riskuserapi.CShfeFtdcSyncDelaySwapField_IsManualSwap_set)
    IsAllRemainSetZero: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSyncDelaySwapField_IsAllRemainSetZero_get, _riskuserapi.CShfeFtdcSyncDelaySwapField_IsAllRemainSetZero_set)

    def __eq__(self, ct: "CShfeFtdcSyncDelaySwapField") -> "bool":
        return _riskuserapi.CShfeFtdcSyncDelaySwapField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSyncDelaySwapField_swiginit(self, _riskuserapi.new_CShfeFtdcSyncDelaySwapField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSyncDelaySwapField

# Register CShfeFtdcSyncDelaySwapField in _riskuserapi:
_riskuserapi.CShfeFtdcSyncDelaySwapField_swigregister(CShfeFtdcSyncDelaySwapField)
class CShfeFtdcSecAgentCheckModeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSecAgentCheckModeField_InvestorID_get, _riskuserapi.CShfeFtdcSecAgentCheckModeField_InvestorID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSecAgentCheckModeField_BrokerID_get, _riskuserapi.CShfeFtdcSecAgentCheckModeField_BrokerID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcSecAgentCheckModeField_CurrencyID_get, _riskuserapi.CShfeFtdcSecAgentCheckModeField_CurrencyID_set)
    BrokerSecAgentID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcSecAgentCheckModeField_BrokerSecAgentID_get, _riskuserapi.CShfeFtdcSecAgentCheckModeField_BrokerSecAgentID_set)
    CheckSelfAccount: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSecAgentCheckModeField_CheckSelfAccount_get, _riskuserapi.CShfeFtdcSecAgentCheckModeField_CheckSelfAccount_set)

    def __eq__(self, ct: "CShfeFtdcSecAgentCheckModeField") -> "bool":
        return _riskuserapi.CShfeFtdcSecAgentCheckModeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSecAgentCheckModeField_swiginit(self, _riskuserapi.new_CShfeFtdcSecAgentCheckModeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSecAgentCheckModeField

# Register CShfeFtdcSecAgentCheckModeField in _riskuserapi:
_riskuserapi.CShfeFtdcSecAgentCheckModeField_swigregister(CShfeFtdcSecAgentCheckModeField)
class CShfeFtdcQrySecAgentCheckModeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQrySecAgentCheckModeField_BrokerID_get, _riskuserapi.CShfeFtdcQrySecAgentCheckModeField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQrySecAgentCheckModeField_InvestorID_get, _riskuserapi.CShfeFtdcQrySecAgentCheckModeField_InvestorID_set)

    def __eq__(self, ct: "CShfeFtdcQrySecAgentCheckModeField") -> "bool":
        return _riskuserapi.CShfeFtdcQrySecAgentCheckModeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQrySecAgentCheckModeField_swiginit(self, _riskuserapi.new_CShfeFtdcQrySecAgentCheckModeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQrySecAgentCheckModeField

# Register CShfeFtdcQrySecAgentCheckModeField in _riskuserapi:
_riskuserapi.CShfeFtdcQrySecAgentCheckModeField_swigregister(CShfeFtdcQrySecAgentCheckModeField)
class CShfeFtdcSecAgentTradeInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSecAgentTradeInfoField_BrokerID_get, _riskuserapi.CShfeFtdcSecAgentTradeInfoField_BrokerID_set)
    BrokerSecAgentID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcSecAgentTradeInfoField_BrokerSecAgentID_get, _riskuserapi.CShfeFtdcSecAgentTradeInfoField_BrokerSecAgentID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSecAgentTradeInfoField_InvestorID_get, _riskuserapi.CShfeFtdcSecAgentTradeInfoField_InvestorID_set)
    LongCustomerName: "TShfeFtdcLongIndividualNameType" = property(_riskuserapi.CShfeFtdcSecAgentTradeInfoField_LongCustomerName_get, _riskuserapi.CShfeFtdcSecAgentTradeInfoField_LongCustomerName_set)

    def __eq__(self, ct: "CShfeFtdcSecAgentTradeInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcSecAgentTradeInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSecAgentTradeInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcSecAgentTradeInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSecAgentTradeInfoField

# Register CShfeFtdcSecAgentTradeInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcSecAgentTradeInfoField_swigregister(CShfeFtdcSecAgentTradeInfoField)
class CShfeFtdcQrySecAgentTradeInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQrySecAgentTradeInfoField_BrokerID_get, _riskuserapi.CShfeFtdcQrySecAgentTradeInfoField_BrokerID_set)
    BrokerSecAgentID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcQrySecAgentTradeInfoField_BrokerSecAgentID_get, _riskuserapi.CShfeFtdcQrySecAgentTradeInfoField_BrokerSecAgentID_set)

    def __eq__(self, ct: "CShfeFtdcQrySecAgentTradeInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcQrySecAgentTradeInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQrySecAgentTradeInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcQrySecAgentTradeInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQrySecAgentTradeInfoField

# Register CShfeFtdcQrySecAgentTradeInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcQrySecAgentTradeInfoField_swigregister(CShfeFtdcQrySecAgentTradeInfoField)
class CShfeFtdcDcePersistPositionCombineField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcDcePersistPositionCombineField_BrokerID_get, _riskuserapi.CShfeFtdcDcePersistPositionCombineField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcDcePersistPositionCombineField_InvestorID_get, _riskuserapi.CShfeFtdcDcePersistPositionCombineField_InvestorID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcDcePersistPositionCombineField_ExchangeID_get, _riskuserapi.CShfeFtdcDcePersistPositionCombineField_ExchangeID_set)

    def __eq__(self, ct: "CShfeFtdcDcePersistPositionCombineField") -> "bool":
        return _riskuserapi.CShfeFtdcDcePersistPositionCombineField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcDcePersistPositionCombineField_swiginit(self, _riskuserapi.new_CShfeFtdcDcePersistPositionCombineField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcDcePersistPositionCombineField

# Register CShfeFtdcDcePersistPositionCombineField in _riskuserapi:
_riskuserapi.CShfeFtdcDcePersistPositionCombineField_swigregister(CShfeFtdcDcePersistPositionCombineField)
class CShfeFtdcOptionTradePriceField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcOptionTradePriceField_BrokerID_get, _riskuserapi.CShfeFtdcOptionTradePriceField_BrokerID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcOptionTradePriceField_InvestorRange_get, _riskuserapi.CShfeFtdcOptionTradePriceField_InvestorRange_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcOptionTradePriceField_InvestorID_get, _riskuserapi.CShfeFtdcOptionTradePriceField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcOptionTradePriceField_InstrumentID_get, _riskuserapi.CShfeFtdcOptionTradePriceField_InstrumentID_set)
    PriceType: "TShfeFtdcPriceTypeType" = property(_riskuserapi.CShfeFtdcOptionTradePriceField_PriceType_get, _riskuserapi.CShfeFtdcOptionTradePriceField_PriceType_set)
    Price: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcOptionTradePriceField_Price_get, _riskuserapi.CShfeFtdcOptionTradePriceField_Price_set)

    def __eq__(self, ct: "CShfeFtdcOptionTradePriceField") -> "bool":
        return _riskuserapi.CShfeFtdcOptionTradePriceField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcOptionTradePriceField_swiginit(self, _riskuserapi.new_CShfeFtdcOptionTradePriceField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcOptionTradePriceField

# Register CShfeFtdcOptionTradePriceField in _riskuserapi:
_riskuserapi.CShfeFtdcOptionTradePriceField_swigregister(CShfeFtdcOptionTradePriceField)
class CShfeFtdcOptionTradeInvestorField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorField_BrokerID_get, _riskuserapi.CShfeFtdcOptionTradeInvestorField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorField_InvestorID_get, _riskuserapi.CShfeFtdcOptionTradeInvestorField_InvestorID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorField_InvestorRange_get, _riskuserapi.CShfeFtdcOptionTradeInvestorField_InvestorRange_set)

    def __eq__(self, ct: "CShfeFtdcOptionTradeInvestorField") -> "bool":
        return _riskuserapi.CShfeFtdcOptionTradeInvestorField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcOptionTradeInvestorField_swiginit(self, _riskuserapi.new_CShfeFtdcOptionTradeInvestorField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcOptionTradeInvestorField

# Register CShfeFtdcOptionTradeInvestorField in _riskuserapi:
_riskuserapi.CShfeFtdcOptionTradeInvestorField_swigregister(CShfeFtdcOptionTradeInvestorField)
class CShfeFtdcOptionTradeInvestorPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_InstrumentID_get, _riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_InstrumentID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_ExchangeID_get, _riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_ExchangeID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_BrokerID_get, _riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_InvestorID_get, _riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_InvestorID_set)
    LongPosiVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_LongPosiVolume_get, _riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_LongPosiVolume_set)
    StrikeFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_StrikeFrozen_get, _riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_StrikeFrozen_set)
    AbandonFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_AbandonFrozen_get, _riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_AbandonFrozen_set)
    ShortPosiVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_ShortPosiVolume_get, _riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_ShortPosiVolume_set)
    ApplyPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_ApplyPosition_get, _riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_ApplyPosition_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_HedgeFlag_get, _riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_HedgeFlag_set)
    PositionDate: "TShfeFtdcPositionDateType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_PositionDate_get, _riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_PositionDate_set)

    def __eq__(self, ct: "CShfeFtdcOptionTradeInvestorPositionField") -> "bool":
        return _riskuserapi.CShfeFtdcOptionTradeInvestorPositionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_swiginit(self, _riskuserapi.new_CShfeFtdcOptionTradeInvestorPositionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcOptionTradeInvestorPositionField

# Register CShfeFtdcOptionTradeInvestorPositionField in _riskuserapi:
_riskuserapi.CShfeFtdcOptionTradeInvestorPositionField_swigregister(CShfeFtdcOptionTradeInvestorPositionField)
class CShfeFtdcOptionTradeInvestorTestResultField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_InstrumentID_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_InstrumentID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_ExchangeID_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_ExchangeID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_BrokerID_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_InvestorID_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_InvestorID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_HedgeFlag_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_HedgeFlag_set)
    PositionDate: "TShfeFtdcPositionDateType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_PositionDate_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_PositionDate_set)
    ShortPosiVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_ShortPosiVolume_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_ShortPosiVolume_set)
    LongPosiVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_LongPosiVolume_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_LongPosiVolume_set)
    StrikeApply: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_StrikeApply_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_StrikeApply_set)
    AbandonApply: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_AbandonApply_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_AbandonApply_set)
    ApplyPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_ApplyPosition_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_ApplyPosition_set)
    ClosePrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_ClosePrice_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_ClosePrice_set)
    SettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_SettlementPrice_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_SettlementPrice_set)
    CloseValue: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_CloseValue_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_CloseValue_set)
    SettlementValue: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_SettlementValue_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_SettlementValue_set)
    MarginRatioByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_MarginRatioByMoney_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_MarginRatioByMoney_set)
    MarginRatioByVolume: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_MarginRatioByVolume_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_MarginRatioByVolume_set)
    MarginCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_MarginCost_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_MarginCost_set)
    StrikeCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_StrikeCost_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_StrikeCost_set)
    StrikeOffset: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_StrikeOffset_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_StrikeOffset_set)
    OffsetType: "TShfeFtdcStrikeOffsetTypeType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_OffsetType_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_OffsetType_set)
    StrikePrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_StrikePrice_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_StrikePrice_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_TraderID_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_TraderID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_ParticipantID_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_ClientID_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_ClientID_set)
    IsExerFutureSelfClose: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_IsExerFutureSelfClose_get, _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_IsExerFutureSelfClose_set)

    def __eq__(self, ct: "CShfeFtdcOptionTradeInvestorTestResultField") -> "bool":
        return _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_swiginit(self, _riskuserapi.new_CShfeFtdcOptionTradeInvestorTestResultField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcOptionTradeInvestorTestResultField

# Register CShfeFtdcOptionTradeInvestorTestResultField in _riskuserapi:
_riskuserapi.CShfeFtdcOptionTradeInvestorTestResultField_swigregister(CShfeFtdcOptionTradeInvestorTestResultField)
class CShfeFtdcOptionTradeInvestorAccountTestResultField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_BrokerID_get, _riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_InvestorID_get, _riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_InvestorID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_AccountID_get, _riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_AccountID_set)
    Available: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_Available_get, _riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_Available_set)
    NewAvailable: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_NewAvailable_get, _riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_NewAvailable_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_CurrencyID_get, _riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_CurrencyID_set)
    Balance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_Balance_get, _riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_Balance_set)
    LongExeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_LongExeMargin_get, _riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_LongExeMargin_set)
    ShortExeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_ShortExeMargin_get, _riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_ShortExeMargin_set)
    ExeMoney: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_ExeMoney_get, _riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_ExeMoney_set)
    ExeProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_ExeProfit_get, _riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_ExeProfit_set)
    ReleaseMoney: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_ReleaseMoney_get, _riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_ReleaseMoney_set)

    def __eq__(self, ct: "CShfeFtdcOptionTradeInvestorAccountTestResultField") -> "bool":
        return _riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_swiginit(self, _riskuserapi.new_CShfeFtdcOptionTradeInvestorAccountTestResultField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcOptionTradeInvestorAccountTestResultField

# Register CShfeFtdcOptionTradeInvestorAccountTestResultField in _riskuserapi:
_riskuserapi.CShfeFtdcOptionTradeInvestorAccountTestResultField_swigregister(CShfeFtdcOptionTradeInvestorAccountTestResultField)
class CShfeFtdcPosiExecOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_BrokerID_get, _riskuserapi.CShfeFtdcPosiExecOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_InvestorID_get, _riskuserapi.CShfeFtdcPosiExecOrderField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_InstrumentID_get, _riskuserapi.CShfeFtdcPosiExecOrderField_InstrumentID_set)
    ExecOrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_ExecOrderRef_get, _riskuserapi.CShfeFtdcPosiExecOrderField_ExecOrderRef_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_UserID_get, _riskuserapi.CShfeFtdcPosiExecOrderField_UserID_set)
    Volume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_Volume_get, _riskuserapi.CShfeFtdcPosiExecOrderField_Volume_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_RequestID_get, _riskuserapi.CShfeFtdcPosiExecOrderField_RequestID_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_BusinessUnit_get, _riskuserapi.CShfeFtdcPosiExecOrderField_BusinessUnit_set)
    OffsetFlag: "TShfeFtdcOffsetFlagType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_OffsetFlag_get, _riskuserapi.CShfeFtdcPosiExecOrderField_OffsetFlag_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_HedgeFlag_get, _riskuserapi.CShfeFtdcPosiExecOrderField_HedgeFlag_set)
    ActionType: "TShfeFtdcActionTypeType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_ActionType_get, _riskuserapi.CShfeFtdcPosiExecOrderField_ActionType_set)
    PosiDirection: "TShfeFtdcPosiDirectionType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_PosiDirection_get, _riskuserapi.CShfeFtdcPosiExecOrderField_PosiDirection_set)
    ReservePositionFlag: "TShfeFtdcExecOrderPositionFlagType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_ReservePositionFlag_get, _riskuserapi.CShfeFtdcPosiExecOrderField_ReservePositionFlag_set)
    CloseFlag: "TShfeFtdcExecOrderCloseFlagType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_CloseFlag_get, _riskuserapi.CShfeFtdcPosiExecOrderField_CloseFlag_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcPosiExecOrderField_ExchangeID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_InvestUnitID_get, _riskuserapi.CShfeFtdcPosiExecOrderField_InvestUnitID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_AccountID_get, _riskuserapi.CShfeFtdcPosiExecOrderField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_CurrencyID_get, _riskuserapi.CShfeFtdcPosiExecOrderField_CurrencyID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_ClientID_get, _riskuserapi.CShfeFtdcPosiExecOrderField_ClientID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_IPAddress_get, _riskuserapi.CShfeFtdcPosiExecOrderField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcPosiExecOrderField_MacAddress_get, _riskuserapi.CShfeFtdcPosiExecOrderField_MacAddress_set)

    def __eq__(self, ct: "CShfeFtdcPosiExecOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcPosiExecOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcPosiExecOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcPosiExecOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcPosiExecOrderField

# Register CShfeFtdcPosiExecOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcPosiExecOrderField_swigregister(CShfeFtdcPosiExecOrderField)
class CShfeFtdcInputExecOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_BrokerID_get, _riskuserapi.CShfeFtdcInputExecOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_InvestorID_get, _riskuserapi.CShfeFtdcInputExecOrderField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_InstrumentID_get, _riskuserapi.CShfeFtdcInputExecOrderField_InstrumentID_set)
    ExecOrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_ExecOrderRef_get, _riskuserapi.CShfeFtdcInputExecOrderField_ExecOrderRef_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_UserID_get, _riskuserapi.CShfeFtdcInputExecOrderField_UserID_set)
    Volume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_Volume_get, _riskuserapi.CShfeFtdcInputExecOrderField_Volume_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_RequestID_get, _riskuserapi.CShfeFtdcInputExecOrderField_RequestID_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_BusinessUnit_get, _riskuserapi.CShfeFtdcInputExecOrderField_BusinessUnit_set)
    OffsetFlag: "TShfeFtdcOffsetFlagType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_OffsetFlag_get, _riskuserapi.CShfeFtdcInputExecOrderField_OffsetFlag_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_HedgeFlag_get, _riskuserapi.CShfeFtdcInputExecOrderField_HedgeFlag_set)
    ActionType: "TShfeFtdcActionTypeType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_ActionType_get, _riskuserapi.CShfeFtdcInputExecOrderField_ActionType_set)
    PosiDirection: "TShfeFtdcPosiDirectionType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_PosiDirection_get, _riskuserapi.CShfeFtdcInputExecOrderField_PosiDirection_set)
    ReservePositionFlag: "TShfeFtdcExecOrderPositionFlagType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_ReservePositionFlag_get, _riskuserapi.CShfeFtdcInputExecOrderField_ReservePositionFlag_set)
    CloseFlag: "TShfeFtdcExecOrderCloseFlagType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_CloseFlag_get, _riskuserapi.CShfeFtdcInputExecOrderField_CloseFlag_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcInputExecOrderField_ExchangeID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_InvestUnitID_get, _riskuserapi.CShfeFtdcInputExecOrderField_InvestUnitID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_AccountID_get, _riskuserapi.CShfeFtdcInputExecOrderField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_CurrencyID_get, _riskuserapi.CShfeFtdcInputExecOrderField_CurrencyID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_ClientID_get, _riskuserapi.CShfeFtdcInputExecOrderField_ClientID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_IPAddress_get, _riskuserapi.CShfeFtdcInputExecOrderField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcInputExecOrderField_MacAddress_get, _riskuserapi.CShfeFtdcInputExecOrderField_MacAddress_set)

    def __eq__(self, ct: "CShfeFtdcInputExecOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcInputExecOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInputExecOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcInputExecOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInputExecOrderField

# Register CShfeFtdcInputExecOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcInputExecOrderField_swigregister(CShfeFtdcInputExecOrderField)
class CShfeFtdcExecOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_BrokerID_get, _riskuserapi.CShfeFtdcExecOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_InvestorID_get, _riskuserapi.CShfeFtdcExecOrderField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_InstrumentID_get, _riskuserapi.CShfeFtdcExecOrderField_InstrumentID_set)
    ExecOrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcExecOrderField_ExecOrderRef_get, _riskuserapi.CShfeFtdcExecOrderField_ExecOrderRef_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_UserID_get, _riskuserapi.CShfeFtdcExecOrderField_UserID_set)
    Volume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcExecOrderField_Volume_get, _riskuserapi.CShfeFtdcExecOrderField_Volume_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_RequestID_get, _riskuserapi.CShfeFtdcExecOrderField_RequestID_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcExecOrderField_BusinessUnit_get, _riskuserapi.CShfeFtdcExecOrderField_BusinessUnit_set)
    OffsetFlag: "TShfeFtdcOffsetFlagType" = property(_riskuserapi.CShfeFtdcExecOrderField_OffsetFlag_get, _riskuserapi.CShfeFtdcExecOrderField_OffsetFlag_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcExecOrderField_HedgeFlag_get, _riskuserapi.CShfeFtdcExecOrderField_HedgeFlag_set)
    ActionType: "TShfeFtdcActionTypeType" = property(_riskuserapi.CShfeFtdcExecOrderField_ActionType_get, _riskuserapi.CShfeFtdcExecOrderField_ActionType_set)
    PosiDirection: "TShfeFtdcPosiDirectionType" = property(_riskuserapi.CShfeFtdcExecOrderField_PosiDirection_get, _riskuserapi.CShfeFtdcExecOrderField_PosiDirection_set)
    ReservePositionFlag: "TShfeFtdcExecOrderPositionFlagType" = property(_riskuserapi.CShfeFtdcExecOrderField_ReservePositionFlag_get, _riskuserapi.CShfeFtdcExecOrderField_ReservePositionFlag_set)
    CloseFlag: "TShfeFtdcExecOrderCloseFlagType" = property(_riskuserapi.CShfeFtdcExecOrderField_CloseFlag_get, _riskuserapi.CShfeFtdcExecOrderField_CloseFlag_set)
    ExecOrderLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_ExecOrderLocalID_get, _riskuserapi.CShfeFtdcExecOrderField_ExecOrderLocalID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcExecOrderField_ExchangeID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_ParticipantID_get, _riskuserapi.CShfeFtdcExecOrderField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_ClientID_get, _riskuserapi.CShfeFtdcExecOrderField_ClientID_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_ExchangeInstID_get, _riskuserapi.CShfeFtdcExecOrderField_ExchangeInstID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_TraderID_get, _riskuserapi.CShfeFtdcExecOrderField_TraderID_set)
    InstallID: "TShfeFtdcInstallIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_InstallID_get, _riskuserapi.CShfeFtdcExecOrderField_InstallID_set)
    OrderSubmitStatus: "TShfeFtdcOrderSubmitStatusType" = property(_riskuserapi.CShfeFtdcExecOrderField_OrderSubmitStatus_get, _riskuserapi.CShfeFtdcExecOrderField_OrderSubmitStatus_set)
    NotifySequence: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcExecOrderField_NotifySequence_get, _riskuserapi.CShfeFtdcExecOrderField_NotifySequence_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcExecOrderField_TradingDay_get, _riskuserapi.CShfeFtdcExecOrderField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_SettlementID_get, _riskuserapi.CShfeFtdcExecOrderField_SettlementID_set)
    ExecOrderSysID: "TShfeFtdcExecOrderSysIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_ExecOrderSysID_get, _riskuserapi.CShfeFtdcExecOrderField_ExecOrderSysID_set)
    InsertDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcExecOrderField_InsertDate_get, _riskuserapi.CShfeFtdcExecOrderField_InsertDate_set)
    InsertTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcExecOrderField_InsertTime_get, _riskuserapi.CShfeFtdcExecOrderField_InsertTime_set)
    CancelTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcExecOrderField_CancelTime_get, _riskuserapi.CShfeFtdcExecOrderField_CancelTime_set)
    ExecResult: "TShfeFtdcExecResultType" = property(_riskuserapi.CShfeFtdcExecOrderField_ExecResult_get, _riskuserapi.CShfeFtdcExecOrderField_ExecResult_set)
    ClearingPartID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_ClearingPartID_get, _riskuserapi.CShfeFtdcExecOrderField_ClearingPartID_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcExecOrderField_SequenceNo_get, _riskuserapi.CShfeFtdcExecOrderField_SequenceNo_set)
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_FrontID_get, _riskuserapi.CShfeFtdcExecOrderField_FrontID_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_SessionID_get, _riskuserapi.CShfeFtdcExecOrderField_SessionID_set)
    UserProductInfo: "TShfeFtdcProductInfoType" = property(_riskuserapi.CShfeFtdcExecOrderField_UserProductInfo_get, _riskuserapi.CShfeFtdcExecOrderField_UserProductInfo_set)
    StatusMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcExecOrderField_StatusMsg_get, _riskuserapi.CShfeFtdcExecOrderField_StatusMsg_set)
    ActiveUserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_ActiveUserID_get, _riskuserapi.CShfeFtdcExecOrderField_ActiveUserID_set)
    BrokerExecOrderSeq: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcExecOrderField_BrokerExecOrderSeq_get, _riskuserapi.CShfeFtdcExecOrderField_BrokerExecOrderSeq_set)
    BranchID: "TShfeFtdcBranchIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_BranchID_get, _riskuserapi.CShfeFtdcExecOrderField_BranchID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_InvestUnitID_get, _riskuserapi.CShfeFtdcExecOrderField_InvestUnitID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_AccountID_get, _riskuserapi.CShfeFtdcExecOrderField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcExecOrderField_CurrencyID_get, _riskuserapi.CShfeFtdcExecOrderField_CurrencyID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcExecOrderField_IPAddress_get, _riskuserapi.CShfeFtdcExecOrderField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcExecOrderField_MacAddress_get, _riskuserapi.CShfeFtdcExecOrderField_MacAddress_set)

    def __eq__(self, ct: "CShfeFtdcExecOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcExecOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcExecOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcExecOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcExecOrderField

# Register CShfeFtdcExecOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcExecOrderField_swigregister(CShfeFtdcExecOrderField)
class CShfeFtdcExecDepositFrozenField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcExecDepositFrozenField_BrokerID_get, _riskuserapi.CShfeFtdcExecDepositFrozenField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcExecDepositFrozenField_InvestorID_get, _riskuserapi.CShfeFtdcExecDepositFrozenField_InvestorID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcExecDepositFrozenField_CurrencyID_get, _riskuserapi.CShfeFtdcExecDepositFrozenField_CurrencyID_set)
    FrozenCash: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcExecDepositFrozenField_FrozenCash_get, _riskuserapi.CShfeFtdcExecDepositFrozenField_FrozenCash_set)

    def __eq__(self, ct: "CShfeFtdcExecDepositFrozenField") -> "bool":
        return _riskuserapi.CShfeFtdcExecDepositFrozenField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcExecDepositFrozenField_swiginit(self, _riskuserapi.new_CShfeFtdcExecDepositFrozenField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcExecDepositFrozenField

# Register CShfeFtdcExecDepositFrozenField in _riskuserapi:
_riskuserapi.CShfeFtdcExecDepositFrozenField_swigregister(CShfeFtdcExecDepositFrozenField)
class CShfeFtdcPositionStatDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_BrokerID_get, _riskuserapi.CShfeFtdcPositionStatDetailField_BrokerID_set)
    ExchangeProductInstID: "TShfeFtdcString100Type" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_ExchangeProductInstID_get, _riskuserapi.CShfeFtdcPositionStatDetailField_ExchangeProductInstID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_InvestorID_get, _riskuserapi.CShfeFtdcPositionStatDetailField_InvestorID_set)
    YdPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_YdPosition_get, _riskuserapi.CShfeFtdcPositionStatDetailField_YdPosition_set)
    Position: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_Position_get, _riskuserapi.CShfeFtdcPositionStatDetailField_Position_set)
    LongPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_LongPosition_get, _riskuserapi.CShfeFtdcPositionStatDetailField_LongPosition_set)
    ShortPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_ShortPosition_get, _riskuserapi.CShfeFtdcPositionStatDetailField_ShortPosition_set)
    NetPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_NetPosition_get, _riskuserapi.CShfeFtdcPositionStatDetailField_NetPosition_set)
    SpecuLongPosi: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_SpecuLongPosi_get, _riskuserapi.CShfeFtdcPositionStatDetailField_SpecuLongPosi_set)
    SpecuShortPosi: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_SpecuShortPosi_get, _riskuserapi.CShfeFtdcPositionStatDetailField_SpecuShortPosi_set)
    HedgeLongPosi: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_HedgeLongPosi_get, _riskuserapi.CShfeFtdcPositionStatDetailField_HedgeLongPosi_set)
    HedgeShortPosi: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_HedgeShortPosi_get, _riskuserapi.CShfeFtdcPositionStatDetailField_HedgeShortPosi_set)
    TodayPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_TodayPosition_get, _riskuserapi.CShfeFtdcPositionStatDetailField_TodayPosition_set)
    PositionCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_PositionCost_get, _riskuserapi.CShfeFtdcPositionStatDetailField_PositionCost_set)
    SpecuLongYdPosi: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_SpecuLongYdPosi_get, _riskuserapi.CShfeFtdcPositionStatDetailField_SpecuLongYdPosi_set)
    SpecuShortYdPosi: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_SpecuShortYdPosi_get, _riskuserapi.CShfeFtdcPositionStatDetailField_SpecuShortYdPosi_set)
    HedgeLongYdPosi: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_HedgeLongYdPosi_get, _riskuserapi.CShfeFtdcPositionStatDetailField_HedgeLongYdPosi_set)
    HedgeShortYdPosi: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_HedgeShortYdPosi_get, _riskuserapi.CShfeFtdcPositionStatDetailField_HedgeShortYdPosi_set)
    SpecuLongTdPosi: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_SpecuLongTdPosi_get, _riskuserapi.CShfeFtdcPositionStatDetailField_SpecuLongTdPosi_set)
    SpecuShortTdPosi: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_SpecuShortTdPosi_get, _riskuserapi.CShfeFtdcPositionStatDetailField_SpecuShortTdPosi_set)
    HedgeLongTdPosi: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_HedgeLongTdPosi_get, _riskuserapi.CShfeFtdcPositionStatDetailField_HedgeLongTdPosi_set)
    HedgeShortTdPosi: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_HedgeShortTdPosi_get, _riskuserapi.CShfeFtdcPositionStatDetailField_HedgeShortTdPosi_set)
    SpecuLongYdPosiCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_SpecuLongYdPosiCost_get, _riskuserapi.CShfeFtdcPositionStatDetailField_SpecuLongYdPosiCost_set)
    SpecuShortYdPosiCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_SpecuShortYdPosiCost_get, _riskuserapi.CShfeFtdcPositionStatDetailField_SpecuShortYdPosiCost_set)
    HedgeLongYdPosiCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_HedgeLongYdPosiCost_get, _riskuserapi.CShfeFtdcPositionStatDetailField_HedgeLongYdPosiCost_set)
    HedgeShortYdPosiCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_HedgeShortYdPosiCost_get, _riskuserapi.CShfeFtdcPositionStatDetailField_HedgeShortYdPosiCost_set)
    SpecuLongTdPosiCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_SpecuLongTdPosiCost_get, _riskuserapi.CShfeFtdcPositionStatDetailField_SpecuLongTdPosiCost_set)
    SpecuShortTdPosiCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_SpecuShortTdPosiCost_get, _riskuserapi.CShfeFtdcPositionStatDetailField_SpecuShortTdPosiCost_set)
    HedgeLongTdPosiCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_HedgeLongTdPosiCost_get, _riskuserapi.CShfeFtdcPositionStatDetailField_HedgeLongTdPosiCost_set)
    HedgeShortTdPosiCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPositionStatDetailField_HedgeShortTdPosiCost_get, _riskuserapi.CShfeFtdcPositionStatDetailField_HedgeShortTdPosiCost_set)

    def __eq__(self, ct: "CShfeFtdcPositionStatDetailField") -> "bool":
        return _riskuserapi.CShfeFtdcPositionStatDetailField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcPositionStatDetailField_swiginit(self, _riskuserapi.new_CShfeFtdcPositionStatDetailField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcPositionStatDetailField

# Register CShfeFtdcPositionStatDetailField in _riskuserapi:
_riskuserapi.CShfeFtdcPositionStatDetailField_swigregister(CShfeFtdcPositionStatDetailField)
class CShfeFtdcExchangeRiskFreeRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcExchangeRiskFreeRateField_ExchangeID_get, _riskuserapi.CShfeFtdcExchangeRiskFreeRateField_ExchangeID_set)
    RiskFreeRate: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchangeRiskFreeRateField_RiskFreeRate_get, _riskuserapi.CShfeFtdcExchangeRiskFreeRateField_RiskFreeRate_set)

    def __eq__(self, ct: "CShfeFtdcExchangeRiskFreeRateField") -> "bool":
        return _riskuserapi.CShfeFtdcExchangeRiskFreeRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcExchangeRiskFreeRateField_swiginit(self, _riskuserapi.new_CShfeFtdcExchangeRiskFreeRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcExchangeRiskFreeRateField

# Register CShfeFtdcExchangeRiskFreeRateField in _riskuserapi:
_riskuserapi.CShfeFtdcExchangeRiskFreeRateField_swigregister(CShfeFtdcExchangeRiskFreeRateField)
class CShfeFtdcProductDividendRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcProductDividendRateField_ProductID_get, _riskuserapi.CShfeFtdcProductDividendRateField_ProductID_set)
    DividendRate: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcProductDividendRateField_DividendRate_get, _riskuserapi.CShfeFtdcProductDividendRateField_DividendRate_set)

    def __eq__(self, ct: "CShfeFtdcProductDividendRateField") -> "bool":
        return _riskuserapi.CShfeFtdcProductDividendRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcProductDividendRateField_swiginit(self, _riskuserapi.new_CShfeFtdcProductDividendRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcProductDividendRateField

# Register CShfeFtdcProductDividendRateField in _riskuserapi:
_riskuserapi.CShfeFtdcProductDividendRateField_swigregister(CShfeFtdcProductDividendRateField)
class CShfeFtdcUnderlyingIndexPriceField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcUnderlyingIndexPriceField_ProductID_get, _riskuserapi.CShfeFtdcUnderlyingIndexPriceField_ProductID_set)
    LastestPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcUnderlyingIndexPriceField_LastestPrice_get, _riskuserapi.CShfeFtdcUnderlyingIndexPriceField_LastestPrice_set)
    AveragePrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcUnderlyingIndexPriceField_AveragePrice_get, _riskuserapi.CShfeFtdcUnderlyingIndexPriceField_AveragePrice_set)

    def __eq__(self, ct: "CShfeFtdcUnderlyingIndexPriceField") -> "bool":
        return _riskuserapi.CShfeFtdcUnderlyingIndexPriceField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcUnderlyingIndexPriceField_swiginit(self, _riskuserapi.new_CShfeFtdcUnderlyingIndexPriceField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcUnderlyingIndexPriceField

# Register CShfeFtdcUnderlyingIndexPriceField in _riskuserapi:
_riskuserapi.CShfeFtdcUnderlyingIndexPriceField_swigregister(CShfeFtdcUnderlyingIndexPriceField)
class CShfeFtdcReqDepositField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcReqDepositField_BrokerID_get, _riskuserapi.CShfeFtdcReqDepositField_BrokerID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcReqDepositField_ExchangeID_get, _riskuserapi.CShfeFtdcReqDepositField_ExchangeID_set)
    TradingDate: "TShfeFtdcTradingDateType" = property(_riskuserapi.CShfeFtdcReqDepositField_TradingDate_get, _riskuserapi.CShfeFtdcReqDepositField_TradingDate_set)

    def __eq__(self, ct: "CShfeFtdcReqDepositField") -> "bool":
        return _riskuserapi.CShfeFtdcReqDepositField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcReqDepositField_swiginit(self, _riskuserapi.new_CShfeFtdcReqDepositField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcReqDepositField

# Register CShfeFtdcReqDepositField in _riskuserapi:
_riskuserapi.CShfeFtdcReqDepositField_swigregister(CShfeFtdcReqDepositField)
class CShfeFtdcRspDepositField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRspDepositField_BrokerID_get, _riskuserapi.CShfeFtdcRspDepositField_BrokerID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcRspDepositField_ExchangeID_get, _riskuserapi.CShfeFtdcRspDepositField_ExchangeID_set)
    ExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspDepositField_ExchangeMargin_get, _riskuserapi.CShfeFtdcRspDepositField_ExchangeMargin_set)
    PreBalance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspDepositField_PreBalance_get, _riskuserapi.CShfeFtdcRspDepositField_PreBalance_set)
    Deposit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspDepositField_Deposit_get, _riskuserapi.CShfeFtdcRspDepositField_Deposit_set)
    Withdraw: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspDepositField_Withdraw_get, _riskuserapi.CShfeFtdcRspDepositField_Withdraw_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspDepositField_CloseProfit_get, _riskuserapi.CShfeFtdcRspDepositField_CloseProfit_set)
    Commission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspDepositField_Commission_get, _riskuserapi.CShfeFtdcRspDepositField_Commission_set)
    PositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspDepositField_PositionProfit_get, _riskuserapi.CShfeFtdcRspDepositField_PositionProfit_set)
    ExchangeFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspDepositField_ExchangeFrozenMargin_get, _riskuserapi.CShfeFtdcRspDepositField_ExchangeFrozenMargin_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspDepositField_CashIn_get, _riskuserapi.CShfeFtdcRspDepositField_CashIn_set)
    FrozenCash: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspDepositField_FrozenCash_get, _riskuserapi.CShfeFtdcRspDepositField_FrozenCash_set)
    Available: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspDepositField_Available_get, _riskuserapi.CShfeFtdcRspDepositField_Available_set)
    Balance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspDepositField_Balance_get, _riskuserapi.CShfeFtdcRspDepositField_Balance_set)
    Mortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRspDepositField_Mortgage_get, _riskuserapi.CShfeFtdcRspDepositField_Mortgage_set)

    def __eq__(self, ct: "CShfeFtdcRspDepositField") -> "bool":
        return _riskuserapi.CShfeFtdcRspDepositField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRspDepositField_swiginit(self, _riskuserapi.new_CShfeFtdcRspDepositField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRspDepositField

# Register CShfeFtdcRspDepositField in _riskuserapi:
_riskuserapi.CShfeFtdcRspDepositField_swigregister(CShfeFtdcRspDepositField)
class CShfeFtdcQryCalendarReminderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcQryCalendarReminderField_TradingDay_get, _riskuserapi.CShfeFtdcQryCalendarReminderField_TradingDay_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryCalendarReminderField_BrokerID_get, _riskuserapi.CShfeFtdcQryCalendarReminderField_BrokerID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryCalendarReminderField_ExchangeID_get, _riskuserapi.CShfeFtdcQryCalendarReminderField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryCalendarReminderField_InstrumentID_get, _riskuserapi.CShfeFtdcQryCalendarReminderField_InstrumentID_set)
    ReminderID: "TShfeFtdcReminderIDType" = property(_riskuserapi.CShfeFtdcQryCalendarReminderField_ReminderID_get, _riskuserapi.CShfeFtdcQryCalendarReminderField_ReminderID_set)

    def __eq__(self, ct: "CShfeFtdcQryCalendarReminderField") -> "bool":
        return _riskuserapi.CShfeFtdcQryCalendarReminderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryCalendarReminderField_swiginit(self, _riskuserapi.new_CShfeFtdcQryCalendarReminderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryCalendarReminderField

# Register CShfeFtdcQryCalendarReminderField in _riskuserapi:
_riskuserapi.CShfeFtdcQryCalendarReminderField_swigregister(CShfeFtdcQryCalendarReminderField)
class CShfeFtdcCalendarReminderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcCalendarReminderField_TradingDay_get, _riskuserapi.CShfeFtdcCalendarReminderField_TradingDay_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcCalendarReminderField_BrokerID_get, _riskuserapi.CShfeFtdcCalendarReminderField_BrokerID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcCalendarReminderField_ExchangeID_get, _riskuserapi.CShfeFtdcCalendarReminderField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcCalendarReminderField_InstrumentID_get, _riskuserapi.CShfeFtdcCalendarReminderField_InstrumentID_set)
    ReminderID: "TShfeFtdcReminderIDType" = property(_riskuserapi.CShfeFtdcCalendarReminderField_ReminderID_get, _riskuserapi.CShfeFtdcCalendarReminderField_ReminderID_set)
    ReminderValue: "TShfeFtdcReminderValueType" = property(_riskuserapi.CShfeFtdcCalendarReminderField_ReminderValue_get, _riskuserapi.CShfeFtdcCalendarReminderField_ReminderValue_set)

    def __eq__(self, ct: "CShfeFtdcCalendarReminderField") -> "bool":
        return _riskuserapi.CShfeFtdcCalendarReminderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcCalendarReminderField_swiginit(self, _riskuserapi.new_CShfeFtdcCalendarReminderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcCalendarReminderField

# Register CShfeFtdcCalendarReminderField in _riskuserapi:
_riskuserapi.CShfeFtdcCalendarReminderField_swigregister(CShfeFtdcCalendarReminderField)
class CShfeFtdcSTTradingDateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDate: "TShfeFtdcTradingDateType" = property(_riskuserapi.CShfeFtdcSTTradingDateField_TradingDate_get, _riskuserapi.CShfeFtdcSTTradingDateField_TradingDate_set)

    def __eq__(self, ct: "CShfeFtdcSTTradingDateField") -> "bool":
        return _riskuserapi.CShfeFtdcSTTradingDateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSTTradingDateField_swiginit(self, _riskuserapi.new_CShfeFtdcSTTradingDateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSTTradingDateField

# Register CShfeFtdcSTTradingDateField in _riskuserapi:
_riskuserapi.CShfeFtdcSTTradingDateField_swigregister(CShfeFtdcSTTradingDateField)
class CShfeFtdcSetCZCEOptionSelfCloseField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcSetCZCEOptionSelfCloseField_ParticipantID_get, _riskuserapi.CShfeFtdcSetCZCEOptionSelfCloseField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcSetCZCEOptionSelfCloseField_ClientID_get, _riskuserapi.CShfeFtdcSetCZCEOptionSelfCloseField_ClientID_set)
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSetCZCEOptionSelfCloseField_ProductID_get, _riskuserapi.CShfeFtdcSetCZCEOptionSelfCloseField_ProductID_set)
    OptionOffsetFlag: "TShfeFtdcCZCEOptionOffsetFlagType" = property(_riskuserapi.CShfeFtdcSetCZCEOptionSelfCloseField_OptionOffsetFlag_get, _riskuserapi.CShfeFtdcSetCZCEOptionSelfCloseField_OptionOffsetFlag_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSetCZCEOptionSelfCloseField_BrokerID_get, _riskuserapi.CShfeFtdcSetCZCEOptionSelfCloseField_BrokerID_set)

    def __eq__(self, ct: "CShfeFtdcSetCZCEOptionSelfCloseField") -> "bool":
        return _riskuserapi.CShfeFtdcSetCZCEOptionSelfCloseField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSetCZCEOptionSelfCloseField_swiginit(self, _riskuserapi.new_CShfeFtdcSetCZCEOptionSelfCloseField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSetCZCEOptionSelfCloseField

# Register CShfeFtdcSetCZCEOptionSelfCloseField in _riskuserapi:
_riskuserapi.CShfeFtdcSetCZCEOptionSelfCloseField_swigregister(CShfeFtdcSetCZCEOptionSelfCloseField)
class CShfeFtdcQryOptionSelfCloseField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryOptionSelfCloseField_BrokerID_get, _riskuserapi.CShfeFtdcQryOptionSelfCloseField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryOptionSelfCloseField_InvestorID_get, _riskuserapi.CShfeFtdcQryOptionSelfCloseField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryOptionSelfCloseField_InstrumentID_get, _riskuserapi.CShfeFtdcQryOptionSelfCloseField_InstrumentID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryOptionSelfCloseField_ExchangeID_get, _riskuserapi.CShfeFtdcQryOptionSelfCloseField_ExchangeID_set)
    OptionSelfCloseSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcQryOptionSelfCloseField_OptionSelfCloseSysID_get, _riskuserapi.CShfeFtdcQryOptionSelfCloseField_OptionSelfCloseSysID_set)

    def __eq__(self, ct: "CShfeFtdcQryOptionSelfCloseField") -> "bool":
        return _riskuserapi.CShfeFtdcQryOptionSelfCloseField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryOptionSelfCloseField_swiginit(self, _riskuserapi.new_CShfeFtdcQryOptionSelfCloseField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryOptionSelfCloseField

# Register CShfeFtdcQryOptionSelfCloseField in _riskuserapi:
_riskuserapi.CShfeFtdcQryOptionSelfCloseField_swigregister(CShfeFtdcQryOptionSelfCloseField)
class CShfeFtdcOptionSelfCloseField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_BrokerID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_InvestorID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_InstrumentID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_InstrumentID_set)
    OptionSelfCloseRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_OptionSelfCloseRef_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_OptionSelfCloseRef_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_UserID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_UserID_set)
    Volume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_Volume_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_Volume_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_RequestID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_RequestID_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_BusinessUnit_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_BusinessUnit_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_HedgeFlag_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_HedgeFlag_set)
    OptSelfCloseFlag: "TShfeFtdcOptSelfCloseFlagType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_OptSelfCloseFlag_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_OptSelfCloseFlag_set)
    OptionSelfCloseLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_OptionSelfCloseLocalID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_OptionSelfCloseLocalID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_ExchangeID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_ExchangeID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_ParticipantID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_ClientID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_ClientID_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_ExchangeInstID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_ExchangeInstID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_TraderID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_TraderID_set)
    InstallID: "TShfeFtdcInstallIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_InstallID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_InstallID_set)
    OrderSubmitStatus: "TShfeFtdcOrderSubmitStatusType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_OrderSubmitStatus_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_OrderSubmitStatus_set)
    NotifySequence: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_NotifySequence_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_NotifySequence_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_TradingDay_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_SettlementID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_SettlementID_set)
    OptionSelfCloseSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_OptionSelfCloseSysID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_OptionSelfCloseSysID_set)
    InsertDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_InsertDate_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_InsertDate_set)
    InsertTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_InsertTime_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_InsertTime_set)
    CancelTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_CancelTime_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_CancelTime_set)
    ExecResult: "TShfeFtdcExecResultType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_ExecResult_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_ExecResult_set)
    ClearingPartID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_ClearingPartID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_ClearingPartID_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_SequenceNo_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_SequenceNo_set)
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_FrontID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_FrontID_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_SessionID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_SessionID_set)
    UserProductInfo: "TShfeFtdcProductInfoType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_UserProductInfo_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_UserProductInfo_set)
    StatusMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_StatusMsg_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_StatusMsg_set)
    ActiveUserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_ActiveUserID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_ActiveUserID_set)
    BrokerOptionSelfCloseSeq: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_BrokerOptionSelfCloseSeq_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_BrokerOptionSelfCloseSeq_set)
    BranchID: "TShfeFtdcBranchIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_BranchID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_BranchID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_InvestUnitID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_InvestUnitID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_AccountID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_CurrencyID_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_CurrencyID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_IPAddress_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcOptionSelfCloseField_MacAddress_get, _riskuserapi.CShfeFtdcOptionSelfCloseField_MacAddress_set)

    def __eq__(self, ct: "CShfeFtdcOptionSelfCloseField") -> "bool":
        return _riskuserapi.CShfeFtdcOptionSelfCloseField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcOptionSelfCloseField_swiginit(self, _riskuserapi.new_CShfeFtdcOptionSelfCloseField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcOptionSelfCloseField

# Register CShfeFtdcOptionSelfCloseField in _riskuserapi:
_riskuserapi.CShfeFtdcOptionSelfCloseField_swigregister(CShfeFtdcOptionSelfCloseField)
class CShfeFtdcQryForceCloseSnapshotField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryForceCloseSnapshotField_BrokerID_get, _riskuserapi.CShfeFtdcQryForceCloseSnapshotField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryForceCloseSnapshotField_InvestorID_get, _riskuserapi.CShfeFtdcQryForceCloseSnapshotField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryForceCloseSnapshotField_InstrumentID_get, _riskuserapi.CShfeFtdcQryForceCloseSnapshotField_InstrumentID_set)
    DepartmentID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryForceCloseSnapshotField_DepartmentID_get, _riskuserapi.CShfeFtdcQryForceCloseSnapshotField_DepartmentID_set)
    StartTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcQryForceCloseSnapshotField_StartTime_get, _riskuserapi.CShfeFtdcQryForceCloseSnapshotField_StartTime_set)
    EndTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcQryForceCloseSnapshotField_EndTime_get, _riskuserapi.CShfeFtdcQryForceCloseSnapshotField_EndTime_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcQryForceCloseSnapshotField_UserID_get, _riskuserapi.CShfeFtdcQryForceCloseSnapshotField_UserID_set)

    def __eq__(self, ct: "CShfeFtdcQryForceCloseSnapshotField") -> "bool":
        return _riskuserapi.CShfeFtdcQryForceCloseSnapshotField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryForceCloseSnapshotField_swiginit(self, _riskuserapi.new_CShfeFtdcQryForceCloseSnapshotField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryForceCloseSnapshotField

# Register CShfeFtdcQryForceCloseSnapshotField in _riskuserapi:
_riskuserapi.CShfeFtdcQryForceCloseSnapshotField_swigregister(CShfeFtdcQryForceCloseSnapshotField)
class CShfeFtdcForceCloseSnapshotField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FCSceneId: "TShfeFtdcForceCloseSceneIdType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_FCSceneId_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_FCSceneId_set)
    InsertDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_InsertDate_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_InsertDate_set)
    InsertTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_InsertTime_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_InsertTime_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_InvestorID_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_InvestorID_set)
    InvestorName: "TShfeFtdcPartyNameType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_InvestorName_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_InvestorName_set)
    DepartmentID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_DepartmentID_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_DepartmentID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_UserID_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_UserID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_AccountID_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_CurrencyID_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_CurrencyID_set)
    FCType: "TShfeFtdcForceCloseTypeType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_FCType_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_FCType_set)
    FCReason: "TShfeFtdcForceCloseReasonType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_FCReason_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_FCReason_set)
    SnapBalance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_SnapBalance_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_SnapBalance_set)
    SnapMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_SnapMargin_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_SnapMargin_set)
    SnapAvailable: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_SnapAvailable_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_SnapAvailable_set)
    SnapRiskValue: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_SnapRiskValue_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_SnapRiskValue_set)
    SnapExchRiskValue: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_SnapExchRiskValue_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_SnapExchRiskValue_set)
    SnapLastestPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_SnapLastestPrice_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_SnapLastestPrice_set)
    SnapBidVolume1: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_SnapBidVolume1_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_SnapBidVolume1_set)
    SnapAskVolume1: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_SnapAskVolume1_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_SnapAskVolume1_set)
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_ProductID_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_ProductID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_InstrumentID_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_InstrumentID_set)
    OrderPriceType: "TShfeFtdcOrderPriceTypeType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_OrderPriceType_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_OrderPriceType_set)
    Direction: "TShfeFtdcDirectionType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_Direction_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_Direction_set)
    CombOffsetFlag: "TShfeFtdcCombOffsetFlagType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_CombOffsetFlag_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_CombOffsetFlag_set)
    CombHedgeFlag: "TShfeFtdcCombHedgeFlagType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_CombHedgeFlag_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_CombHedgeFlag_set)
    Price: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_Price_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_Price_set)
    Volume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_Volume_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_Volume_set)
    StopPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_StopPrice_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_StopPrice_set)
    BrokerOrderSeq: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_BrokerOrderSeq_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_BrokerOrderSeq_set)
    TradedDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_TradedDate_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_TradedDate_set)
    TradedTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_TradedTime_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_TradedTime_set)
    TradedVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_TradedVolume_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_TradedVolume_set)
    CurrBalance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_CurrBalance_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_CurrBalance_set)
    CurrMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_CurrMargin_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_CurrMargin_set)
    CurrAvailable: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_CurrAvailable_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_CurrAvailable_set)
    CurrRiskValue: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_CurrRiskValue_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_CurrRiskValue_set)
    CurrExchRiskValue: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_CurrExchRiskValue_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_CurrExchRiskValue_set)
    TradedBalance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_TradedBalance_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_TradedBalance_set)
    TradedMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_TradedMargin_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_TradedMargin_set)
    TradedAvailable: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_TradedAvailable_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_TradedAvailable_set)
    TradedRiskValue: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_TradedRiskValue_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_TradedRiskValue_set)
    TradedExchRiskValue: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcForceCloseSnapshotField_TradedExchRiskValue_get, _riskuserapi.CShfeFtdcForceCloseSnapshotField_TradedExchRiskValue_set)

    def __eq__(self, ct: "CShfeFtdcForceCloseSnapshotField") -> "bool":
        return _riskuserapi.CShfeFtdcForceCloseSnapshotField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcForceCloseSnapshotField_swiginit(self, _riskuserapi.new_CShfeFtdcForceCloseSnapshotField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcForceCloseSnapshotField

# Register CShfeFtdcForceCloseSnapshotField in _riskuserapi:
_riskuserapi.CShfeFtdcForceCloseSnapshotField_swigregister(CShfeFtdcForceCloseSnapshotField)
class CShfeFtdcInvestLabelField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestLabelField_BrokerID_get, _riskuserapi.CShfeFtdcInvestLabelField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcInvestLabelField_UserID_get, _riskuserapi.CShfeFtdcInvestLabelField_UserID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestLabelField_InvestorID_get, _riskuserapi.CShfeFtdcInvestLabelField_InvestorID_set)
    ActionDirection: "TShfeFtdcActionDirectionType" = property(_riskuserapi.CShfeFtdcInvestLabelField_ActionDirection_get, _riskuserapi.CShfeFtdcInvestLabelField_ActionDirection_set)
    LabelDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcInvestLabelField_LabelDay_get, _riskuserapi.CShfeFtdcInvestLabelField_LabelDay_set)
    LabelTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcInvestLabelField_LabelTime_get, _riskuserapi.CShfeFtdcInvestLabelField_LabelTime_set)
    Message: "TShfeFtdcLabelContentType" = property(_riskuserapi.CShfeFtdcInvestLabelField_Message_get, _riskuserapi.CShfeFtdcInvestLabelField_Message_set)

    def __eq__(self, ct: "CShfeFtdcInvestLabelField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestLabelField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestLabelField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestLabelField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestLabelField

# Register CShfeFtdcInvestLabelField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestLabelField_swigregister(CShfeFtdcInvestLabelField)
class CShfeFtdcQryInvestorPortfField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInvestorPortfField_BrokerID_get, _riskuserapi.CShfeFtdcQryInvestorPortfField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryInvestorPortfField_InvestorID_get, _riskuserapi.CShfeFtdcQryInvestorPortfField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryInvestorPortfField_InstrumentID_get, _riskuserapi.CShfeFtdcQryInvestorPortfField_InstrumentID_set)

    def __eq__(self, ct: "CShfeFtdcQryInvestorPortfField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInvestorPortfField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInvestorPortfField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInvestorPortfField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInvestorPortfField

# Register CShfeFtdcQryInvestorPortfField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInvestorPortfField_swigregister(CShfeFtdcQryInvestorPortfField)
class CShfeFtdcInvestorPortfInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorPortfInfoField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorPortfInfoField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorPortfInfoField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorPortfInfoField_InvestorID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcInvestorPortfInfoField_ExchangeID_get, _riskuserapi.CShfeFtdcInvestorPortfInfoField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInvestorPortfInfoField_InstrumentID_get, _riskuserapi.CShfeFtdcInvestorPortfInfoField_InstrumentID_set)
    IsOpen: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcInvestorPortfInfoField_IsOpen_get, _riskuserapi.CShfeFtdcInvestorPortfInfoField_IsOpen_set)

    def __eq__(self, ct: "CShfeFtdcInvestorPortfInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorPortfInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorPortfInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorPortfInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorPortfInfoField

# Register CShfeFtdcInvestorPortfInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorPortfInfoField_swigregister(CShfeFtdcInvestorPortfInfoField)
class CShfeFtdcInvestPartyField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestPartyField_BrokerID_get, _riskuserapi.CShfeFtdcInvestPartyField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestPartyField_InvestorID_get, _riskuserapi.CShfeFtdcInvestPartyField_InvestorID_set)
    PartyName: "TShfeFtdcInvestPartyNameType" = property(_riskuserapi.CShfeFtdcInvestPartyField_PartyName_get, _riskuserapi.CShfeFtdcInvestPartyField_PartyName_set)

    def __eq__(self, ct: "CShfeFtdcInvestPartyField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestPartyField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestPartyField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestPartyField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestPartyField

# Register CShfeFtdcInvestPartyField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestPartyField_swigregister(CShfeFtdcInvestPartyField)
class CShfeFtdcCffexProductTypeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcCffexProductTypeField_ProductID_get, _riskuserapi.CShfeFtdcCffexProductTypeField_ProductID_set)
    ProductClass: "TShfeFtdcProductClassType" = property(_riskuserapi.CShfeFtdcCffexProductTypeField_ProductClass_get, _riskuserapi.CShfeFtdcCffexProductTypeField_ProductClass_set)
    ProductCategory: "TShfeFtdcProductCategoryType" = property(_riskuserapi.CShfeFtdcCffexProductTypeField_ProductCategory_get, _riskuserapi.CShfeFtdcCffexProductTypeField_ProductCategory_set)

    def __eq__(self, ct: "CShfeFtdcCffexProductTypeField") -> "bool":
        return _riskuserapi.CShfeFtdcCffexProductTypeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcCffexProductTypeField_swiginit(self, _riskuserapi.new_CShfeFtdcCffexProductTypeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcCffexProductTypeField

# Register CShfeFtdcCffexProductTypeField in _riskuserapi:
_riskuserapi.CShfeFtdcCffexProductTypeField_swigregister(CShfeFtdcCffexProductTypeField)
class CShfeFtdcQryTraderAssignField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryTraderAssignField_BrokerID_get, _riskuserapi.CShfeFtdcQryTraderAssignField_BrokerID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryTraderAssignField_ExchangeID_get, _riskuserapi.CShfeFtdcQryTraderAssignField_ExchangeID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcQryTraderAssignField_TraderID_get, _riskuserapi.CShfeFtdcQryTraderAssignField_TraderID_set)

    def __eq__(self, ct: "CShfeFtdcQryTraderAssignField") -> "bool":
        return _riskuserapi.CShfeFtdcQryTraderAssignField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryTraderAssignField_swiginit(self, _riskuserapi.new_CShfeFtdcQryTraderAssignField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryTraderAssignField

# Register CShfeFtdcQryTraderAssignField in _riskuserapi:
_riskuserapi.CShfeFtdcQryTraderAssignField_swigregister(CShfeFtdcQryTraderAssignField)
class CShfeFtdcTraderAssignField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcTraderAssignField_BrokerID_get, _riskuserapi.CShfeFtdcTraderAssignField_BrokerID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcTraderAssignField_ExchangeID_get, _riskuserapi.CShfeFtdcTraderAssignField_ExchangeID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcTraderAssignField_TraderID_get, _riskuserapi.CShfeFtdcTraderAssignField_TraderID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcTraderAssignField_ParticipantID_get, _riskuserapi.CShfeFtdcTraderAssignField_ParticipantID_set)
    DRIdentityID: "TShfeFtdcDRIdentityIDType" = property(_riskuserapi.CShfeFtdcTraderAssignField_DRIdentityID_get, _riskuserapi.CShfeFtdcTraderAssignField_DRIdentityID_set)

    def __eq__(self, ct: "CShfeFtdcTraderAssignField") -> "bool":
        return _riskuserapi.CShfeFtdcTraderAssignField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTraderAssignField_swiginit(self, _riskuserapi.new_CShfeFtdcTraderAssignField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTraderAssignField

# Register CShfeFtdcTraderAssignField in _riskuserapi:
_riskuserapi.CShfeFtdcTraderAssignField_swigregister(CShfeFtdcTraderAssignField)
class CShfeFtdcExeAlgField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    OMRlease: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcExeAlgField_OMRlease_get, _riskuserapi.CShfeFtdcExeAlgField_OMRlease_set)

    def __eq__(self, ct: "CShfeFtdcExeAlgField") -> "bool":
        return _riskuserapi.CShfeFtdcExeAlgField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcExeAlgField_swiginit(self, _riskuserapi.new_CShfeFtdcExeAlgField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcExeAlgField

# Register CShfeFtdcExeAlgField in _riskuserapi:
_riskuserapi.CShfeFtdcExeAlgField_swigregister(CShfeFtdcExeAlgField)
class CShfeFtdcQrySPMMProductParamField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "TShfeFtdcSPMMProductIDType" = property(_riskuserapi.CShfeFtdcQrySPMMProductParamField_ProductID_get, _riskuserapi.CShfeFtdcQrySPMMProductParamField_ProductID_set)

    def __eq__(self, ct: "CShfeFtdcQrySPMMProductParamField") -> "bool":
        return _riskuserapi.CShfeFtdcQrySPMMProductParamField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQrySPMMProductParamField_swiginit(self, _riskuserapi.new_CShfeFtdcQrySPMMProductParamField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQrySPMMProductParamField

# Register CShfeFtdcQrySPMMProductParamField in _riskuserapi:
_riskuserapi.CShfeFtdcQrySPMMProductParamField_swigregister(CShfeFtdcQrySPMMProductParamField)
class CShfeFtdcSPMMProductParamField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSPMMProductParamField_ExchangeID_get, _riskuserapi.CShfeFtdcSPMMProductParamField_ExchangeID_set)
    ProductID: "TShfeFtdcSPMMProductIDType" = property(_riskuserapi.CShfeFtdcSPMMProductParamField_ProductID_get, _riskuserapi.CShfeFtdcSPMMProductParamField_ProductID_set)
    CommodityID: "TShfeFtdcSPMMProductIDType" = property(_riskuserapi.CShfeFtdcSPMMProductParamField_CommodityID_get, _riskuserapi.CShfeFtdcSPMMProductParamField_CommodityID_set)
    CommodityGroupID: "TShfeFtdcSPMMProductIDType" = property(_riskuserapi.CShfeFtdcSPMMProductParamField_CommodityGroupID_get, _riskuserapi.CShfeFtdcSPMMProductParamField_CommodityGroupID_set)

    def __eq__(self, ct: "CShfeFtdcSPMMProductParamField") -> "bool":
        return _riskuserapi.CShfeFtdcSPMMProductParamField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSPMMProductParamField_swiginit(self, _riskuserapi.new_CShfeFtdcSPMMProductParamField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSPMMProductParamField

# Register CShfeFtdcSPMMProductParamField in _riskuserapi:
_riskuserapi.CShfeFtdcSPMMProductParamField_swigregister(CShfeFtdcSPMMProductParamField)
class CShfeFtdcSequencialGroupSPMMMarginField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UniqSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_UniqSequenceNo_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_UniqSequenceNo_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_ExchangeID_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_ExchangeID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_BrokerID_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_InvestorID_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_InvestorID_set)
    CommodityGroupID: "TShfeFtdcSPMMProductIDType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_CommodityGroupID_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_CommodityGroupID_set)
    MarginBeforeDiscount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_MarginBeforeDiscount_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_MarginBeforeDiscount_set)
    MarginNoDiscount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_MarginNoDiscount_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_MarginNoDiscount_set)
    LongRisk: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_LongRisk_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_LongRisk_set)
    ShortRisk: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_ShortRisk_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_ShortRisk_set)
    CloseFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_CloseFrozenMargin_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_CloseFrozenMargin_set)
    InterCommodityRate: "TShfeFtdcSPMMDiscountRatioType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_InterCommodityRate_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_InterCommodityRate_set)
    MiniMarginRatio: "TShfeFtdcSPMMDiscountRatioType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_MiniMarginRatio_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_MiniMarginRatio_set)
    AdjustRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_AdjustRatio_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_AdjustRatio_set)
    IntraCommodityDiscount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_IntraCommodityDiscount_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_IntraCommodityDiscount_set)
    InterCommodityDiscount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_InterCommodityDiscount_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_InterCommodityDiscount_set)
    ExchMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_ExchMargin_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_ExchMargin_set)
    InvestorMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_InvestorMargin_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_InvestorMargin_set)
    FrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_FrozenCommission_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_FrozenCommission_set)
    Commission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_Commission_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_Commission_set)
    FrozenCash: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_FrozenCash_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_FrozenCash_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_CashIn_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_CashIn_set)
    StrikeFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_StrikeFrozenMargin_get, _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_StrikeFrozenMargin_set)

    def __eq__(self, ct: "CShfeFtdcSequencialGroupSPMMMarginField") -> "bool":
        return _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_swiginit(self, _riskuserapi.new_CShfeFtdcSequencialGroupSPMMMarginField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSequencialGroupSPMMMarginField

# Register CShfeFtdcSequencialGroupSPMMMarginField in _riskuserapi:
_riskuserapi.CShfeFtdcSequencialGroupSPMMMarginField_swigregister(CShfeFtdcSequencialGroupSPMMMarginField)
class CShfeFtdcQryExchangePortfolioSettingField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryExchangePortfolioSettingField_ExchangeID_get, _riskuserapi.CShfeFtdcQryExchangePortfolioSettingField_ExchangeID_set)
    Portfolio: "TShfeFtdcPortfolioType" = property(_riskuserapi.CShfeFtdcQryExchangePortfolioSettingField_Portfolio_get, _riskuserapi.CShfeFtdcQryExchangePortfolioSettingField_Portfolio_set)

    def __eq__(self, ct: "CShfeFtdcQryExchangePortfolioSettingField") -> "bool":
        return _riskuserapi.CShfeFtdcQryExchangePortfolioSettingField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryExchangePortfolioSettingField_swiginit(self, _riskuserapi.new_CShfeFtdcQryExchangePortfolioSettingField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryExchangePortfolioSettingField

# Register CShfeFtdcQryExchangePortfolioSettingField in _riskuserapi:
_riskuserapi.CShfeFtdcQryExchangePortfolioSettingField_swigregister(CShfeFtdcQryExchangePortfolioSettingField)
class CShfeFtdcExchangePortfolioSettingField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcExchangePortfolioSettingField_ExchangeID_get, _riskuserapi.CShfeFtdcExchangePortfolioSettingField_ExchangeID_set)
    Portfolio: "TShfeFtdcPortfolioType" = property(_riskuserapi.CShfeFtdcExchangePortfolioSettingField_Portfolio_get, _riskuserapi.CShfeFtdcExchangePortfolioSettingField_Portfolio_set)
    IsEnabled: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcExchangePortfolioSettingField_IsEnabled_get, _riskuserapi.CShfeFtdcExchangePortfolioSettingField_IsEnabled_set)
    AlgoType: "TShfeFtdcPortfTypeType" = property(_riskuserapi.CShfeFtdcExchangePortfolioSettingField_AlgoType_get, _riskuserapi.CShfeFtdcExchangePortfolioSettingField_AlgoType_set)

    def __eq__(self, ct: "CShfeFtdcExchangePortfolioSettingField") -> "bool":
        return _riskuserapi.CShfeFtdcExchangePortfolioSettingField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcExchangePortfolioSettingField_swiginit(self, _riskuserapi.new_CShfeFtdcExchangePortfolioSettingField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcExchangePortfolioSettingField

# Register CShfeFtdcExchangePortfolioSettingField in _riskuserapi:
_riskuserapi.CShfeFtdcExchangePortfolioSettingField_swigregister(CShfeFtdcExchangePortfolioSettingField)
class CShfeFtdcQryRULEInstrParameterField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryRULEInstrParameterField_ExchangeID_get, _riskuserapi.CShfeFtdcQryRULEInstrParameterField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryRULEInstrParameterField_InstrumentID_get, _riskuserapi.CShfeFtdcQryRULEInstrParameterField_InstrumentID_set)

    def __eq__(self, ct: "CShfeFtdcQryRULEInstrParameterField") -> "bool":
        return _riskuserapi.CShfeFtdcQryRULEInstrParameterField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryRULEInstrParameterField_swiginit(self, _riskuserapi.new_CShfeFtdcQryRULEInstrParameterField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryRULEInstrParameterField

# Register CShfeFtdcQryRULEInstrParameterField in _riskuserapi:
_riskuserapi.CShfeFtdcQryRULEInstrParameterField_swigregister(CShfeFtdcQryRULEInstrParameterField)
class CShfeFtdcRULEInstrParameterField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRULEInstrParameterField_TradingDay_get, _riskuserapi.CShfeFtdcRULEInstrParameterField_TradingDay_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcRULEInstrParameterField_ExchangeID_get, _riskuserapi.CShfeFtdcRULEInstrParameterField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRULEInstrParameterField_InstrumentID_get, _riskuserapi.CShfeFtdcRULEInstrParameterField_InstrumentID_set)
    InstrumentClass: "TShfeFtdcInstrumentClassType" = property(_riskuserapi.CShfeFtdcRULEInstrParameterField_InstrumentClass_get, _riskuserapi.CShfeFtdcRULEInstrParameterField_InstrumentClass_set)
    StdInstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRULEInstrParameterField_StdInstrumentID_get, _riskuserapi.CShfeFtdcRULEInstrParameterField_StdInstrumentID_set)
    BSpecRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcRULEInstrParameterField_BSpecRatio_get, _riskuserapi.CShfeFtdcRULEInstrParameterField_BSpecRatio_set)
    SSpecRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcRULEInstrParameterField_SSpecRatio_get, _riskuserapi.CShfeFtdcRULEInstrParameterField_SSpecRatio_set)
    BHedgeRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcRULEInstrParameterField_BHedgeRatio_get, _riskuserapi.CShfeFtdcRULEInstrParameterField_BHedgeRatio_set)
    SHedgeRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcRULEInstrParameterField_SHedgeRatio_get, _riskuserapi.CShfeFtdcRULEInstrParameterField_SHedgeRatio_set)
    BAddOnMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRULEInstrParameterField_BAddOnMargin_get, _riskuserapi.CShfeFtdcRULEInstrParameterField_BAddOnMargin_set)
    SAddOnMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRULEInstrParameterField_SAddOnMargin_get, _riskuserapi.CShfeFtdcRULEInstrParameterField_SAddOnMargin_set)
    CommodityGroupID: "TShfeFtdcCommodityGroupIDType" = property(_riskuserapi.CShfeFtdcRULEInstrParameterField_CommodityGroupID_get, _riskuserapi.CShfeFtdcRULEInstrParameterField_CommodityGroupID_set)

    def __eq__(self, ct: "CShfeFtdcRULEInstrParameterField") -> "bool":
        return _riskuserapi.CShfeFtdcRULEInstrParameterField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRULEInstrParameterField_swiginit(self, _riskuserapi.new_CShfeFtdcRULEInstrParameterField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRULEInstrParameterField

# Register CShfeFtdcRULEInstrParameterField in _riskuserapi:
_riskuserapi.CShfeFtdcRULEInstrParameterField_swigregister(CShfeFtdcRULEInstrParameterField)
class CShfeFtdcFCForceCloseStandardField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ForceCloseLevel: "TShfeFtdcForceCloseLevelType" = property(_riskuserapi.CShfeFtdcFCForceCloseStandardField_ForceCloseLevel_get, _riskuserapi.CShfeFtdcFCForceCloseStandardField_ForceCloseLevel_set)
    ForceCloseRelease: "TShfeFtdcForceCloseReleaseType" = property(_riskuserapi.CShfeFtdcFCForceCloseStandardField_ForceCloseRelease_get, _riskuserapi.CShfeFtdcFCForceCloseStandardField_ForceCloseRelease_set)
    FCDeliveryMonthFirst: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcFCForceCloseStandardField_FCDeliveryMonthFirst_get, _riskuserapi.CShfeFtdcFCForceCloseStandardField_FCDeliveryMonthFirst_set)
    FCDiscountFirst: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcFCForceCloseStandardField_FCDiscountFirst_get, _riskuserapi.CShfeFtdcFCForceCloseStandardField_FCDiscountFirst_set)
    FCActiveInstrumentFirst: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcFCForceCloseStandardField_FCActiveInstrumentFirst_get, _riskuserapi.CShfeFtdcFCForceCloseStandardField_FCActiveInstrumentFirst_set)
    FCContainOrderAction: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcFCForceCloseStandardField_FCContainOrderAction_get, _riskuserapi.CShfeFtdcFCForceCloseStandardField_FCContainOrderAction_set)
    FCCustomAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcFCForceCloseStandardField_FCCustomAmount_get, _riskuserapi.CShfeFtdcFCForceCloseStandardField_FCCustomAmount_set)
    FCCustomRiskLevel: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcFCForceCloseStandardField_FCCustomRiskLevel_get, _riskuserapi.CShfeFtdcFCForceCloseStandardField_FCCustomRiskLevel_set)

    def __eq__(self, ct: "CShfeFtdcFCForceCloseStandardField") -> "bool":
        return _riskuserapi.CShfeFtdcFCForceCloseStandardField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcFCForceCloseStandardField_swiginit(self, _riskuserapi.new_CShfeFtdcFCForceCloseStandardField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcFCForceCloseStandardField

# Register CShfeFtdcFCForceCloseStandardField in _riskuserapi:
_riskuserapi.CShfeFtdcFCForceCloseStandardField_swigregister(CShfeFtdcFCForceCloseStandardField)
class CShfeFtdcFCForceCloseListField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcFCForceCloseListField_BrokerID_get, _riskuserapi.CShfeFtdcFCForceCloseListField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcFCForceCloseListField_InvestorID_get, _riskuserapi.CShfeFtdcFCForceCloseListField_InvestorID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcFCForceCloseListField_InvestorRange_get, _riskuserapi.CShfeFtdcFCForceCloseListField_InvestorRange_set)

    def __eq__(self, ct: "CShfeFtdcFCForceCloseListField") -> "bool":
        return _riskuserapi.CShfeFtdcFCForceCloseListField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcFCForceCloseListField_swiginit(self, _riskuserapi.new_CShfeFtdcFCForceCloseListField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcFCForceCloseListField

# Register CShfeFtdcFCForceCloseListField in _riskuserapi:
_riskuserapi.CShfeFtdcFCForceCloseListField_swigregister(CShfeFtdcFCForceCloseListField)
class CShfeFtdcFCForceClosePositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_BrokerID_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_InvestorID_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_InvestorID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_ExchangeID_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_InstrumentID_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_InstrumentID_set)
    CommodityGroupID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_CommodityGroupID_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_CommodityGroupID_set)
    CommodityGrpType: "TShfeFtdcCommodityGrpTypeType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_CommodityGrpType_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_CommodityGrpType_set)
    PosiDirection: "TShfeFtdcPosiDirectionType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_PosiDirection_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_PosiDirection_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_HedgeFlag_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_HedgeFlag_set)
    PositionDate: "TShfeFtdcPositionDateType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_PositionDate_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_PositionDate_set)
    Position: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_Position_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_Position_set)
    FCPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_FCPosition_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_FCPosition_set)
    FCPriceType: "TShfeFtdcForceClosePriceTypeType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_FCPriceType_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_FCPriceType_set)
    PriceTick: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_PriceTick_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_PriceTick_set)
    FCPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_FCPrice_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_FCPrice_set)
    ReleaseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_ReleaseMargin_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_ReleaseMargin_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_CloseProfit_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_CloseProfit_set)
    ExchReleaseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_ExchReleaseMargin_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_ExchReleaseMargin_set)
    PosiProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_PosiProfit_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_PosiProfit_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_CashIn_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_CashIn_set)
    OptionValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcFCForceClosePositionField_OptionValue_get, _riskuserapi.CShfeFtdcFCForceClosePositionField_OptionValue_set)

    def __eq__(self, ct: "CShfeFtdcFCForceClosePositionField") -> "bool":
        return _riskuserapi.CShfeFtdcFCForceClosePositionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcFCForceClosePositionField_swiginit(self, _riskuserapi.new_CShfeFtdcFCForceClosePositionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcFCForceClosePositionField

# Register CShfeFtdcFCForceClosePositionField in _riskuserapi:
_riskuserapi.CShfeFtdcFCForceClosePositionField_swigregister(CShfeFtdcFCForceClosePositionField)
class CShfeFtdcFCRspForceClosePositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_InstrumentID_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_InstrumentID_set)
    CommodityGroupID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_CommodityGroupID_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_CommodityGroupID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_BrokerID_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_InvestorID_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_InvestorID_set)
    PosiDirection: "TShfeFtdcPosiDirectionType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_PosiDirection_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_PosiDirection_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_HedgeFlag_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_HedgeFlag_set)
    PositionDate: "TShfeFtdcPositionDateType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_PositionDate_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_PositionDate_set)
    Position: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_Position_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_Position_set)
    FCPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_FCPosition_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_FCPosition_set)
    FCPriceType: "TShfeFtdcForceClosePriceTypeType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_FCPriceType_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_FCPriceType_set)
    PriceTick: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_PriceTick_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_PriceTick_set)
    FCPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_FCPrice_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_FCPrice_set)
    ReleaseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_ReleaseMargin_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_ReleaseMargin_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_CloseProfit_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_CloseProfit_set)
    FCID: "TShfeFtdcForceCloseSceneIdType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_FCID_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_FCID_set)
    Time: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_Time_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_Time_set)
    CurrMillisec: "TShfeFtdcMillisecType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_CurrMillisec_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_CurrMillisec_set)
    ExchReleaseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_ExchReleaseMargin_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_ExchReleaseMargin_set)
    PosiProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_PosiProfit_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_PosiProfit_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_CashIn_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_CashIn_set)
    OptionValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcFCRspForceClosePositionField_OptionValue_get, _riskuserapi.CShfeFtdcFCRspForceClosePositionField_OptionValue_set)

    def __eq__(self, ct: "CShfeFtdcFCRspForceClosePositionField") -> "bool":
        return _riskuserapi.CShfeFtdcFCRspForceClosePositionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcFCRspForceClosePositionField_swiginit(self, _riskuserapi.new_CShfeFtdcFCRspForceClosePositionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcFCRspForceClosePositionField

# Register CShfeFtdcFCRspForceClosePositionField in _riskuserapi:
_riskuserapi.CShfeFtdcFCRspForceClosePositionField_swigregister(CShfeFtdcFCRspForceClosePositionField)
class CShfeFtdcFCOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcFCOrderActionField_ExchangeID_get, _riskuserapi.CShfeFtdcFCOrderActionField_ExchangeID_set)
    OrderSysID: "TShfeFtdcOrderSysIDType" = property(_riskuserapi.CShfeFtdcFCOrderActionField_OrderSysID_get, _riskuserapi.CShfeFtdcFCOrderActionField_OrderSysID_set)
    bCancel: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcFCOrderActionField_bCancel_get, _riskuserapi.CShfeFtdcFCOrderActionField_bCancel_set)

    def __eq__(self, ct: "CShfeFtdcFCOrderActionField") -> "bool":
        return _riskuserapi.CShfeFtdcFCOrderActionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcFCOrderActionField_swiginit(self, _riskuserapi.new_CShfeFtdcFCOrderActionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcFCOrderActionField

# Register CShfeFtdcFCOrderActionField in _riskuserapi:
_riskuserapi.CShfeFtdcFCOrderActionField_swigregister(CShfeFtdcFCOrderActionField)
class CShfeFtdcQryRULEInterParameterField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryRULEInterParameterField_ExchangeID_get, _riskuserapi.CShfeFtdcQryRULEInterParameterField_ExchangeID_set)
    Leg1ProdFamilyCode: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryRULEInterParameterField_Leg1ProdFamilyCode_get, _riskuserapi.CShfeFtdcQryRULEInterParameterField_Leg1ProdFamilyCode_set)
    Leg2ProdFamilyCode: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryRULEInterParameterField_Leg2ProdFamilyCode_get, _riskuserapi.CShfeFtdcQryRULEInterParameterField_Leg2ProdFamilyCode_set)
    CommodityGroupID: "TShfeFtdcCommodityGroupIDType" = property(_riskuserapi.CShfeFtdcQryRULEInterParameterField_CommodityGroupID_get, _riskuserapi.CShfeFtdcQryRULEInterParameterField_CommodityGroupID_set)

    def __eq__(self, ct: "CShfeFtdcQryRULEInterParameterField") -> "bool":
        return _riskuserapi.CShfeFtdcQryRULEInterParameterField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryRULEInterParameterField_swiginit(self, _riskuserapi.new_CShfeFtdcQryRULEInterParameterField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryRULEInterParameterField

# Register CShfeFtdcQryRULEInterParameterField in _riskuserapi:
_riskuserapi.CShfeFtdcQryRULEInterParameterField_swigregister(CShfeFtdcQryRULEInterParameterField)
class CShfeFtdcRULEInterParameterField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRULEInterParameterField_TradingDay_get, _riskuserapi.CShfeFtdcRULEInterParameterField_TradingDay_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcRULEInterParameterField_ExchangeID_get, _riskuserapi.CShfeFtdcRULEInterParameterField_ExchangeID_set)
    SpreadId: "TShfeFtdcSpreadIdType" = property(_riskuserapi.CShfeFtdcRULEInterParameterField_SpreadId_get, _riskuserapi.CShfeFtdcRULEInterParameterField_SpreadId_set)
    InterRate: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcRULEInterParameterField_InterRate_get, _riskuserapi.CShfeFtdcRULEInterParameterField_InterRate_set)
    Leg1ProdFamilyCode: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRULEInterParameterField_Leg1ProdFamilyCode_get, _riskuserapi.CShfeFtdcRULEInterParameterField_Leg1ProdFamilyCode_set)
    Leg2ProdFamilyCode: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRULEInterParameterField_Leg2ProdFamilyCode_get, _riskuserapi.CShfeFtdcRULEInterParameterField_Leg2ProdFamilyCode_set)
    Leg1PropFactor: "TShfeFtdcCommonIntType" = property(_riskuserapi.CShfeFtdcRULEInterParameterField_Leg1PropFactor_get, _riskuserapi.CShfeFtdcRULEInterParameterField_Leg1PropFactor_set)
    Leg2PropFactor: "TShfeFtdcCommonIntType" = property(_riskuserapi.CShfeFtdcRULEInterParameterField_Leg2PropFactor_get, _riskuserapi.CShfeFtdcRULEInterParameterField_Leg2PropFactor_set)
    CommodityGroupID: "TShfeFtdcCommodityGroupIDType" = property(_riskuserapi.CShfeFtdcRULEInterParameterField_CommodityGroupID_get, _riskuserapi.CShfeFtdcRULEInterParameterField_CommodityGroupID_set)
    CommodityGroupName: "TShfeFtdcInstrumentNameType" = property(_riskuserapi.CShfeFtdcRULEInterParameterField_CommodityGroupName_get, _riskuserapi.CShfeFtdcRULEInterParameterField_CommodityGroupName_set)

    def __eq__(self, ct: "CShfeFtdcRULEInterParameterField") -> "bool":
        return _riskuserapi.CShfeFtdcRULEInterParameterField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRULEInterParameterField_swiginit(self, _riskuserapi.new_CShfeFtdcRULEInterParameterField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRULEInterParameterField

# Register CShfeFtdcRULEInterParameterField in _riskuserapi:
_riskuserapi.CShfeFtdcRULEInterParameterField_swigregister(CShfeFtdcRULEInterParameterField)
class CShfeFtdcQryInvestorSPMMModelField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryInvestorSPMMModelField_InvestorID_get, _riskuserapi.CShfeFtdcQryInvestorSPMMModelField_InvestorID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryInvestorSPMMModelField_ExchangeID_get, _riskuserapi.CShfeFtdcQryInvestorSPMMModelField_ExchangeID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInvestorSPMMModelField_BrokerID_get, _riskuserapi.CShfeFtdcQryInvestorSPMMModelField_BrokerID_set)

    def __eq__(self, ct: "CShfeFtdcQryInvestorSPMMModelField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInvestorSPMMModelField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInvestorSPMMModelField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInvestorSPMMModelField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInvestorSPMMModelField

# Register CShfeFtdcQryInvestorSPMMModelField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInvestorSPMMModelField_swigregister(CShfeFtdcQryInvestorSPMMModelField)
class CShfeFtdcInvestorSPMMModelField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcInvestorSPMMModelField_ExchangeID_get, _riskuserapi.CShfeFtdcInvestorSPMMModelField_ExchangeID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorSPMMModelField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorSPMMModelField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorSPMMModelField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorSPMMModelField_InvestorID_set)
    SPMMModelID: "TShfeFtdcSPMMModelIDType" = property(_riskuserapi.CShfeFtdcInvestorSPMMModelField_SPMMModelID_get, _riskuserapi.CShfeFtdcInvestorSPMMModelField_SPMMModelID_set)

    def __eq__(self, ct: "CShfeFtdcInvestorSPMMModelField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorSPMMModelField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorSPMMModelField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorSPMMModelField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorSPMMModelField

# Register CShfeFtdcInvestorSPMMModelField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorSPMMModelField_swigregister(CShfeFtdcInvestorSPMMModelField)
class CShfeFtdcLowMarginInvestorField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcLowMarginInvestorField_BrokerID_get, _riskuserapi.CShfeFtdcLowMarginInvestorField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcLowMarginInvestorField_InvestorID_get, _riskuserapi.CShfeFtdcLowMarginInvestorField_InvestorID_set)
    RateInvestorRange: "TShfeFtdcRateInvestorRangeType" = property(_riskuserapi.CShfeFtdcLowMarginInvestorField_RateInvestorRange_get, _riskuserapi.CShfeFtdcLowMarginInvestorField_RateInvestorRange_set)

    def __eq__(self, ct: "CShfeFtdcLowMarginInvestorField") -> "bool":
        return _riskuserapi.CShfeFtdcLowMarginInvestorField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcLowMarginInvestorField_swiginit(self, _riskuserapi.new_CShfeFtdcLowMarginInvestorField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcLowMarginInvestorField

# Register CShfeFtdcLowMarginInvestorField in _riskuserapi:
_riskuserapi.CShfeFtdcLowMarginInvestorField_swigregister(CShfeFtdcLowMarginInvestorField)
class CShfeFtdcSPBMFutureParameterActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    OperateFlag: "TShfeFtdcDBOperationType" = property(_riskuserapi.CShfeFtdcSPBMFutureParameterActionField_OperateFlag_get, _riskuserapi.CShfeFtdcSPBMFutureParameterActionField_OperateFlag_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSPBMFutureParameterActionField_TradingDay_get, _riskuserapi.CShfeFtdcSPBMFutureParameterActionField_TradingDay_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSPBMFutureParameterActionField_ExchangeID_get, _riskuserapi.CShfeFtdcSPBMFutureParameterActionField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSPBMFutureParameterActionField_InstrumentID_get, _riskuserapi.CShfeFtdcSPBMFutureParameterActionField_InstrumentID_set)
    ProdFamilyCode: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSPBMFutureParameterActionField_ProdFamilyCode_get, _riskuserapi.CShfeFtdcSPBMFutureParameterActionField_ProdFamilyCode_set)
    Cvf: "TShfeFtdcVolumeMultipleType" = property(_riskuserapi.CShfeFtdcSPBMFutureParameterActionField_Cvf_get, _riskuserapi.CShfeFtdcSPBMFutureParameterActionField_Cvf_set)
    TimeRange: "TShfeFtdcTimeRangeType" = property(_riskuserapi.CShfeFtdcSPBMFutureParameterActionField_TimeRange_get, _riskuserapi.CShfeFtdcSPBMFutureParameterActionField_TimeRange_set)
    MarginRate: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSPBMFutureParameterActionField_MarginRate_get, _riskuserapi.CShfeFtdcSPBMFutureParameterActionField_MarginRate_set)
    LockRateX: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSPBMFutureParameterActionField_LockRateX_get, _riskuserapi.CShfeFtdcSPBMFutureParameterActionField_LockRateX_set)
    AddOnRate: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSPBMFutureParameterActionField_AddOnRate_get, _riskuserapi.CShfeFtdcSPBMFutureParameterActionField_AddOnRate_set)
    PreSettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSPBMFutureParameterActionField_PreSettlementPrice_get, _riskuserapi.CShfeFtdcSPBMFutureParameterActionField_PreSettlementPrice_set)
    AddOnLockRateX2: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSPBMFutureParameterActionField_AddOnLockRateX2_get, _riskuserapi.CShfeFtdcSPBMFutureParameterActionField_AddOnLockRateX2_set)

    def __eq__(self, ct: "CShfeFtdcSPBMFutureParameterActionField") -> "bool":
        return _riskuserapi.CShfeFtdcSPBMFutureParameterActionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSPBMFutureParameterActionField_swiginit(self, _riskuserapi.new_CShfeFtdcSPBMFutureParameterActionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSPBMFutureParameterActionField

# Register CShfeFtdcSPBMFutureParameterActionField in _riskuserapi:
_riskuserapi.CShfeFtdcSPBMFutureParameterActionField_swigregister(CShfeFtdcSPBMFutureParameterActionField)
class CShfeFtdcSPBMOptionParameterActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    OperateFlag: "TShfeFtdcDBOperationType" = property(_riskuserapi.CShfeFtdcSPBMOptionParameterActionField_OperateFlag_get, _riskuserapi.CShfeFtdcSPBMOptionParameterActionField_OperateFlag_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSPBMOptionParameterActionField_TradingDay_get, _riskuserapi.CShfeFtdcSPBMOptionParameterActionField_TradingDay_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSPBMOptionParameterActionField_ExchangeID_get, _riskuserapi.CShfeFtdcSPBMOptionParameterActionField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSPBMOptionParameterActionField_InstrumentID_get, _riskuserapi.CShfeFtdcSPBMOptionParameterActionField_InstrumentID_set)
    ProdFamilyCode: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSPBMOptionParameterActionField_ProdFamilyCode_get, _riskuserapi.CShfeFtdcSPBMOptionParameterActionField_ProdFamilyCode_set)
    Cvf: "TShfeFtdcVolumeMultipleType" = property(_riskuserapi.CShfeFtdcSPBMOptionParameterActionField_Cvf_get, _riskuserapi.CShfeFtdcSPBMOptionParameterActionField_Cvf_set)
    DownPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSPBMOptionParameterActionField_DownPrice_get, _riskuserapi.CShfeFtdcSPBMOptionParameterActionField_DownPrice_set)
    Delta: "TShfeFtdcDeltaType" = property(_riskuserapi.CShfeFtdcSPBMOptionParameterActionField_Delta_get, _riskuserapi.CShfeFtdcSPBMOptionParameterActionField_Delta_set)
    SlimiDelta: "TShfeFtdcDeltaType" = property(_riskuserapi.CShfeFtdcSPBMOptionParameterActionField_SlimiDelta_get, _riskuserapi.CShfeFtdcSPBMOptionParameterActionField_SlimiDelta_set)
    PreSettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSPBMOptionParameterActionField_PreSettlementPrice_get, _riskuserapi.CShfeFtdcSPBMOptionParameterActionField_PreSettlementPrice_set)

    def __eq__(self, ct: "CShfeFtdcSPBMOptionParameterActionField") -> "bool":
        return _riskuserapi.CShfeFtdcSPBMOptionParameterActionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSPBMOptionParameterActionField_swiginit(self, _riskuserapi.new_CShfeFtdcSPBMOptionParameterActionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSPBMOptionParameterActionField

# Register CShfeFtdcSPBMOptionParameterActionField in _riskuserapi:
_riskuserapi.CShfeFtdcSPBMOptionParameterActionField_swigregister(CShfeFtdcSPBMOptionParameterActionField)
class CShfeFtdcSPBMInterParameterActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    OperateFlag: "TShfeFtdcDBOperationType" = property(_riskuserapi.CShfeFtdcSPBMInterParameterActionField_OperateFlag_get, _riskuserapi.CShfeFtdcSPBMInterParameterActionField_OperateFlag_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSPBMInterParameterActionField_TradingDay_get, _riskuserapi.CShfeFtdcSPBMInterParameterActionField_TradingDay_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSPBMInterParameterActionField_ExchangeID_get, _riskuserapi.CShfeFtdcSPBMInterParameterActionField_ExchangeID_set)
    SpreadId: "TShfeFtdcSpreadIdType" = property(_riskuserapi.CShfeFtdcSPBMInterParameterActionField_SpreadId_get, _riskuserapi.CShfeFtdcSPBMInterParameterActionField_SpreadId_set)
    InterRateZ: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSPBMInterParameterActionField_InterRateZ_get, _riskuserapi.CShfeFtdcSPBMInterParameterActionField_InterRateZ_set)
    Leg1ProdFamilyCode: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSPBMInterParameterActionField_Leg1ProdFamilyCode_get, _riskuserapi.CShfeFtdcSPBMInterParameterActionField_Leg1ProdFamilyCode_set)
    Leg2ProdFamilyCode: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSPBMInterParameterActionField_Leg2ProdFamilyCode_get, _riskuserapi.CShfeFtdcSPBMInterParameterActionField_Leg2ProdFamilyCode_set)

    def __eq__(self, ct: "CShfeFtdcSPBMInterParameterActionField") -> "bool":
        return _riskuserapi.CShfeFtdcSPBMInterParameterActionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSPBMInterParameterActionField_swiginit(self, _riskuserapi.new_CShfeFtdcSPBMInterParameterActionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSPBMInterParameterActionField

# Register CShfeFtdcSPBMInterParameterActionField in _riskuserapi:
_riskuserapi.CShfeFtdcSPBMInterParameterActionField_swigregister(CShfeFtdcSPBMInterParameterActionField)
class CShfeFtdcSPBMInvestorPortfDefActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    OperateFlag: "TShfeFtdcDBOperationType" = property(_riskuserapi.CShfeFtdcSPBMInvestorPortfDefActionField_OperateFlag_get, _riskuserapi.CShfeFtdcSPBMInvestorPortfDefActionField_OperateFlag_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSPBMInvestorPortfDefActionField_ExchangeID_get, _riskuserapi.CShfeFtdcSPBMInvestorPortfDefActionField_ExchangeID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSPBMInvestorPortfDefActionField_BrokerID_get, _riskuserapi.CShfeFtdcSPBMInvestorPortfDefActionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSPBMInvestorPortfDefActionField_InvestorID_get, _riskuserapi.CShfeFtdcSPBMInvestorPortfDefActionField_InvestorID_set)
    PortfolioDefID: "TShfeFtdcPortfolioDefIDType" = property(_riskuserapi.CShfeFtdcSPBMInvestorPortfDefActionField_PortfolioDefID_get, _riskuserapi.CShfeFtdcSPBMInvestorPortfDefActionField_PortfolioDefID_set)

    def __eq__(self, ct: "CShfeFtdcSPBMInvestorPortfDefActionField") -> "bool":
        return _riskuserapi.CShfeFtdcSPBMInvestorPortfDefActionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSPBMInvestorPortfDefActionField_swiginit(self, _riskuserapi.new_CShfeFtdcSPBMInvestorPortfDefActionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSPBMInvestorPortfDefActionField

# Register CShfeFtdcSPBMInvestorPortfDefActionField in _riskuserapi:
_riskuserapi.CShfeFtdcSPBMInvestorPortfDefActionField_swigregister(CShfeFtdcSPBMInvestorPortfDefActionField)
class CShfeFtdcSPBMPortfDefinitionActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    OperateFlag: "TShfeFtdcDBOperationType" = property(_riskuserapi.CShfeFtdcSPBMPortfDefinitionActionField_OperateFlag_get, _riskuserapi.CShfeFtdcSPBMPortfDefinitionActionField_OperateFlag_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSPBMPortfDefinitionActionField_ExchangeID_get, _riskuserapi.CShfeFtdcSPBMPortfDefinitionActionField_ExchangeID_set)
    PortfolioDefID: "TShfeFtdcPortfolioDefIDType" = property(_riskuserapi.CShfeFtdcSPBMPortfDefinitionActionField_PortfolioDefID_get, _riskuserapi.CShfeFtdcSPBMPortfDefinitionActionField_PortfolioDefID_set)
    ProdFamilyCode: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSPBMPortfDefinitionActionField_ProdFamilyCode_get, _riskuserapi.CShfeFtdcSPBMPortfDefinitionActionField_ProdFamilyCode_set)
    IsSPBM: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcSPBMPortfDefinitionActionField_IsSPBM_get, _riskuserapi.CShfeFtdcSPBMPortfDefinitionActionField_IsSPBM_set)

    def __eq__(self, ct: "CShfeFtdcSPBMPortfDefinitionActionField") -> "bool":
        return _riskuserapi.CShfeFtdcSPBMPortfDefinitionActionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSPBMPortfDefinitionActionField_swiginit(self, _riskuserapi.new_CShfeFtdcSPBMPortfDefinitionActionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSPBMPortfDefinitionActionField

# Register CShfeFtdcSPBMPortfDefinitionActionField in _riskuserapi:
_riskuserapi.CShfeFtdcSPBMPortfDefinitionActionField_swigregister(CShfeFtdcSPBMPortfDefinitionActionField)
class CShfeFtdcMortgageParamActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcMortgageParamActionField_BrokerID_get, _riskuserapi.CShfeFtdcMortgageParamActionField_BrokerID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcMortgageParamActionField_AccountID_get, _riskuserapi.CShfeFtdcMortgageParamActionField_AccountID_set)
    MortgageBalance: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcMortgageParamActionField_MortgageBalance_get, _riskuserapi.CShfeFtdcMortgageParamActionField_MortgageBalance_set)
    CheckMortgageRatio: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcMortgageParamActionField_CheckMortgageRatio_get, _riskuserapi.CShfeFtdcMortgageParamActionField_CheckMortgageRatio_set)
    ActionDirection: "TShfeFtdcActionDirectionType" = property(_riskuserapi.CShfeFtdcMortgageParamActionField_ActionDirection_get, _riskuserapi.CShfeFtdcMortgageParamActionField_ActionDirection_set)

    def __eq__(self, ct: "CShfeFtdcMortgageParamActionField") -> "bool":
        return _riskuserapi.CShfeFtdcMortgageParamActionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcMortgageParamActionField_swiginit(self, _riskuserapi.new_CShfeFtdcMortgageParamActionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcMortgageParamActionField

# Register CShfeFtdcMortgageParamActionField in _riskuserapi:
_riskuserapi.CShfeFtdcMortgageParamActionField_swigregister(CShfeFtdcMortgageParamActionField)
class CShfeFtdcQryInfoCommStageProductField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryInfoCommStageProductField_ExchangeID_get, _riskuserapi.CShfeFtdcQryInfoCommStageProductField_ExchangeID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInfoCommStageProductField_BrokerID_get, _riskuserapi.CShfeFtdcQryInfoCommStageProductField_BrokerID_set)

    def __eq__(self, ct: "CShfeFtdcQryInfoCommStageProductField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInfoCommStageProductField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInfoCommStageProductField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInfoCommStageProductField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInfoCommStageProductField

# Register CShfeFtdcQryInfoCommStageProductField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInfoCommStageProductField_swigregister(CShfeFtdcQryInfoCommStageProductField)
class CShfeFtdcInfoCommStageProductField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcInfoCommStageProductField_ExchangeID_get, _riskuserapi.CShfeFtdcInfoCommStageProductField_ExchangeID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInfoCommStageProductField_BrokerID_get, _riskuserapi.CShfeFtdcInfoCommStageProductField_BrokerID_set)
    ProductID: "TShfeFtdcProductIDType" = property(_riskuserapi.CShfeFtdcInfoCommStageProductField_ProductID_get, _riskuserapi.CShfeFtdcInfoCommStageProductField_ProductID_set)

    def __eq__(self, ct: "CShfeFtdcInfoCommStageProductField") -> "bool":
        return _riskuserapi.CShfeFtdcInfoCommStageProductField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInfoCommStageProductField_swiginit(self, _riskuserapi.new_CShfeFtdcInfoCommStageProductField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInfoCommStageProductField

# Register CShfeFtdcInfoCommStageProductField in _riskuserapi:
_riskuserapi.CShfeFtdcInfoCommStageProductField_swigregister(CShfeFtdcInfoCommStageProductField)
class CShfeFtdcReqRiskUserRegisterField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcReqRiskUserRegisterField_BrokerID_get, _riskuserapi.CShfeFtdcReqRiskUserRegisterField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcReqRiskUserRegisterField_UserID_get, _riskuserapi.CShfeFtdcReqRiskUserRegisterField_UserID_set)
    Password: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcReqRiskUserRegisterField_Password_get, _riskuserapi.CShfeFtdcReqRiskUserRegisterField_Password_set)
    RiskAgentID: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcReqRiskUserRegisterField_RiskAgentID_get, _riskuserapi.CShfeFtdcReqRiskUserRegisterField_RiskAgentID_set)
    Version: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcReqRiskUserRegisterField_Version_get, _riskuserapi.CShfeFtdcReqRiskUserRegisterField_Version_set)
    LocalSessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcReqRiskUserRegisterField_LocalSessionID_get, _riskuserapi.CShfeFtdcReqRiskUserRegisterField_LocalSessionID_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcReqRiskUserRegisterField_MacAddress_get, _riskuserapi.CShfeFtdcReqRiskUserRegisterField_MacAddress_set)
    ClientIPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcReqRiskUserRegisterField_ClientIPAddress_get, _riskuserapi.CShfeFtdcReqRiskUserRegisterField_ClientIPAddress_set)

    def __eq__(self, ct: "CShfeFtdcReqRiskUserRegisterField") -> "bool":
        return _riskuserapi.CShfeFtdcReqRiskUserRegisterField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcReqRiskUserRegisterField_swiginit(self, _riskuserapi.new_CShfeFtdcReqRiskUserRegisterField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcReqRiskUserRegisterField

# Register CShfeFtdcReqRiskUserRegisterField in _riskuserapi:
_riskuserapi.CShfeFtdcReqRiskUserRegisterField_swigregister(CShfeFtdcReqRiskUserRegisterField)
class CShfeFtdcRspRiskUserRegisterField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRspRiskUserRegisterField_TradingDay_get, _riskuserapi.CShfeFtdcRspRiskUserRegisterField_TradingDay_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRspRiskUserRegisterField_BrokerID_get, _riskuserapi.CShfeFtdcRspRiskUserRegisterField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRspRiskUserRegisterField_UserID_get, _riskuserapi.CShfeFtdcRspRiskUserRegisterField_UserID_set)
    Password: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcRspRiskUserRegisterField_Password_get, _riskuserapi.CShfeFtdcRspRiskUserRegisterField_Password_set)
    RiskAgentID: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcRspRiskUserRegisterField_RiskAgentID_get, _riskuserapi.CShfeFtdcRspRiskUserRegisterField_RiskAgentID_set)
    Version: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRspRiskUserRegisterField_Version_get, _riskuserapi.CShfeFtdcRspRiskUserRegisterField_Version_set)
    FrontType: "TShfeFtdcFrontTypeType" = property(_riskuserapi.CShfeFtdcRspRiskUserRegisterField_FrontType_get, _riskuserapi.CShfeFtdcRspRiskUserRegisterField_FrontType_set)

    def __eq__(self, ct: "CShfeFtdcRspRiskUserRegisterField") -> "bool":
        return _riskuserapi.CShfeFtdcRspRiskUserRegisterField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRspRiskUserRegisterField_swiginit(self, _riskuserapi.new_CShfeFtdcRspRiskUserRegisterField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRspRiskUserRegisterField

# Register CShfeFtdcRspRiskUserRegisterField in _riskuserapi:
_riskuserapi.CShfeFtdcRspRiskUserRegisterField_swigregister(CShfeFtdcRspRiskUserRegisterField)
class CShfeFtdcReqUnRiskUserRegisterField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcReqUnRiskUserRegisterField_BrokerID_get, _riskuserapi.CShfeFtdcReqUnRiskUserRegisterField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcReqUnRiskUserRegisterField_UserID_get, _riskuserapi.CShfeFtdcReqUnRiskUserRegisterField_UserID_set)
    Password: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcReqUnRiskUserRegisterField_Password_get, _riskuserapi.CShfeFtdcReqUnRiskUserRegisterField_Password_set)
    RiskAgentID: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcReqUnRiskUserRegisterField_RiskAgentID_get, _riskuserapi.CShfeFtdcReqUnRiskUserRegisterField_RiskAgentID_set)
    LocalSessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcReqUnRiskUserRegisterField_LocalSessionID_get, _riskuserapi.CShfeFtdcReqUnRiskUserRegisterField_LocalSessionID_set)

    def __eq__(self, ct: "CShfeFtdcReqUnRiskUserRegisterField") -> "bool":
        return _riskuserapi.CShfeFtdcReqUnRiskUserRegisterField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcReqUnRiskUserRegisterField_swiginit(self, _riskuserapi.new_CShfeFtdcReqUnRiskUserRegisterField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcReqUnRiskUserRegisterField

# Register CShfeFtdcReqUnRiskUserRegisterField in _riskuserapi:
_riskuserapi.CShfeFtdcReqUnRiskUserRegisterField_swigregister(CShfeFtdcReqUnRiskUserRegisterField)
class CShfeFtdcRspUnRiskUserRegisterField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRspUnRiskUserRegisterField_TradingDay_get, _riskuserapi.CShfeFtdcRspUnRiskUserRegisterField_TradingDay_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRspUnRiskUserRegisterField_BrokerID_get, _riskuserapi.CShfeFtdcRspUnRiskUserRegisterField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRspUnRiskUserRegisterField_UserID_get, _riskuserapi.CShfeFtdcRspUnRiskUserRegisterField_UserID_set)
    RiskAgentID: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcRspUnRiskUserRegisterField_RiskAgentID_get, _riskuserapi.CShfeFtdcRspUnRiskUserRegisterField_RiskAgentID_set)
    LocalSessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcRspUnRiskUserRegisterField_LocalSessionID_get, _riskuserapi.CShfeFtdcRspUnRiskUserRegisterField_LocalSessionID_set)

    def __eq__(self, ct: "CShfeFtdcRspUnRiskUserRegisterField") -> "bool":
        return _riskuserapi.CShfeFtdcRspUnRiskUserRegisterField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRspUnRiskUserRegisterField_swiginit(self, _riskuserapi.new_CShfeFtdcRspUnRiskUserRegisterField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRspUnRiskUserRegisterField

# Register CShfeFtdcRspUnRiskUserRegisterField in _riskuserapi:
_riskuserapi.CShfeFtdcRspUnRiskUserRegisterField_swigregister(CShfeFtdcRspUnRiskUserRegisterField)
class CShfeFtdcTradeMonitorConfigField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcTradeMonitorConfigField_BrokerID_get, _riskuserapi.CShfeFtdcTradeMonitorConfigField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcTradeMonitorConfigField_InvestorID_get, _riskuserapi.CShfeFtdcTradeMonitorConfigField_InvestorID_set)
    IntrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcTradeMonitorConfigField_IntrumentID_get, _riskuserapi.CShfeFtdcTradeMonitorConfigField_IntrumentID_set)
    IntrumentRef: "TShfeFtdcIntrumentRefType" = property(_riskuserapi.CShfeFtdcTradeMonitorConfigField_IntrumentRef_get, _riskuserapi.CShfeFtdcTradeMonitorConfigField_IntrumentRef_set)
    HedgeFlags: "TShfeFtdcHedgeFlagsType" = property(_riskuserapi.CShfeFtdcTradeMonitorConfigField_HedgeFlags_get, _riskuserapi.CShfeFtdcTradeMonitorConfigField_HedgeFlags_set)
    openVolumeL1: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcTradeMonitorConfigField_openVolumeL1_get, _riskuserapi.CShfeFtdcTradeMonitorConfigField_openVolumeL1_set)
    openVolumeL2: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcTradeMonitorConfigField_openVolumeL2_get, _riskuserapi.CShfeFtdcTradeMonitorConfigField_openVolumeL2_set)
    openVolumeL3: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcTradeMonitorConfigField_openVolumeL3_get, _riskuserapi.CShfeFtdcTradeMonitorConfigField_openVolumeL3_set)
    closeVolumeL1: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcTradeMonitorConfigField_closeVolumeL1_get, _riskuserapi.CShfeFtdcTradeMonitorConfigField_closeVolumeL1_set)
    closeVolumeL2: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcTradeMonitorConfigField_closeVolumeL2_get, _riskuserapi.CShfeFtdcTradeMonitorConfigField_closeVolumeL2_set)
    closeVolumeL3: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcTradeMonitorConfigField_closeVolumeL3_get, _riskuserapi.CShfeFtdcTradeMonitorConfigField_closeVolumeL3_set)
    AllVolumeL1: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcTradeMonitorConfigField_AllVolumeL1_get, _riskuserapi.CShfeFtdcTradeMonitorConfigField_AllVolumeL1_set)
    AllVolumeL2: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcTradeMonitorConfigField_AllVolumeL2_get, _riskuserapi.CShfeFtdcTradeMonitorConfigField_AllVolumeL2_set)
    AllVolumeL3: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcTradeMonitorConfigField_AllVolumeL3_get, _riskuserapi.CShfeFtdcTradeMonitorConfigField_AllVolumeL3_set)

    def __eq__(self, ct: "CShfeFtdcTradeMonitorConfigField") -> "bool":
        return _riskuserapi.CShfeFtdcTradeMonitorConfigField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTradeMonitorConfigField_swiginit(self, _riskuserapi.new_CShfeFtdcTradeMonitorConfigField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTradeMonitorConfigField

# Register CShfeFtdcTradeMonitorConfigField in _riskuserapi:
_riskuserapi.CShfeFtdcTradeMonitorConfigField_swigregister(CShfeFtdcTradeMonitorConfigField)
class CShfeFtdcWarnConfigField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ActionType: "TShfeFtdcSettingTypeType" = property(_riskuserapi.CShfeFtdcWarnConfigField_ActionType_get, _riskuserapi.CShfeFtdcWarnConfigField_ActionType_set)
    WarnType: "TShfeFtdcWarnTypeType" = property(_riskuserapi.CShfeFtdcWarnConfigField_WarnType_get, _riskuserapi.CShfeFtdcWarnConfigField_WarnType_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcWarnConfigField_BrokerID_get, _riskuserapi.CShfeFtdcWarnConfigField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcWarnConfigField_InvestorID_get, _riskuserapi.CShfeFtdcWarnConfigField_InvestorID_set)
    InvestorGroup: "TShfeFtdcInvestorGroupType" = property(_riskuserapi.CShfeFtdcWarnConfigField_InvestorGroup_get, _riskuserapi.CShfeFtdcWarnConfigField_InvestorGroup_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcWarnConfigField_InstrumentID_get, _riskuserapi.CShfeFtdcWarnConfigField_InstrumentID_set)
    InsType: "TShfeFtdcInsTypeType" = property(_riskuserapi.CShfeFtdcWarnConfigField_InsType_get, _riskuserapi.CShfeFtdcWarnConfigField_InsType_set)
    IsSplit: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcWarnConfigField_IsSplit_get, _riskuserapi.CShfeFtdcWarnConfigField_IsSplit_set)
    YLevel: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcWarnConfigField_YLevel_get, _riskuserapi.CShfeFtdcWarnConfigField_YLevel_set)
    OLevel: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcWarnConfigField_OLevel_get, _riskuserapi.CShfeFtdcWarnConfigField_OLevel_set)
    RLevel: "TShfeFtdcLargeVolumeType" = property(_riskuserapi.CShfeFtdcWarnConfigField_RLevel_get, _riskuserapi.CShfeFtdcWarnConfigField_RLevel_set)
    WarnHedge: "TShfeFtdcWarnHedgeType" = property(_riskuserapi.CShfeFtdcWarnConfigField_WarnHedge_get, _riskuserapi.CShfeFtdcWarnConfigField_WarnHedge_set)
    WarnObject: "TShfeFtdcWarnObjectType" = property(_riskuserapi.CShfeFtdcWarnConfigField_WarnObject_get, _riskuserapi.CShfeFtdcWarnConfigField_WarnObject_set)

    def __eq__(self, ct: "CShfeFtdcWarnConfigField") -> "bool":
        return _riskuserapi.CShfeFtdcWarnConfigField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcWarnConfigField_swiginit(self, _riskuserapi.new_CShfeFtdcWarnConfigField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcWarnConfigField

# Register CShfeFtdcWarnConfigField in _riskuserapi:
_riskuserapi.CShfeFtdcWarnConfigField_swigregister(CShfeFtdcWarnConfigField)
class CShfeFtdcIntrumentGroupField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcIntrumentGroupField_InstrumentID_get, _riskuserapi.CShfeFtdcIntrumentGroupField_InstrumentID_set)
    Instrumenttype: "TShfeFtdcInstrumenttypeType" = property(_riskuserapi.CShfeFtdcIntrumentGroupField_Instrumenttype_get, _riskuserapi.CShfeFtdcIntrumentGroupField_Instrumenttype_set)

    def __eq__(self, ct: "CShfeFtdcIntrumentGroupField") -> "bool":
        return _riskuserapi.CShfeFtdcIntrumentGroupField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcIntrumentGroupField_swiginit(self, _riskuserapi.new_CShfeFtdcIntrumentGroupField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcIntrumentGroupField

# Register CShfeFtdcIntrumentGroupField in _riskuserapi:
_riskuserapi.CShfeFtdcIntrumentGroupField_swigregister(CShfeFtdcIntrumentGroupField)
class CShfeFtdcRiskWarnEventField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UniqSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcRiskWarnEventField_UniqSequenceNo_get, _riskuserapi.CShfeFtdcRiskWarnEventField_UniqSequenceNo_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskWarnEventField_BrokerID_get, _riskuserapi.CShfeFtdcRiskWarnEventField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRiskWarnEventField_InvestorID_get, _riskuserapi.CShfeFtdcRiskWarnEventField_InvestorID_set)
    InvestorGroup: "TShfeFtdcInvestorGroupType" = property(_riskuserapi.CShfeFtdcRiskWarnEventField_InvestorGroup_get, _riskuserapi.CShfeFtdcRiskWarnEventField_InvestorGroup_set)
    WarnType: "TShfeFtdcWarnTypeType" = property(_riskuserapi.CShfeFtdcRiskWarnEventField_WarnType_get, _riskuserapi.CShfeFtdcRiskWarnEventField_WarnType_set)
    WarnLevel: "TShfeFtdcWarnLevelType" = property(_riskuserapi.CShfeFtdcRiskWarnEventField_WarnLevel_get, _riskuserapi.CShfeFtdcRiskWarnEventField_WarnLevel_set)
    RiskDevelop: "TShfeFtdcRiskDevelopType" = property(_riskuserapi.CShfeFtdcRiskWarnEventField_RiskDevelop_get, _riskuserapi.CShfeFtdcRiskWarnEventField_RiskDevelop_set)
    WarnDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRiskWarnEventField_WarnDate_get, _riskuserapi.CShfeFtdcRiskWarnEventField_WarnDate_set)
    WarnTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRiskWarnEventField_WarnTime_get, _riskuserapi.CShfeFtdcRiskWarnEventField_WarnTime_set)
    WarnContent: "TShfeFtdcContentType" = property(_riskuserapi.CShfeFtdcRiskWarnEventField_WarnContent_get, _riskuserapi.CShfeFtdcRiskWarnEventField_WarnContent_set)
    Memo: "TShfeFtdcMemoType" = property(_riskuserapi.CShfeFtdcRiskWarnEventField_Memo_get, _riskuserapi.CShfeFtdcRiskWarnEventField_Memo_set)

    def __eq__(self, ct: "CShfeFtdcRiskWarnEventField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskWarnEventField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskWarnEventField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskWarnEventField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskWarnEventField

# Register CShfeFtdcRiskWarnEventField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskWarnEventField_swigregister(CShfeFtdcRiskWarnEventField)
class CShfeFtdcSubWarnEventField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    WarnType: "TShfeFtdcWarnTypeType" = property(_riskuserapi.CShfeFtdcSubWarnEventField_WarnType_get, _riskuserapi.CShfeFtdcSubWarnEventField_WarnType_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSubWarnEventField_SequenceNo_get, _riskuserapi.CShfeFtdcSubWarnEventField_SequenceNo_set)

    def __eq__(self, ct: "CShfeFtdcSubWarnEventField") -> "bool":
        return _riskuserapi.CShfeFtdcSubWarnEventField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSubWarnEventField_swiginit(self, _riskuserapi.new_CShfeFtdcSubWarnEventField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSubWarnEventField

# Register CShfeFtdcSubWarnEventField in _riskuserapi:
_riskuserapi.CShfeFtdcSubWarnEventField_swigregister(CShfeFtdcSubWarnEventField)
class CShfeFtdcUnSubWarnEventField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    WarnType: "TShfeFtdcWarnTypeType" = property(_riskuserapi.CShfeFtdcUnSubWarnEventField_WarnType_get, _riskuserapi.CShfeFtdcUnSubWarnEventField_WarnType_set)

    def __eq__(self, ct: "CShfeFtdcUnSubWarnEventField") -> "bool":
        return _riskuserapi.CShfeFtdcUnSubWarnEventField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcUnSubWarnEventField_swiginit(self, _riskuserapi.new_CShfeFtdcUnSubWarnEventField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcUnSubWarnEventField

# Register CShfeFtdcUnSubWarnEventField in _riskuserapi:
_riskuserapi.CShfeFtdcUnSubWarnEventField_swigregister(CShfeFtdcUnSubWarnEventField)
class CShfeFtdcQryWarnDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryWarnDetailField_BrokerID_get, _riskuserapi.CShfeFtdcQryWarnDetailField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryWarnDetailField_InvestorID_get, _riskuserapi.CShfeFtdcQryWarnDetailField_InvestorID_set)
    InvestorGroup: "TShfeFtdcInvestorGroupType" = property(_riskuserapi.CShfeFtdcQryWarnDetailField_InvestorGroup_get, _riskuserapi.CShfeFtdcQryWarnDetailField_InvestorGroup_set)
    WarnType: "TShfeFtdcWarnTypeType" = property(_riskuserapi.CShfeFtdcQryWarnDetailField_WarnType_get, _riskuserapi.CShfeFtdcQryWarnDetailField_WarnType_set)

    def __eq__(self, ct: "CShfeFtdcQryWarnDetailField") -> "bool":
        return _riskuserapi.CShfeFtdcQryWarnDetailField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryWarnDetailField_swiginit(self, _riskuserapi.new_CShfeFtdcQryWarnDetailField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryWarnDetailField

# Register CShfeFtdcQryWarnDetailField in _riskuserapi:
_riskuserapi.CShfeFtdcQryWarnDetailField_swigregister(CShfeFtdcQryWarnDetailField)
class CShfeFtdcBigOrderCountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcBigOrderCountField_BrokerID_get, _riskuserapi.CShfeFtdcBigOrderCountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcBigOrderCountField_InvestorID_get, _riskuserapi.CShfeFtdcBigOrderCountField_InvestorID_set)
    InvestorGroup: "TShfeFtdcInvestorGroupType" = property(_riskuserapi.CShfeFtdcBigOrderCountField_InvestorGroup_get, _riskuserapi.CShfeFtdcBigOrderCountField_InvestorGroup_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcBigOrderCountField_ExchangeID_get, _riskuserapi.CShfeFtdcBigOrderCountField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcBigOrderCountField_InstrumentID_get, _riskuserapi.CShfeFtdcBigOrderCountField_InstrumentID_set)
    BigOrderVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcBigOrderCountField_BigOrderVol_get, _riskuserapi.CShfeFtdcBigOrderCountField_BigOrderVol_set)
    CurrentWarnLevel: "TShfeFtdcWarnLevelType" = property(_riskuserapi.CShfeFtdcBigOrderCountField_CurrentWarnLevel_get, _riskuserapi.CShfeFtdcBigOrderCountField_CurrentWarnLevel_set)

    def __eq__(self, ct: "CShfeFtdcBigOrderCountField") -> "bool":
        return _riskuserapi.CShfeFtdcBigOrderCountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcBigOrderCountField_swiginit(self, _riskuserapi.new_CShfeFtdcBigOrderCountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcBigOrderCountField

# Register CShfeFtdcBigOrderCountField in _riskuserapi:
_riskuserapi.CShfeFtdcBigOrderCountField_swigregister(CShfeFtdcBigOrderCountField)
class CShfeFtdcFreOrderCountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcFreOrderCountField_BrokerID_get, _riskuserapi.CShfeFtdcFreOrderCountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcFreOrderCountField_InvestorID_get, _riskuserapi.CShfeFtdcFreOrderCountField_InvestorID_set)
    InvestorGroup: "TShfeFtdcInvestorGroupType" = property(_riskuserapi.CShfeFtdcFreOrderCountField_InvestorGroup_get, _riskuserapi.CShfeFtdcFreOrderCountField_InvestorGroup_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcFreOrderCountField_ExchangeID_get, _riskuserapi.CShfeFtdcFreOrderCountField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcFreOrderCountField_InstrumentID_get, _riskuserapi.CShfeFtdcFreOrderCountField_InstrumentID_set)
    FreqOrderVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcFreOrderCountField_FreqOrderVol_get, _riskuserapi.CShfeFtdcFreOrderCountField_FreqOrderVol_set)
    CurrentWarnLevel: "TShfeFtdcWarnLevelType" = property(_riskuserapi.CShfeFtdcFreOrderCountField_CurrentWarnLevel_get, _riskuserapi.CShfeFtdcFreOrderCountField_CurrentWarnLevel_set)

    def __eq__(self, ct: "CShfeFtdcFreOrderCountField") -> "bool":
        return _riskuserapi.CShfeFtdcFreOrderCountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcFreOrderCountField_swiginit(self, _riskuserapi.new_CShfeFtdcFreOrderCountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcFreOrderCountField

# Register CShfeFtdcFreOrderCountField in _riskuserapi:
_riskuserapi.CShfeFtdcFreOrderCountField_swigregister(CShfeFtdcFreOrderCountField)
class CShfeFtdcOverTradeCountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcOverTradeCountField_BrokerID_get, _riskuserapi.CShfeFtdcOverTradeCountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcOverTradeCountField_InvestorID_get, _riskuserapi.CShfeFtdcOverTradeCountField_InvestorID_set)
    InvestorGroup: "TShfeFtdcInvestorGroupType" = property(_riskuserapi.CShfeFtdcOverTradeCountField_InvestorGroup_get, _riskuserapi.CShfeFtdcOverTradeCountField_InvestorGroup_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcOverTradeCountField_ExchangeID_get, _riskuserapi.CShfeFtdcOverTradeCountField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcOverTradeCountField_InstrumentID_get, _riskuserapi.CShfeFtdcOverTradeCountField_InstrumentID_set)
    InsType: "TShfeFtdcInsTypeType" = property(_riskuserapi.CShfeFtdcOverTradeCountField_InsType_get, _riskuserapi.CShfeFtdcOverTradeCountField_InsType_set)
    OverTradeVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOverTradeCountField_OverTradeVol_get, _riskuserapi.CShfeFtdcOverTradeCountField_OverTradeVol_set)
    CurrentWarnLevel: "TShfeFtdcWarnLevelType" = property(_riskuserapi.CShfeFtdcOverTradeCountField_CurrentWarnLevel_get, _riskuserapi.CShfeFtdcOverTradeCountField_CurrentWarnLevel_set)

    def __eq__(self, ct: "CShfeFtdcOverTradeCountField") -> "bool":
        return _riskuserapi.CShfeFtdcOverTradeCountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcOverTradeCountField_swiginit(self, _riskuserapi.new_CShfeFtdcOverTradeCountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcOverTradeCountField

# Register CShfeFtdcOverTradeCountField in _riskuserapi:
_riskuserapi.CShfeFtdcOverTradeCountField_swigregister(CShfeFtdcOverTradeCountField)
class CShfeFtdcInvestGroupField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestGroupField_BrokerID_get, _riskuserapi.CShfeFtdcInvestGroupField_BrokerID_set)
    ControllerID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestGroupField_ControllerID_get, _riskuserapi.CShfeFtdcInvestGroupField_ControllerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestGroupField_InvestorID_get, _riskuserapi.CShfeFtdcInvestGroupField_InvestorID_set)

    def __eq__(self, ct: "CShfeFtdcInvestGroupField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestGroupField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestGroupField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestGroupField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestGroupField

# Register CShfeFtdcInvestGroupField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestGroupField_swigregister(CShfeFtdcInvestGroupField)
class CShfeFtdcControllerField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcControllerField_BrokerID_get, _riskuserapi.CShfeFtdcControllerField_BrokerID_set)
    ControllerID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcControllerField_ControllerID_get, _riskuserapi.CShfeFtdcControllerField_ControllerID_set)
    ControllerName: "TShfeFtdcControllerNameType" = property(_riskuserapi.CShfeFtdcControllerField_ControllerName_get, _riskuserapi.CShfeFtdcControllerField_ControllerName_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcControllerField_ExchangeID_get, _riskuserapi.CShfeFtdcControllerField_ExchangeID_set)

    def __eq__(self, ct: "CShfeFtdcControllerField") -> "bool":
        return _riskuserapi.CShfeFtdcControllerField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcControllerField_swiginit(self, _riskuserapi.new_CShfeFtdcControllerField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcControllerField

# Register CShfeFtdcControllerField in _riskuserapi:
_riskuserapi.CShfeFtdcControllerField_swigregister(CShfeFtdcControllerField)
class CShfeFtdcQryControllerField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryControllerField_BrokerID_get, _riskuserapi.CShfeFtdcQryControllerField_BrokerID_set)
    ControllerID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryControllerField_ControllerID_get, _riskuserapi.CShfeFtdcQryControllerField_ControllerID_set)

    def __eq__(self, ct: "CShfeFtdcQryControllerField") -> "bool":
        return _riskuserapi.CShfeFtdcQryControllerField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryControllerField_swiginit(self, _riskuserapi.new_CShfeFtdcQryControllerField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryControllerField

# Register CShfeFtdcQryControllerField in _riskuserapi:
_riskuserapi.CShfeFtdcQryControllerField_swigregister(CShfeFtdcQryControllerField)
class CShfeFtdcQryMarginParamField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryMarginParamField_BrokerID_get, _riskuserapi.CShfeFtdcQryMarginParamField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryMarginParamField_InvestorID_get, _riskuserapi.CShfeFtdcQryMarginParamField_InvestorID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcQryMarginParamField_InvestorRange_get, _riskuserapi.CShfeFtdcQryMarginParamField_InvestorRange_set)
    TradingDate: "TShfeFtdcTradingDateType" = property(_riskuserapi.CShfeFtdcQryMarginParamField_TradingDate_get, _riskuserapi.CShfeFtdcQryMarginParamField_TradingDate_set)

    def __eq__(self, ct: "CShfeFtdcQryMarginParamField") -> "bool":
        return _riskuserapi.CShfeFtdcQryMarginParamField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryMarginParamField_swiginit(self, _riskuserapi.new_CShfeFtdcQryMarginParamField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryMarginParamField

# Register CShfeFtdcQryMarginParamField in _riskuserapi:
_riskuserapi.CShfeFtdcQryMarginParamField_swigregister(CShfeFtdcQryMarginParamField)
class CShfeFtdcLowUpOrderCountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcLowUpOrderCountField_BrokerID_get, _riskuserapi.CShfeFtdcLowUpOrderCountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcLowUpOrderCountField_InvestorID_get, _riskuserapi.CShfeFtdcLowUpOrderCountField_InvestorID_set)
    InvestorGroup: "TShfeFtdcInvestorGroupType" = property(_riskuserapi.CShfeFtdcLowUpOrderCountField_InvestorGroup_get, _riskuserapi.CShfeFtdcLowUpOrderCountField_InvestorGroup_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcLowUpOrderCountField_ExchangeID_get, _riskuserapi.CShfeFtdcLowUpOrderCountField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcLowUpOrderCountField_InstrumentID_get, _riskuserapi.CShfeFtdcLowUpOrderCountField_InstrumentID_set)
    LowUpOrderVol: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcLowUpOrderCountField_LowUpOrderVol_get, _riskuserapi.CShfeFtdcLowUpOrderCountField_LowUpOrderVol_set)
    CurrentWarnLevel: "TShfeFtdcWarnLevelType" = property(_riskuserapi.CShfeFtdcLowUpOrderCountField_CurrentWarnLevel_get, _riskuserapi.CShfeFtdcLowUpOrderCountField_CurrentWarnLevel_set)

    def __eq__(self, ct: "CShfeFtdcLowUpOrderCountField") -> "bool":
        return _riskuserapi.CShfeFtdcLowUpOrderCountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcLowUpOrderCountField_swiginit(self, _riskuserapi.new_CShfeFtdcLowUpOrderCountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcLowUpOrderCountField

# Register CShfeFtdcLowUpOrderCountField in _riskuserapi:
_riskuserapi.CShfeFtdcLowUpOrderCountField_swigregister(CShfeFtdcLowUpOrderCountField)
class CShfeFtdcBalanceCountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcBalanceCountField_BrokerID_get, _riskuserapi.CShfeFtdcBalanceCountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcBalanceCountField_InvestorID_get, _riskuserapi.CShfeFtdcBalanceCountField_InvestorID_set)
    InvestorGroup: "TShfeFtdcInvestorGroupType" = property(_riskuserapi.CShfeFtdcBalanceCountField_InvestorGroup_get, _riskuserapi.CShfeFtdcBalanceCountField_InvestorGroup_set)
    Balance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcBalanceCountField_Balance_get, _riskuserapi.CShfeFtdcBalanceCountField_Balance_set)
    RiskValue: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcBalanceCountField_RiskValue_get, _riskuserapi.CShfeFtdcBalanceCountField_RiskValue_set)
    ExchRiskValue: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcBalanceCountField_ExchRiskValue_get, _riskuserapi.CShfeFtdcBalanceCountField_ExchRiskValue_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcBalanceCountField_CurrencyID_get, _riskuserapi.CShfeFtdcBalanceCountField_CurrencyID_set)
    CurrentWarnLevel: "TShfeFtdcWarnLevelType" = property(_riskuserapi.CShfeFtdcBalanceCountField_CurrentWarnLevel_get, _riskuserapi.CShfeFtdcBalanceCountField_CurrentWarnLevel_set)

    def __eq__(self, ct: "CShfeFtdcBalanceCountField") -> "bool":
        return _riskuserapi.CShfeFtdcBalanceCountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcBalanceCountField_swiginit(self, _riskuserapi.new_CShfeFtdcBalanceCountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcBalanceCountField

# Register CShfeFtdcBalanceCountField in _riskuserapi:
_riskuserapi.CShfeFtdcBalanceCountField_swigregister(CShfeFtdcBalanceCountField)
class CShfeFtdcDepthMarketCountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcDepthMarketCountField_BrokerID_get, _riskuserapi.CShfeFtdcDepthMarketCountField_BrokerID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcDepthMarketCountField_InstrumentID_get, _riskuserapi.CShfeFtdcDepthMarketCountField_InstrumentID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcDepthMarketCountField_InvestorID_get, _riskuserapi.CShfeFtdcDepthMarketCountField_InvestorID_set)
    LastPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcDepthMarketCountField_LastPrice_get, _riskuserapi.CShfeFtdcDepthMarketCountField_LastPrice_set)
    CurrentWarnLevel: "TShfeFtdcWarnLevelType" = property(_riskuserapi.CShfeFtdcDepthMarketCountField_CurrentWarnLevel_get, _riskuserapi.CShfeFtdcDepthMarketCountField_CurrentWarnLevel_set)

    def __eq__(self, ct: "CShfeFtdcDepthMarketCountField") -> "bool":
        return _riskuserapi.CShfeFtdcDepthMarketCountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcDepthMarketCountField_swiginit(self, _riskuserapi.new_CShfeFtdcDepthMarketCountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcDepthMarketCountField

# Register CShfeFtdcDepthMarketCountField in _riskuserapi:
_riskuserapi.CShfeFtdcDepthMarketCountField_swigregister(CShfeFtdcDepthMarketCountField)
class CShfeFtdcOrderCountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcOrderCountField_BrokerID_get, _riskuserapi.CShfeFtdcOrderCountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcOrderCountField_InvestorID_get, _riskuserapi.CShfeFtdcOrderCountField_InvestorID_set)
    InvestorGroup: "TShfeFtdcInvestorGroupType" = property(_riskuserapi.CShfeFtdcOrderCountField_InvestorGroup_get, _riskuserapi.CShfeFtdcOrderCountField_InvestorGroup_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcOrderCountField_InstrumentID_get, _riskuserapi.CShfeFtdcOrderCountField_InstrumentID_set)
    InsType: "TShfeFtdcInsTypeType" = property(_riskuserapi.CShfeFtdcOrderCountField_InsType_get, _riskuserapi.CShfeFtdcOrderCountField_InsType_set)
    WarnHedge: "TShfeFtdcWarnHedgeType" = property(_riskuserapi.CShfeFtdcOrderCountField_WarnHedge_get, _riskuserapi.CShfeFtdcOrderCountField_WarnHedge_set)
    CurrentWarnLevel: "TShfeFtdcWarnLevelType" = property(_riskuserapi.CShfeFtdcOrderCountField_CurrentWarnLevel_get, _riskuserapi.CShfeFtdcOrderCountField_CurrentWarnLevel_set)
    nTraded: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOrderCountField_nTraded_get, _riskuserapi.CShfeFtdcOrderCountField_nTraded_set)
    nOpen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOrderCountField_nOpen_get, _riskuserapi.CShfeFtdcOrderCountField_nOpen_set)
    nClose: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOrderCountField_nClose_get, _riskuserapi.CShfeFtdcOrderCountField_nClose_set)
    nAll: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOrderCountField_nAll_get, _riskuserapi.CShfeFtdcOrderCountField_nAll_set)
    nCanceled: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcOrderCountField_nCanceled_get, _riskuserapi.CShfeFtdcOrderCountField_nCanceled_set)

    def __eq__(self, ct: "CShfeFtdcOrderCountField") -> "bool":
        return _riskuserapi.CShfeFtdcOrderCountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcOrderCountField_swiginit(self, _riskuserapi.new_CShfeFtdcOrderCountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcOrderCountField

# Register CShfeFtdcOrderCountField in _riskuserapi:
_riskuserapi.CShfeFtdcOrderCountField_swigregister(CShfeFtdcOrderCountField)
class CShfeFtdcQryIllegalPositionsNearDeliveryMonthField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryIllegalPositionsNearDeliveryMonthField_BrokerID_get, _riskuserapi.CShfeFtdcQryIllegalPositionsNearDeliveryMonthField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryIllegalPositionsNearDeliveryMonthField_InvestorID_get, _riskuserapi.CShfeFtdcQryIllegalPositionsNearDeliveryMonthField_InvestorID_set)
    InvestorRange: "TShfeFtdcQryIllegalPositionsNearDeliveryMonthInvestorRangeType" = property(_riskuserapi.CShfeFtdcQryIllegalPositionsNearDeliveryMonthField_InvestorRange_get, _riskuserapi.CShfeFtdcQryIllegalPositionsNearDeliveryMonthField_InvestorRange_set)
    IllegalType: "TShfeFtdcIllegalTypeType" = property(_riskuserapi.CShfeFtdcQryIllegalPositionsNearDeliveryMonthField_IllegalType_get, _riskuserapi.CShfeFtdcQryIllegalPositionsNearDeliveryMonthField_IllegalType_set)
    ReminderDays: "TShfeFtdcDayNumberType" = property(_riskuserapi.CShfeFtdcQryIllegalPositionsNearDeliveryMonthField_ReminderDays_get, _riskuserapi.CShfeFtdcQryIllegalPositionsNearDeliveryMonthField_ReminderDays_set)

    def __eq__(self, ct: "CShfeFtdcQryIllegalPositionsNearDeliveryMonthField") -> "bool":
        return _riskuserapi.CShfeFtdcQryIllegalPositionsNearDeliveryMonthField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryIllegalPositionsNearDeliveryMonthField_swiginit(self, _riskuserapi.new_CShfeFtdcQryIllegalPositionsNearDeliveryMonthField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryIllegalPositionsNearDeliveryMonthField

# Register CShfeFtdcQryIllegalPositionsNearDeliveryMonthField in _riskuserapi:
_riskuserapi.CShfeFtdcQryIllegalPositionsNearDeliveryMonthField_swigregister(CShfeFtdcQryIllegalPositionsNearDeliveryMonthField)
class CShfeFtdcIllegalPositionsNearDeliveryMonthField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_InvestorID_get, _riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_InvestorID_set)
    DepartmentID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_DepartmentID_get, _riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_DepartmentID_set)
    IllegalType: "TShfeFtdcIllegalTypeType" = property(_riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_IllegalType_get, _riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_IllegalType_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_ExchangeID_get, _riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_InstrumentID_get, _riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_InstrumentID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_HedgeFlag_get, _riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_HedgeFlag_set)
    LPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_LPosition_get, _riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_LPosition_set)
    SPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_SPosition_get, _riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_SPosition_set)
    LTodayPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_LTodayPosition_get, _riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_LTodayPosition_set)
    STodayPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_STodayPosition_get, _riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_STodayPosition_set)
    LEnableClose: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_LEnableClose_get, _riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_LEnableClose_set)
    SEnableClose: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_SEnableClose_get, _riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_SEnableClose_set)
    ReminderDays: "TShfeFtdcDayNumberType" = property(_riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_ReminderDays_get, _riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_ReminderDays_set)

    def __eq__(self, ct: "CShfeFtdcIllegalPositionsNearDeliveryMonthField") -> "bool":
        return _riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_swiginit(self, _riskuserapi.new_CShfeFtdcIllegalPositionsNearDeliveryMonthField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcIllegalPositionsNearDeliveryMonthField

# Register CShfeFtdcIllegalPositionsNearDeliveryMonthField in _riskuserapi:
_riskuserapi.CShfeFtdcIllegalPositionsNearDeliveryMonthField_swigregister(CShfeFtdcIllegalPositionsNearDeliveryMonthField)
class CShfeFtdcQrySpecMarginInvestorField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQrySpecMarginInvestorField_BrokerID_get, _riskuserapi.CShfeFtdcQrySpecMarginInvestorField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQrySpecMarginInvestorField_InvestorID_get, _riskuserapi.CShfeFtdcQrySpecMarginInvestorField_InvestorID_set)
    InvestorRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcQrySpecMarginInvestorField_InvestorRange_get, _riskuserapi.CShfeFtdcQrySpecMarginInvestorField_InvestorRange_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQrySpecMarginInvestorField_InstrumentID_get, _riskuserapi.CShfeFtdcQrySpecMarginInvestorField_InstrumentID_set)
    RateInvstQryRange: "TShfeFtdcRateInvstQryRangeType" = property(_riskuserapi.CShfeFtdcQrySpecMarginInvestorField_RateInvstQryRange_get, _riskuserapi.CShfeFtdcQrySpecMarginInvestorField_RateInvstQryRange_set)

    def __eq__(self, ct: "CShfeFtdcQrySpecMarginInvestorField") -> "bool":
        return _riskuserapi.CShfeFtdcQrySpecMarginInvestorField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQrySpecMarginInvestorField_swiginit(self, _riskuserapi.new_CShfeFtdcQrySpecMarginInvestorField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQrySpecMarginInvestorField

# Register CShfeFtdcQrySpecMarginInvestorField in _riskuserapi:
_riskuserapi.CShfeFtdcQrySpecMarginInvestorField_swigregister(CShfeFtdcQrySpecMarginInvestorField)
class CShfeFtdcSpecMarginInvestorField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSpecMarginInvestorField_BrokerID_get, _riskuserapi.CShfeFtdcSpecMarginInvestorField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSpecMarginInvestorField_InvestorID_get, _riskuserapi.CShfeFtdcSpecMarginInvestorField_InvestorID_set)
    RateInvestorRange: "TShfeFtdcRateInvestorRangeType" = property(_riskuserapi.CShfeFtdcSpecMarginInvestorField_RateInvestorRange_get, _riskuserapi.CShfeFtdcSpecMarginInvestorField_RateInvestorRange_set)

    def __eq__(self, ct: "CShfeFtdcSpecMarginInvestorField") -> "bool":
        return _riskuserapi.CShfeFtdcSpecMarginInvestorField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSpecMarginInvestorField_swiginit(self, _riskuserapi.new_CShfeFtdcSpecMarginInvestorField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSpecMarginInvestorField

# Register CShfeFtdcSpecMarginInvestorField in _riskuserapi:
_riskuserapi.CShfeFtdcSpecMarginInvestorField_swigregister(CShfeFtdcSpecMarginInvestorField)
class CShfeFtdcTradeCountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcTradeCountField_BrokerID_get, _riskuserapi.CShfeFtdcTradeCountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcTradeCountField_InvestorID_get, _riskuserapi.CShfeFtdcTradeCountField_InvestorID_set)
    InvestorGroup: "TShfeFtdcInvestorGroupType" = property(_riskuserapi.CShfeFtdcTradeCountField_InvestorGroup_get, _riskuserapi.CShfeFtdcTradeCountField_InvestorGroup_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcTradeCountField_InstrumentID_get, _riskuserapi.CShfeFtdcTradeCountField_InstrumentID_set)
    InsType: "TShfeFtdcInsTypeType" = property(_riskuserapi.CShfeFtdcTradeCountField_InsType_get, _riskuserapi.CShfeFtdcTradeCountField_InsType_set)
    WarnHedge: "TShfeFtdcWarnHedgeType" = property(_riskuserapi.CShfeFtdcTradeCountField_WarnHedge_get, _riskuserapi.CShfeFtdcTradeCountField_WarnHedge_set)
    CurrentWarnLevel: "TShfeFtdcWarnLevelType" = property(_riskuserapi.CShfeFtdcTradeCountField_CurrentWarnLevel_get, _riskuserapi.CShfeFtdcTradeCountField_CurrentWarnLevel_set)
    nPending: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcTradeCountField_nPending_get, _riskuserapi.CShfeFtdcTradeCountField_nPending_set)
    nOpen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcTradeCountField_nOpen_get, _riskuserapi.CShfeFtdcTradeCountField_nOpen_set)
    nClose: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcTradeCountField_nClose_get, _riskuserapi.CShfeFtdcTradeCountField_nClose_set)
    nAll: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcTradeCountField_nAll_get, _riskuserapi.CShfeFtdcTradeCountField_nAll_set)

    def __eq__(self, ct: "CShfeFtdcTradeCountField") -> "bool":
        return _riskuserapi.CShfeFtdcTradeCountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTradeCountField_swiginit(self, _riskuserapi.new_CShfeFtdcTradeCountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTradeCountField

# Register CShfeFtdcTradeCountField in _riskuserapi:
_riskuserapi.CShfeFtdcTradeCountField_swigregister(CShfeFtdcTradeCountField)
class CShfeFtdcPositionCountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcPositionCountField_BrokerID_get, _riskuserapi.CShfeFtdcPositionCountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcPositionCountField_InvestorID_get, _riskuserapi.CShfeFtdcPositionCountField_InvestorID_set)
    InvestorGroup: "TShfeFtdcInvestorGroupType" = property(_riskuserapi.CShfeFtdcPositionCountField_InvestorGroup_get, _riskuserapi.CShfeFtdcPositionCountField_InvestorGroup_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcPositionCountField_InstrumentID_get, _riskuserapi.CShfeFtdcPositionCountField_InstrumentID_set)
    InsType: "TShfeFtdcInsTypeType" = property(_riskuserapi.CShfeFtdcPositionCountField_InsType_get, _riskuserapi.CShfeFtdcPositionCountField_InsType_set)
    WarnHedge: "TShfeFtdcWarnHedgeType" = property(_riskuserapi.CShfeFtdcPositionCountField_WarnHedge_get, _riskuserapi.CShfeFtdcPositionCountField_WarnHedge_set)
    CurrentWarnLevel: "TShfeFtdcWarnLevelType" = property(_riskuserapi.CShfeFtdcPositionCountField_CurrentWarnLevel_get, _riskuserapi.CShfeFtdcPositionCountField_CurrentWarnLevel_set)
    LongPos: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionCountField_LongPos_get, _riskuserapi.CShfeFtdcPositionCountField_LongPos_set)
    ShortPos: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionCountField_ShortPos_get, _riskuserapi.CShfeFtdcPositionCountField_ShortPos_set)
    nAll: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcPositionCountField_nAll_get, _riskuserapi.CShfeFtdcPositionCountField_nAll_set)

    def __eq__(self, ct: "CShfeFtdcPositionCountField") -> "bool":
        return _riskuserapi.CShfeFtdcPositionCountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcPositionCountField_swiginit(self, _riskuserapi.new_CShfeFtdcPositionCountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcPositionCountField

# Register CShfeFtdcPositionCountField in _riskuserapi:
_riskuserapi.CShfeFtdcPositionCountField_swigregister(CShfeFtdcPositionCountField)
class CShfeFtdcSelfTradeMonitorCountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSelfTradeMonitorCountField_BrokerID_get, _riskuserapi.CShfeFtdcSelfTradeMonitorCountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSelfTradeMonitorCountField_InvestorID_get, _riskuserapi.CShfeFtdcSelfTradeMonitorCountField_InvestorID_set)
    InvestorGroup: "TShfeFtdcInvestorGroupType" = property(_riskuserapi.CShfeFtdcSelfTradeMonitorCountField_InvestorGroup_get, _riskuserapi.CShfeFtdcSelfTradeMonitorCountField_InvestorGroup_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSelfTradeMonitorCountField_ExchangeID_get, _riskuserapi.CShfeFtdcSelfTradeMonitorCountField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSelfTradeMonitorCountField_InstrumentID_get, _riskuserapi.CShfeFtdcSelfTradeMonitorCountField_InstrumentID_set)
    SelfTrade: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSelfTradeMonitorCountField_SelfTrade_get, _riskuserapi.CShfeFtdcSelfTradeMonitorCountField_SelfTrade_set)
    CurrentWarnLevel: "TShfeFtdcWarnLevelType" = property(_riskuserapi.CShfeFtdcSelfTradeMonitorCountField_CurrentWarnLevel_get, _riskuserapi.CShfeFtdcSelfTradeMonitorCountField_CurrentWarnLevel_set)

    def __eq__(self, ct: "CShfeFtdcSelfTradeMonitorCountField") -> "bool":
        return _riskuserapi.CShfeFtdcSelfTradeMonitorCountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSelfTradeMonitorCountField_swiginit(self, _riskuserapi.new_CShfeFtdcSelfTradeMonitorCountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSelfTradeMonitorCountField

# Register CShfeFtdcSelfTradeMonitorCountField in _riskuserapi:
_riskuserapi.CShfeFtdcSelfTradeMonitorCountField_swigregister(CShfeFtdcSelfTradeMonitorCountField)
class CShfeFtdcQryWarnInvestorField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryWarnInvestorField_BrokerID_get, _riskuserapi.CShfeFtdcQryWarnInvestorField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryWarnInvestorField_InvestorID_get, _riskuserapi.CShfeFtdcQryWarnInvestorField_InvestorID_set)
    WarnInvestorRange: "TShfeFtdcWarnInvestorRangeType" = property(_riskuserapi.CShfeFtdcQryWarnInvestorField_WarnInvestorRange_get, _riskuserapi.CShfeFtdcQryWarnInvestorField_WarnInvestorRange_set)

    def __eq__(self, ct: "CShfeFtdcQryWarnInvestorField") -> "bool":
        return _riskuserapi.CShfeFtdcQryWarnInvestorField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryWarnInvestorField_swiginit(self, _riskuserapi.new_CShfeFtdcQryWarnInvestorField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryWarnInvestorField

# Register CShfeFtdcQryWarnInvestorField in _riskuserapi:
_riskuserapi.CShfeFtdcQryWarnInvestorField_swigregister(CShfeFtdcQryWarnInvestorField)
class CShfeFtdcSetExerFutureSelfCloseField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSetExerFutureSelfCloseField_BrokerID_get, _riskuserapi.CShfeFtdcSetExerFutureSelfCloseField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSetExerFutureSelfCloseField_InvestorID_get, _riskuserapi.CShfeFtdcSetExerFutureSelfCloseField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSetExerFutureSelfCloseField_InstrumentID_get, _riskuserapi.CShfeFtdcSetExerFutureSelfCloseField_InstrumentID_set)
    Operation: "TShfeFtdcDBOperationType" = property(_riskuserapi.CShfeFtdcSetExerFutureSelfCloseField_Operation_get, _riskuserapi.CShfeFtdcSetExerFutureSelfCloseField_Operation_set)

    def __eq__(self, ct: "CShfeFtdcSetExerFutureSelfCloseField") -> "bool":
        return _riskuserapi.CShfeFtdcSetExerFutureSelfCloseField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSetExerFutureSelfCloseField_swiginit(self, _riskuserapi.new_CShfeFtdcSetExerFutureSelfCloseField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSetExerFutureSelfCloseField

# Register CShfeFtdcSetExerFutureSelfCloseField in _riskuserapi:
_riskuserapi.CShfeFtdcSetExerFutureSelfCloseField_swigregister(CShfeFtdcSetExerFutureSelfCloseField)
class CShfeFtdcRiskNotifyAckField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcRiskNotifyAckField_SequenceNo_get, _riskuserapi.CShfeFtdcRiskNotifyAckField_SequenceNo_set)
    Type: "TShfeFtdcSmsCustomTypeType" = property(_riskuserapi.CShfeFtdcRiskNotifyAckField_Type_get, _riskuserapi.CShfeFtdcRiskNotifyAckField_Type_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyAckField_BrokerID_get, _riskuserapi.CShfeFtdcRiskNotifyAckField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyAckField_UserID_get, _riskuserapi.CShfeFtdcRiskNotifyAckField_UserID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRiskNotifyAckField_InvestorID_get, _riskuserapi.CShfeFtdcRiskNotifyAckField_InvestorID_set)
    Status: "TShfeFtdcRiskNotifyStatusType" = property(_riskuserapi.CShfeFtdcRiskNotifyAckField_Status_get, _riskuserapi.CShfeFtdcRiskNotifyAckField_Status_set)
    AckContent: "TShfeFtdcAckContentType" = property(_riskuserapi.CShfeFtdcRiskNotifyAckField_AckContent_get, _riskuserapi.CShfeFtdcRiskNotifyAckField_AckContent_set)

    def __eq__(self, ct: "CShfeFtdcRiskNotifyAckField") -> "bool":
        return _riskuserapi.CShfeFtdcRiskNotifyAckField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRiskNotifyAckField_swiginit(self, _riskuserapi.new_CShfeFtdcRiskNotifyAckField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskNotifyAckField

# Register CShfeFtdcRiskNotifyAckField in _riskuserapi:
_riskuserapi.CShfeFtdcRiskNotifyAckField_swigregister(CShfeFtdcRiskNotifyAckField)
class CShfeFtdcInvestorInfoCommField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorInfoCommField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorInfoCommField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorInfoCommField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorInfoCommField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInvestorInfoCommField_InstrumentID_get, _riskuserapi.CShfeFtdcInvestorInfoCommField_InstrumentID_set)
    OrderCount: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorInfoCommField_OrderCount_get, _riskuserapi.CShfeFtdcInvestorInfoCommField_OrderCount_set)
    OrderActionCount: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorInfoCommField_OrderActionCount_get, _riskuserapi.CShfeFtdcInvestorInfoCommField_OrderActionCount_set)
    ForQuoteCnt: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInvestorInfoCommField_ForQuoteCnt_get, _riskuserapi.CShfeFtdcInvestorInfoCommField_ForQuoteCnt_set)
    InfoComm: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorInfoCommField_InfoComm_get, _riskuserapi.CShfeFtdcInvestorInfoCommField_InfoComm_set)
    IsOptSeries: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcInvestorInfoCommField_IsOptSeries_get, _riskuserapi.CShfeFtdcInvestorInfoCommField_IsOptSeries_set)
    ProductID: "TShfeFtdcProductIDType" = property(_riskuserapi.CShfeFtdcInvestorInfoCommField_ProductID_get, _riskuserapi.CShfeFtdcInvestorInfoCommField_ProductID_set)
    InvestorGroup: "TShfeFtdcInvestorGroupType" = property(_riskuserapi.CShfeFtdcInvestorInfoCommField_InvestorGroup_get, _riskuserapi.CShfeFtdcInvestorInfoCommField_InvestorGroup_set)

    def __eq__(self, ct: "CShfeFtdcInvestorInfoCommField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorInfoCommField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorInfoCommField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorInfoCommField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorInfoCommField

# Register CShfeFtdcInvestorInfoCommField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorInfoCommField_swigregister(CShfeFtdcInvestorInfoCommField)
class CShfeFtdcQryInvestorInfoCommField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInvestorInfoCommField_BrokerID_get, _riskuserapi.CShfeFtdcQryInvestorInfoCommField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryInvestorInfoCommField_InvestorID_get, _riskuserapi.CShfeFtdcQryInvestorInfoCommField_InvestorID_set)
    InvestorGroup: "TShfeFtdcInvestorGroupType" = property(_riskuserapi.CShfeFtdcQryInvestorInfoCommField_InvestorGroup_get, _riskuserapi.CShfeFtdcQryInvestorInfoCommField_InvestorGroup_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryInvestorInfoCommField_InstrumentID_get, _riskuserapi.CShfeFtdcQryInvestorInfoCommField_InstrumentID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryInvestorInfoCommField_ExchangeID_get, _riskuserapi.CShfeFtdcQryInvestorInfoCommField_ExchangeID_set)

    def __eq__(self, ct: "CShfeFtdcQryInvestorInfoCommField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInvestorInfoCommField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInvestorInfoCommField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInvestorInfoCommField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInvestorInfoCommField

# Register CShfeFtdcQryInvestorInfoCommField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInvestorInfoCommField_swigregister(CShfeFtdcQryInvestorInfoCommField)
class CShfeFtdcResetOptionSelfCloseField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcResetOptionSelfCloseField_ParticipantID_get, _riskuserapi.CShfeFtdcResetOptionSelfCloseField_ParticipantID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcResetOptionSelfCloseField_InvestorID_get, _riskuserapi.CShfeFtdcResetOptionSelfCloseField_InvestorID_set)
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcResetOptionSelfCloseField_ProductID_get, _riskuserapi.CShfeFtdcResetOptionSelfCloseField_ProductID_set)
    OptionOffsetFlag: "TShfeFtdcCZCEOptionOffsetFlagType" = property(_riskuserapi.CShfeFtdcResetOptionSelfCloseField_OptionOffsetFlag_get, _riskuserapi.CShfeFtdcResetOptionSelfCloseField_OptionOffsetFlag_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcResetOptionSelfCloseField_BrokerID_get, _riskuserapi.CShfeFtdcResetOptionSelfCloseField_BrokerID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcResetOptionSelfCloseField_ClientID_get, _riskuserapi.CShfeFtdcResetOptionSelfCloseField_ClientID_set)

    def __eq__(self, ct: "CShfeFtdcResetOptionSelfCloseField") -> "bool":
        return _riskuserapi.CShfeFtdcResetOptionSelfCloseField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcResetOptionSelfCloseField_swiginit(self, _riskuserapi.new_CShfeFtdcResetOptionSelfCloseField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcResetOptionSelfCloseField

# Register CShfeFtdcResetOptionSelfCloseField in _riskuserapi:
_riskuserapi.CShfeFtdcResetOptionSelfCloseField_swigregister(CShfeFtdcResetOptionSelfCloseField)
class CShfeFtdcPreSettleField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcPreSettleField_BrokerID_get, _riskuserapi.CShfeFtdcPreSettleField_BrokerID_set)
    SettleRange: "TShfeFtdcInvestorRangeType" = property(_riskuserapi.CShfeFtdcPreSettleField_SettleRange_get, _riskuserapi.CShfeFtdcPreSettleField_SettleRange_set)
    SettleID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcPreSettleField_SettleID_get, _riskuserapi.CShfeFtdcPreSettleField_SettleID_set)

    def __eq__(self, ct: "CShfeFtdcPreSettleField") -> "bool":
        return _riskuserapi.CShfeFtdcPreSettleField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcPreSettleField_swiginit(self, _riskuserapi.new_CShfeFtdcPreSettleField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcPreSettleField

# Register CShfeFtdcPreSettleField in _riskuserapi:
_riskuserapi.CShfeFtdcPreSettleField_swigregister(CShfeFtdcPreSettleField)
class CShfeFtdcRejectOrderCountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRejectOrderCountField_BrokerID_get, _riskuserapi.CShfeFtdcRejectOrderCountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRejectOrderCountField_InvestorID_get, _riskuserapi.CShfeFtdcRejectOrderCountField_InvestorID_set)
    InvestorGroup: "TShfeFtdcInvestorGroupType" = property(_riskuserapi.CShfeFtdcRejectOrderCountField_InvestorGroup_get, _riskuserapi.CShfeFtdcRejectOrderCountField_InvestorGroup_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRejectOrderCountField_InstrumentID_get, _riskuserapi.CShfeFtdcRejectOrderCountField_InstrumentID_set)
    InsType: "TShfeFtdcInsTypeType" = property(_riskuserapi.CShfeFtdcRejectOrderCountField_InsType_get, _riskuserapi.CShfeFtdcRejectOrderCountField_InsType_set)
    WarnHedge: "TShfeFtdcWarnHedgeType" = property(_riskuserapi.CShfeFtdcRejectOrderCountField_WarnHedge_get, _riskuserapi.CShfeFtdcRejectOrderCountField_WarnHedge_set)
    CurrentWarnLevel: "TShfeFtdcWarnLevelType" = property(_riskuserapi.CShfeFtdcRejectOrderCountField_CurrentWarnLevel_get, _riskuserapi.CShfeFtdcRejectOrderCountField_CurrentWarnLevel_set)
    Amount: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRejectOrderCountField_Amount_get, _riskuserapi.CShfeFtdcRejectOrderCountField_Amount_set)
    Frequency: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRejectOrderCountField_Frequency_get, _riskuserapi.CShfeFtdcRejectOrderCountField_Frequency_set)
    FreqTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcRejectOrderCountField_FreqTime_get, _riskuserapi.CShfeFtdcRejectOrderCountField_FreqTime_set)

    def __eq__(self, ct: "CShfeFtdcRejectOrderCountField") -> "bool":
        return _riskuserapi.CShfeFtdcRejectOrderCountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRejectOrderCountField_swiginit(self, _riskuserapi.new_CShfeFtdcRejectOrderCountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRejectOrderCountField

# Register CShfeFtdcRejectOrderCountField in _riskuserapi:
_riskuserapi.CShfeFtdcRejectOrderCountField_swigregister(CShfeFtdcRejectOrderCountField)
class CShfeFtdcExchangeInstrumentField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcExchangeInstrumentField_ExchangeID_get, _riskuserapi.CShfeFtdcExchangeInstrumentField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcExchangeInstrumentField_InstrumentID_get, _riskuserapi.CShfeFtdcExchangeInstrumentField_InstrumentID_set)

    def __eq__(self, ct: "CShfeFtdcExchangeInstrumentField") -> "bool":
        return _riskuserapi.CShfeFtdcExchangeInstrumentField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcExchangeInstrumentField_swiginit(self, _riskuserapi.new_CShfeFtdcExchangeInstrumentField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcExchangeInstrumentField

# Register CShfeFtdcExchangeInstrumentField in _riskuserapi:
_riskuserapi.CShfeFtdcExchangeInstrumentField_swigregister(CShfeFtdcExchangeInstrumentField)
class CShfeFtdcExchangeTempMarginRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcExchangeTempMarginRateField_ExchangeID_get, _riskuserapi.CShfeFtdcExchangeTempMarginRateField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcExchangeTempMarginRateField_InstrumentID_get, _riskuserapi.CShfeFtdcExchangeTempMarginRateField_InstrumentID_set)
    SpeculationLongMarginRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchangeTempMarginRateField_SpeculationLongMarginRatio_get, _riskuserapi.CShfeFtdcExchangeTempMarginRateField_SpeculationLongMarginRatio_set)
    SpeculationShortMarginRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchangeTempMarginRateField_SpeculationShortMarginRatio_get, _riskuserapi.CShfeFtdcExchangeTempMarginRateField_SpeculationShortMarginRatio_set)
    HedgeLongMarginRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchangeTempMarginRateField_HedgeLongMarginRatio_get, _riskuserapi.CShfeFtdcExchangeTempMarginRateField_HedgeLongMarginRatio_set)
    HedgeShortMarginRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchangeTempMarginRateField_HedgeShortMarginRatio_get, _riskuserapi.CShfeFtdcExchangeTempMarginRateField_HedgeShortMarginRatio_set)
    ArbitrageLongMarginRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchangeTempMarginRateField_ArbitrageLongMarginRatio_get, _riskuserapi.CShfeFtdcExchangeTempMarginRateField_ArbitrageLongMarginRatio_set)
    ArbitrageShortMarginRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcExchangeTempMarginRateField_ArbitrageShortMarginRatio_get, _riskuserapi.CShfeFtdcExchangeTempMarginRateField_ArbitrageShortMarginRatio_set)

    def __eq__(self, ct: "CShfeFtdcExchangeTempMarginRateField") -> "bool":
        return _riskuserapi.CShfeFtdcExchangeTempMarginRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcExchangeTempMarginRateField_swiginit(self, _riskuserapi.new_CShfeFtdcExchangeTempMarginRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcExchangeTempMarginRateField

# Register CShfeFtdcExchangeTempMarginRateField in _riskuserapi:
_riskuserapi.CShfeFtdcExchangeTempMarginRateField_swigregister(CShfeFtdcExchangeTempMarginRateField)
class CShfeFtdcSetExchTempMarginRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSetExchTempMarginRateField_ExchangeID_get, _riskuserapi.CShfeFtdcSetExchTempMarginRateField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSetExchTempMarginRateField_InstrumentID_get, _riskuserapi.CShfeFtdcSetExchTempMarginRateField_InstrumentID_set)
    SpeculationLongMarginRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSetExchTempMarginRateField_SpeculationLongMarginRatio_get, _riskuserapi.CShfeFtdcSetExchTempMarginRateField_SpeculationLongMarginRatio_set)
    SpeculationShortMarginRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSetExchTempMarginRateField_SpeculationShortMarginRatio_get, _riskuserapi.CShfeFtdcSetExchTempMarginRateField_SpeculationShortMarginRatio_set)
    HedgeLongMarginRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSetExchTempMarginRateField_HedgeLongMarginRatio_get, _riskuserapi.CShfeFtdcSetExchTempMarginRateField_HedgeLongMarginRatio_set)
    HedgeShortMarginRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSetExchTempMarginRateField_HedgeShortMarginRatio_get, _riskuserapi.CShfeFtdcSetExchTempMarginRateField_HedgeShortMarginRatio_set)
    ArbitrageLongMarginRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSetExchTempMarginRateField_ArbitrageLongMarginRatio_get, _riskuserapi.CShfeFtdcSetExchTempMarginRateField_ArbitrageLongMarginRatio_set)
    ArbitrageShortMarginRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSetExchTempMarginRateField_ArbitrageShortMarginRatio_get, _riskuserapi.CShfeFtdcSetExchTempMarginRateField_ArbitrageShortMarginRatio_set)
    Operation: "TShfeFtdcDBOperationType" = property(_riskuserapi.CShfeFtdcSetExchTempMarginRateField_Operation_get, _riskuserapi.CShfeFtdcSetExchTempMarginRateField_Operation_set)

    def __eq__(self, ct: "CShfeFtdcSetExchTempMarginRateField") -> "bool":
        return _riskuserapi.CShfeFtdcSetExchTempMarginRateField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSetExchTempMarginRateField_swiginit(self, _riskuserapi.new_CShfeFtdcSetExchTempMarginRateField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSetExchTempMarginRateField

# Register CShfeFtdcSetExchTempMarginRateField in _riskuserapi:
_riskuserapi.CShfeFtdcSetExchTempMarginRateField_swigregister(CShfeFtdcSetExchTempMarginRateField)
class CShfeFtdcOneSidedMarketField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcOneSidedMarketField_ExchangeID_get, _riskuserapi.CShfeFtdcOneSidedMarketField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcOneSidedMarketField_InstrumentID_get, _riskuserapi.CShfeFtdcOneSidedMarketField_InstrumentID_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcOneSidedMarketField_TradingDay_get, _riskuserapi.CShfeFtdcOneSidedMarketField_TradingDay_set)
    Side: "TShfeFtdcSideType" = property(_riskuserapi.CShfeFtdcOneSidedMarketField_Side_get, _riskuserapi.CShfeFtdcOneSidedMarketField_Side_set)
    NextTradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcOneSidedMarketField_NextTradingDay_get, _riskuserapi.CShfeFtdcOneSidedMarketField_NextTradingDay_set)

    def __eq__(self, ct: "CShfeFtdcOneSidedMarketField") -> "bool":
        return _riskuserapi.CShfeFtdcOneSidedMarketField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcOneSidedMarketField_swiginit(self, _riskuserapi.new_CShfeFtdcOneSidedMarketField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcOneSidedMarketField

# Register CShfeFtdcOneSidedMarketField in _riskuserapi:
_riskuserapi.CShfeFtdcOneSidedMarketField_swigregister(CShfeFtdcOneSidedMarketField)
class CShfeFtdcSetOneSidedMarketField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSetOneSidedMarketField_ExchangeID_get, _riskuserapi.CShfeFtdcSetOneSidedMarketField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSetOneSidedMarketField_InstrumentID_get, _riskuserapi.CShfeFtdcSetOneSidedMarketField_InstrumentID_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSetOneSidedMarketField_TradingDay_get, _riskuserapi.CShfeFtdcSetOneSidedMarketField_TradingDay_set)
    Side: "TShfeFtdcSideType" = property(_riskuserapi.CShfeFtdcSetOneSidedMarketField_Side_get, _riskuserapi.CShfeFtdcSetOneSidedMarketField_Side_set)
    NextTradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSetOneSidedMarketField_NextTradingDay_get, _riskuserapi.CShfeFtdcSetOneSidedMarketField_NextTradingDay_set)
    Operation: "TShfeFtdcDBOperationType" = property(_riskuserapi.CShfeFtdcSetOneSidedMarketField_Operation_get, _riskuserapi.CShfeFtdcSetOneSidedMarketField_Operation_set)

    def __eq__(self, ct: "CShfeFtdcSetOneSidedMarketField") -> "bool":
        return _riskuserapi.CShfeFtdcSetOneSidedMarketField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSetOneSidedMarketField_swiginit(self, _riskuserapi.new_CShfeFtdcSetOneSidedMarketField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSetOneSidedMarketField

# Register CShfeFtdcSetOneSidedMarketField in _riskuserapi:
_riskuserapi.CShfeFtdcSetOneSidedMarketField_swigregister(CShfeFtdcSetOneSidedMarketField)
class CShfeFtdcSpotUnderlyingIndexPriceField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSpotUnderlyingIndexPriceField_ExchangeID_get, _riskuserapi.CShfeFtdcSpotUnderlyingIndexPriceField_ExchangeID_set)
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSpotUnderlyingIndexPriceField_ProductID_get, _riskuserapi.CShfeFtdcSpotUnderlyingIndexPriceField_ProductID_set)
    Price: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSpotUnderlyingIndexPriceField_Price_get, _riskuserapi.CShfeFtdcSpotUnderlyingIndexPriceField_Price_set)

    def __eq__(self, ct: "CShfeFtdcSpotUnderlyingIndexPriceField") -> "bool":
        return _riskuserapi.CShfeFtdcSpotUnderlyingIndexPriceField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSpotUnderlyingIndexPriceField_swiginit(self, _riskuserapi.new_CShfeFtdcSpotUnderlyingIndexPriceField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSpotUnderlyingIndexPriceField

# Register CShfeFtdcSpotUnderlyingIndexPriceField in _riskuserapi:
_riskuserapi.CShfeFtdcSpotUnderlyingIndexPriceField_swigregister(CShfeFtdcSpotUnderlyingIndexPriceField)
class CShfeFtdcSetSpotIndexPriceField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSetSpotIndexPriceField_ExchangeID_get, _riskuserapi.CShfeFtdcSetSpotIndexPriceField_ExchangeID_set)
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSetSpotIndexPriceField_ProductID_get, _riskuserapi.CShfeFtdcSetSpotIndexPriceField_ProductID_set)
    Price: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcSetSpotIndexPriceField_Price_get, _riskuserapi.CShfeFtdcSetSpotIndexPriceField_Price_set)
    Operation: "TShfeFtdcDBOperationType" = property(_riskuserapi.CShfeFtdcSetSpotIndexPriceField_Operation_get, _riskuserapi.CShfeFtdcSetSpotIndexPriceField_Operation_set)

    def __eq__(self, ct: "CShfeFtdcSetSpotIndexPriceField") -> "bool":
        return _riskuserapi.CShfeFtdcSetSpotIndexPriceField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSetSpotIndexPriceField_swiginit(self, _riskuserapi.new_CShfeFtdcSetSpotIndexPriceField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSetSpotIndexPriceField

# Register CShfeFtdcSetSpotIndexPriceField in _riskuserapi:
_riskuserapi.CShfeFtdcSetSpotIndexPriceField_swigregister(CShfeFtdcSetSpotIndexPriceField)
class CShfeFtdcOptionCountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcOptionCountField_BrokerID_get, _riskuserapi.CShfeFtdcOptionCountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcOptionCountField_InvestorID_get, _riskuserapi.CShfeFtdcOptionCountField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcOptionCountField_InstrumentID_get, _riskuserapi.CShfeFtdcOptionCountField_InstrumentID_set)
    CurrentWarnLevel: "TShfeFtdcWarnLevelType" = property(_riskuserapi.CShfeFtdcOptionCountField_CurrentWarnLevel_get, _riskuserapi.CShfeFtdcOptionCountField_CurrentWarnLevel_set)
    CallOffsetRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcOptionCountField_CallOffsetRatio_get, _riskuserapi.CShfeFtdcOptionCountField_CallOffsetRatio_set)
    PutOffsetRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcOptionCountField_PutOffsetRatio_get, _riskuserapi.CShfeFtdcOptionCountField_PutOffsetRatio_set)

    def __eq__(self, ct: "CShfeFtdcOptionCountField") -> "bool":
        return _riskuserapi.CShfeFtdcOptionCountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcOptionCountField_swiginit(self, _riskuserapi.new_CShfeFtdcOptionCountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcOptionCountField

# Register CShfeFtdcOptionCountField in _riskuserapi:
_riskuserapi.CShfeFtdcOptionCountField_swigregister(CShfeFtdcOptionCountField)
class CShfeFtdcAvailableNegativeInvestorField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcAvailableNegativeInvestorField_BrokerID_get, _riskuserapi.CShfeFtdcAvailableNegativeInvestorField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcAvailableNegativeInvestorField_InvestorID_get, _riskuserapi.CShfeFtdcAvailableNegativeInvestorField_InvestorID_set)
    ExchAvailable: "TShfeFtdcBigMoneyType" = property(_riskuserapi.CShfeFtdcAvailableNegativeInvestorField_ExchAvailable_get, _riskuserapi.CShfeFtdcAvailableNegativeInvestorField_ExchAvailable_set)

    def __eq__(self, ct: "CShfeFtdcAvailableNegativeInvestorField") -> "bool":
        return _riskuserapi.CShfeFtdcAvailableNegativeInvestorField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcAvailableNegativeInvestorField_swiginit(self, _riskuserapi.new_CShfeFtdcAvailableNegativeInvestorField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcAvailableNegativeInvestorField

# Register CShfeFtdcAvailableNegativeInvestorField in _riskuserapi:
_riskuserapi.CShfeFtdcAvailableNegativeInvestorField_swigregister(CShfeFtdcAvailableNegativeInvestorField)
class CShfeFtdcInvestPartyDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestPartyDetailField_BrokerID_get, _riskuserapi.CShfeFtdcInvestPartyDetailField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestPartyDetailField_InvestorID_get, _riskuserapi.CShfeFtdcInvestPartyDetailField_InvestorID_set)
    ParentPartyID: "TShfeFtdcPropertyIDType" = property(_riskuserapi.CShfeFtdcInvestPartyDetailField_ParentPartyID_get, _riskuserapi.CShfeFtdcInvestPartyDetailField_ParentPartyID_set)
    ParentPartyName: "TShfeFtdcInvestorAttributionType" = property(_riskuserapi.CShfeFtdcInvestPartyDetailField_ParentPartyName_get, _riskuserapi.CShfeFtdcInvestPartyDetailField_ParentPartyName_set)
    PartyID: "TShfeFtdcPropertyIDType" = property(_riskuserapi.CShfeFtdcInvestPartyDetailField_PartyID_get, _riskuserapi.CShfeFtdcInvestPartyDetailField_PartyID_set)
    PartyName: "TShfeFtdcInvestorAttributionType" = property(_riskuserapi.CShfeFtdcInvestPartyDetailField_PartyName_get, _riskuserapi.CShfeFtdcInvestPartyDetailField_PartyName_set)

    def __eq__(self, ct: "CShfeFtdcInvestPartyDetailField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestPartyDetailField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestPartyDetailField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestPartyDetailField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestPartyDetailField

# Register CShfeFtdcInvestPartyDetailField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestPartyDetailField_swigregister(CShfeFtdcInvestPartyDetailField)
class CShfeFtdcInfoCommCountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInfoCommCountField_BrokerID_get, _riskuserapi.CShfeFtdcInfoCommCountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInfoCommCountField_InvestorID_get, _riskuserapi.CShfeFtdcInfoCommCountField_InvestorID_set)
    CurrentWarnLevel: "TShfeFtdcWarnLevelType" = property(_riskuserapi.CShfeFtdcInfoCommCountField_CurrentWarnLevel_get, _riskuserapi.CShfeFtdcInfoCommCountField_CurrentWarnLevel_set)
    OrderCount: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInfoCommCountField_OrderCount_get, _riskuserapi.CShfeFtdcInfoCommCountField_OrderCount_set)
    OrderActionCount: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInfoCommCountField_OrderActionCount_get, _riskuserapi.CShfeFtdcInfoCommCountField_OrderActionCount_set)
    ForQuoteCnt: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInfoCommCountField_ForQuoteCnt_get, _riskuserapi.CShfeFtdcInfoCommCountField_ForQuoteCnt_set)
    InfoComm: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInfoCommCountField_InfoComm_get, _riskuserapi.CShfeFtdcInfoCommCountField_InfoComm_set)

    def __eq__(self, ct: "CShfeFtdcInfoCommCountField") -> "bool":
        return _riskuserapi.CShfeFtdcInfoCommCountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInfoCommCountField_swiginit(self, _riskuserapi.new_CShfeFtdcInfoCommCountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInfoCommCountField

# Register CShfeFtdcInfoCommCountField in _riskuserapi:
_riskuserapi.CShfeFtdcInfoCommCountField_swigregister(CShfeFtdcInfoCommCountField)
class CShfeFtdcMortgageCountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcMortgageCountField_BrokerID_get, _riskuserapi.CShfeFtdcMortgageCountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcMortgageCountField_InvestorID_get, _riskuserapi.CShfeFtdcMortgageCountField_InvestorID_set)
    CurrentWarnLevel: "TShfeFtdcWarnLevelType" = property(_riskuserapi.CShfeFtdcMortgageCountField_CurrentWarnLevel_get, _riskuserapi.CShfeFtdcMortgageCountField_CurrentWarnLevel_set)
    MortgageRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcMortgageCountField_MortgageRatio_get, _riskuserapi.CShfeFtdcMortgageCountField_MortgageRatio_set)
    RiskValue: "TShfeFtdcRiskValueType" = property(_riskuserapi.CShfeFtdcMortgageCountField_RiskValue_get, _riskuserapi.CShfeFtdcMortgageCountField_RiskValue_set)

    def __eq__(self, ct: "CShfeFtdcMortgageCountField") -> "bool":
        return _riskuserapi.CShfeFtdcMortgageCountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcMortgageCountField_swiginit(self, _riskuserapi.new_CShfeFtdcMortgageCountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcMortgageCountField

# Register CShfeFtdcMortgageCountField in _riskuserapi:
_riskuserapi.CShfeFtdcMortgageCountField_swigregister(CShfeFtdcMortgageCountField)
class CShfeFtdcOperationRecordField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcOperationRecordField_BrokerID_get, _riskuserapi.CShfeFtdcOperationRecordField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcOperationRecordField_UserID_get, _riskuserapi.CShfeFtdcOperationRecordField_UserID_set)
    OpType: "TShfeFtdcUserOpTypeType" = property(_riskuserapi.CShfeFtdcOperationRecordField_OpType_get, _riskuserapi.CShfeFtdcOperationRecordField_OpType_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcOperationRecordField_IPAddress_get, _riskuserapi.CShfeFtdcOperationRecordField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcOperationRecordField_MacAddress_get, _riskuserapi.CShfeFtdcOperationRecordField_MacAddress_set)
    Memo: "TShfeFtdcMemoType" = property(_riskuserapi.CShfeFtdcOperationRecordField_Memo_get, _riskuserapi.CShfeFtdcOperationRecordField_Memo_set)

    def __eq__(self, ct: "CShfeFtdcOperationRecordField") -> "bool":
        return _riskuserapi.CShfeFtdcOperationRecordField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcOperationRecordField_swiginit(self, _riskuserapi.new_CShfeFtdcOperationRecordField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcOperationRecordField

# Register CShfeFtdcOperationRecordField in _riskuserapi:
_riskuserapi.CShfeFtdcOperationRecordField_swigregister(CShfeFtdcOperationRecordField)
class CShfeFtdcBrokerDepositCountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcBrokerDepositCountField_BrokerID_get, _riskuserapi.CShfeFtdcBrokerDepositCountField_BrokerID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcBrokerDepositCountField_ExchangeID_get, _riskuserapi.CShfeFtdcBrokerDepositCountField_ExchangeID_set)
    CurrentWarnLevel: "TShfeFtdcWarnLevelType" = property(_riskuserapi.CShfeFtdcBrokerDepositCountField_CurrentWarnLevel_get, _riskuserapi.CShfeFtdcBrokerDepositCountField_CurrentWarnLevel_set)
    Available: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcBrokerDepositCountField_Available_get, _riskuserapi.CShfeFtdcBrokerDepositCountField_Available_set)
    Balance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcBrokerDepositCountField_Balance_get, _riskuserapi.CShfeFtdcBrokerDepositCountField_Balance_set)
    CurrMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcBrokerDepositCountField_CurrMargin_get, _riskuserapi.CShfeFtdcBrokerDepositCountField_CurrMargin_set)
    MarginRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcBrokerDepositCountField_MarginRatio_get, _riskuserapi.CShfeFtdcBrokerDepositCountField_MarginRatio_set)

    def __eq__(self, ct: "CShfeFtdcBrokerDepositCountField") -> "bool":
        return _riskuserapi.CShfeFtdcBrokerDepositCountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcBrokerDepositCountField_swiginit(self, _riskuserapi.new_CShfeFtdcBrokerDepositCountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcBrokerDepositCountField

# Register CShfeFtdcBrokerDepositCountField in _riskuserapi:
_riskuserapi.CShfeFtdcBrokerDepositCountField_swigregister(CShfeFtdcBrokerDepositCountField)
class CShfeFtdcSetRiskNoteField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSetRiskNoteField_BrokerID_get, _riskuserapi.CShfeFtdcSetRiskNoteField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcSetRiskNoteField_UserID_get, _riskuserapi.CShfeFtdcSetRiskNoteField_UserID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSetRiskNoteField_InvestorID_get, _riskuserapi.CShfeFtdcSetRiskNoteField_InvestorID_set)
    InvestorGroup: "TShfeFtdcInvestorGroupType" = property(_riskuserapi.CShfeFtdcSetRiskNoteField_InvestorGroup_get, _riskuserapi.CShfeFtdcSetRiskNoteField_InvestorGroup_set)
    ToUserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcSetRiskNoteField_ToUserID_get, _riskuserapi.CShfeFtdcSetRiskNoteField_ToUserID_set)
    Type: "TShfeFtdcRiskNoteTypeType" = property(_riskuserapi.CShfeFtdcSetRiskNoteField_Type_get, _riskuserapi.CShfeFtdcSetRiskNoteField_Type_set)
    Message: "TShfeFtdcContentType" = property(_riskuserapi.CShfeFtdcSetRiskNoteField_Message_get, _riskuserapi.CShfeFtdcSetRiskNoteField_Message_set)
    Date: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSetRiskNoteField_Date_get, _riskuserapi.CShfeFtdcSetRiskNoteField_Date_set)
    Time: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcSetRiskNoteField_Time_get, _riskuserapi.CShfeFtdcSetRiskNoteField_Time_set)
    Status: "TShfeFtdcRiskNoteStatusType" = property(_riskuserapi.CShfeFtdcSetRiskNoteField_Status_get, _riskuserapi.CShfeFtdcSetRiskNoteField_Status_set)
    Operation: "TShfeFtdcDBOperationType" = property(_riskuserapi.CShfeFtdcSetRiskNoteField_Operation_get, _riskuserapi.CShfeFtdcSetRiskNoteField_Operation_set)

    def __eq__(self, ct: "CShfeFtdcSetRiskNoteField") -> "bool":
        return _riskuserapi.CShfeFtdcSetRiskNoteField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSetRiskNoteField_swiginit(self, _riskuserapi.new_CShfeFtdcSetRiskNoteField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSetRiskNoteField

# Register CShfeFtdcSetRiskNoteField in _riskuserapi:
_riskuserapi.CShfeFtdcSetRiskNoteField_swigregister(CShfeFtdcSetRiskNoteField)
class CShfeFtdcPreSettleAccountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_BrokerID_get, _riskuserapi.CShfeFtdcPreSettleAccountField_BrokerID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_AccountID_get, _riskuserapi.CShfeFtdcPreSettleAccountField_AccountID_set)
    Deposit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_Deposit_get, _riskuserapi.CShfeFtdcPreSettleAccountField_Deposit_set)
    Withdraw: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_Withdraw_get, _riskuserapi.CShfeFtdcPreSettleAccountField_Withdraw_set)
    CurrMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_CurrMargin_get, _riskuserapi.CShfeFtdcPreSettleAccountField_CurrMargin_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_CashIn_get, _riskuserapi.CShfeFtdcPreSettleAccountField_CashIn_set)
    Commission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_Commission_get, _riskuserapi.CShfeFtdcPreSettleAccountField_Commission_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_CloseProfit_get, _riskuserapi.CShfeFtdcPreSettleAccountField_CloseProfit_set)
    StrikeProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_StrikeProfit_get, _riskuserapi.CShfeFtdcPreSettleAccountField_StrikeProfit_set)
    PositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_PositionProfit_get, _riskuserapi.CShfeFtdcPreSettleAccountField_PositionProfit_set)
    DeliveryProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_DeliveryProfit_get, _riskuserapi.CShfeFtdcPreSettleAccountField_DeliveryProfit_set)
    Balance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_Balance_get, _riskuserapi.CShfeFtdcPreSettleAccountField_Balance_set)
    Available: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_Available_get, _riskuserapi.CShfeFtdcPreSettleAccountField_Available_set)
    WithdrawQuota: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_WithdrawQuota_get, _riskuserapi.CShfeFtdcPreSettleAccountField_WithdrawQuota_set)
    Mortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_Mortgage_get, _riskuserapi.CShfeFtdcPreSettleAccountField_Mortgage_set)
    ExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_ExchangeMargin_get, _riskuserapi.CShfeFtdcPreSettleAccountField_ExchangeMargin_set)
    ExchangeDeliveryMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_ExchangeDeliveryMargin_get, _riskuserapi.CShfeFtdcPreSettleAccountField_ExchangeDeliveryMargin_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_CurrencyID_get, _riskuserapi.CShfeFtdcPreSettleAccountField_CurrencyID_set)
    FundMortgageIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_FundMortgageIn_get, _riskuserapi.CShfeFtdcPreSettleAccountField_FundMortgageIn_set)
    FundMortgageOut: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_FundMortgageOut_get, _riskuserapi.CShfeFtdcPreSettleAccountField_FundMortgageOut_set)
    FundMortgageAvailable: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_FundMortgageAvailable_get, _riskuserapi.CShfeFtdcPreSettleAccountField_FundMortgageAvailable_set)
    MortgageableFund: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_MortgageableFund_get, _riskuserapi.CShfeFtdcPreSettleAccountField_MortgageableFund_set)
    DeliveryMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_DeliveryMargin_get, _riskuserapi.CShfeFtdcPreSettleAccountField_DeliveryMargin_set)
    DeliveryCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_DeliveryCommission_get, _riskuserapi.CShfeFtdcPreSettleAccountField_DeliveryCommission_set)
    Credit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_Credit_get, _riskuserapi.CShfeFtdcPreSettleAccountField_Credit_set)
    OptionValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_OptionValue_get, _riskuserapi.CShfeFtdcPreSettleAccountField_OptionValue_set)
    RiskValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_RiskValue_get, _riskuserapi.CShfeFtdcPreSettleAccountField_RiskValue_set)
    ExchRiskValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_ExchRiskValue_get, _riskuserapi.CShfeFtdcPreSettleAccountField_ExchRiskValue_set)
    DepartmentID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcPreSettleAccountField_DepartmentID_get, _riskuserapi.CShfeFtdcPreSettleAccountField_DepartmentID_set)

    def __eq__(self, ct: "CShfeFtdcPreSettleAccountField") -> "bool":
        return _riskuserapi.CShfeFtdcPreSettleAccountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcPreSettleAccountField_swiginit(self, _riskuserapi.new_CShfeFtdcPreSettleAccountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcPreSettleAccountField

# Register CShfeFtdcPreSettleAccountField in _riskuserapi:
_riskuserapi.CShfeFtdcPreSettleAccountField_swigregister(CShfeFtdcPreSettleAccountField)
class CShfeFtdcQryOneSidedMarketField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryOneSidedMarketField_ExchangeID_get, _riskuserapi.CShfeFtdcQryOneSidedMarketField_ExchangeID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryOneSidedMarketField_InstrumentID_get, _riskuserapi.CShfeFtdcQryOneSidedMarketField_InstrumentID_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcQryOneSidedMarketField_TradingDay_get, _riskuserapi.CShfeFtdcQryOneSidedMarketField_TradingDay_set)

    def __eq__(self, ct: "CShfeFtdcQryOneSidedMarketField") -> "bool":
        return _riskuserapi.CShfeFtdcQryOneSidedMarketField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryOneSidedMarketField_swiginit(self, _riskuserapi.new_CShfeFtdcQryOneSidedMarketField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryOneSidedMarketField

# Register CShfeFtdcQryOneSidedMarketField in _riskuserapi:
_riskuserapi.CShfeFtdcQryOneSidedMarketField_swigregister(CShfeFtdcQryOneSidedMarketField)
class CShfeFtdcUserPasswordField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcUserPasswordField_BrokerID_get, _riskuserapi.CShfeFtdcUserPasswordField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcUserPasswordField_UserID_get, _riskuserapi.CShfeFtdcUserPasswordField_UserID_set)
    Password: "TShfeFtdcPasswordType" = property(_riskuserapi.CShfeFtdcUserPasswordField_Password_get, _riskuserapi.CShfeFtdcUserPasswordField_Password_set)

    def __eq__(self, ct: "CShfeFtdcUserPasswordField") -> "bool":
        return _riskuserapi.CShfeFtdcUserPasswordField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcUserPasswordField_swiginit(self, _riskuserapi.new_CShfeFtdcUserPasswordField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcUserPasswordField

# Register CShfeFtdcUserPasswordField in _riskuserapi:
_riskuserapi.CShfeFtdcUserPasswordField_swigregister(CShfeFtdcUserPasswordField)
class CShfeFtdcSequencialExecOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UniqSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_UniqSequenceNo_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_UniqSequenceNo_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_BrokerID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_InvestorID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_InstrumentID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_InstrumentID_set)
    ExecOrderRef: "TShfeFtdcOrderRefType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_ExecOrderRef_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_ExecOrderRef_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_UserID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_UserID_set)
    Volume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_Volume_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_Volume_set)
    RequestID: "TShfeFtdcRequestIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_RequestID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_RequestID_set)
    BusinessUnit: "TShfeFtdcBusinessUnitType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_BusinessUnit_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_BusinessUnit_set)
    OffsetFlag: "TShfeFtdcOffsetFlagType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_OffsetFlag_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_OffsetFlag_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_HedgeFlag_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_HedgeFlag_set)
    ActionType: "TShfeFtdcActionTypeType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_ActionType_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_ActionType_set)
    PosiDirection: "TShfeFtdcPosiDirectionType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_PosiDirection_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_PosiDirection_set)
    ReservePositionFlag: "TShfeFtdcExecOrderPositionFlagType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_ReservePositionFlag_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_ReservePositionFlag_set)
    CloseFlag: "TShfeFtdcExecOrderCloseFlagType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_CloseFlag_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_CloseFlag_set)
    ExecOrderLocalID: "TShfeFtdcOrderLocalIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_ExecOrderLocalID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_ExecOrderLocalID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_ExchangeID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_ExchangeID_set)
    ParticipantID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_ParticipantID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_ParticipantID_set)
    ClientID: "TShfeFtdcClientIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_ClientID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_ClientID_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_ExchangeInstID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_ExchangeInstID_set)
    TraderID: "TShfeFtdcTraderIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_TraderID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_TraderID_set)
    InstallID: "TShfeFtdcInstallIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_InstallID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_InstallID_set)
    OrderSubmitStatus: "TShfeFtdcOrderSubmitStatusType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_OrderSubmitStatus_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_OrderSubmitStatus_set)
    NotifySequence: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_NotifySequence_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_NotifySequence_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_TradingDay_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_SettlementID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_SettlementID_set)
    ExecOrderSysID: "TShfeFtdcExecOrderSysIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_ExecOrderSysID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_ExecOrderSysID_set)
    InsertDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_InsertDate_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_InsertDate_set)
    InsertTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_InsertTime_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_InsertTime_set)
    CancelTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_CancelTime_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_CancelTime_set)
    ExecResult: "TShfeFtdcExecResultType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_ExecResult_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_ExecResult_set)
    ClearingPartID: "TShfeFtdcParticipantIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_ClearingPartID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_ClearingPartID_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_SequenceNo_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_SequenceNo_set)
    FrontID: "TShfeFtdcFrontIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_FrontID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_FrontID_set)
    SessionID: "TShfeFtdcSessionIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_SessionID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_SessionID_set)
    UserProductInfo: "TShfeFtdcProductInfoType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_UserProductInfo_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_UserProductInfo_set)
    StatusMsg: "TShfeFtdcErrorMsgType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_StatusMsg_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_StatusMsg_set)
    ActiveUserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_ActiveUserID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_ActiveUserID_set)
    BrokerExecOrderSeq: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_BrokerExecOrderSeq_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_BrokerExecOrderSeq_set)
    BranchID: "TShfeFtdcBranchIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_BranchID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_BranchID_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_InvestUnitID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_InvestUnitID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_AccountID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_CurrencyID_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_CurrencyID_set)
    IPAddress: "TShfeFtdcIPAddressType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_IPAddress_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_IPAddress_set)
    MacAddress: "TShfeFtdcMacAddressType" = property(_riskuserapi.CShfeFtdcSequencialExecOrderField_MacAddress_get, _riskuserapi.CShfeFtdcSequencialExecOrderField_MacAddress_set)

    def __eq__(self, ct: "CShfeFtdcSequencialExecOrderField") -> "bool":
        return _riskuserapi.CShfeFtdcSequencialExecOrderField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSequencialExecOrderField_swiginit(self, _riskuserapi.new_CShfeFtdcSequencialExecOrderField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSequencialExecOrderField

# Register CShfeFtdcSequencialExecOrderField in _riskuserapi:
_riskuserapi.CShfeFtdcSequencialExecOrderField_swigregister(CShfeFtdcSequencialExecOrderField)
class CShfeFtdcOptionExecCountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcOptionExecCountField_BrokerID_get, _riskuserapi.CShfeFtdcOptionExecCountField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcOptionExecCountField_InvestorID_get, _riskuserapi.CShfeFtdcOptionExecCountField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcOptionExecCountField_InstrumentID_get, _riskuserapi.CShfeFtdcOptionExecCountField_InstrumentID_set)
    CurrentWarnLevel: "TShfeFtdcWarnLevelType" = property(_riskuserapi.CShfeFtdcOptionExecCountField_CurrentWarnLevel_get, _riskuserapi.CShfeFtdcOptionExecCountField_CurrentWarnLevel_set)
    ITMoney: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcOptionExecCountField_ITMoney_get, _riskuserapi.CShfeFtdcOptionExecCountField_ITMoney_set)
    Profit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcOptionExecCountField_Profit_get, _riskuserapi.CShfeFtdcOptionExecCountField_Profit_set)

    def __eq__(self, ct: "CShfeFtdcOptionExecCountField") -> "bool":
        return _riskuserapi.CShfeFtdcOptionExecCountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcOptionExecCountField_swiginit(self, _riskuserapi.new_CShfeFtdcOptionExecCountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcOptionExecCountField

# Register CShfeFtdcOptionExecCountField in _riskuserapi:
_riskuserapi.CShfeFtdcOptionExecCountField_swigregister(CShfeFtdcOptionExecCountField)
class CShfeFtdcQryWarnConfigField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    WarnType: "TShfeFtdcWarnTypeType" = property(_riskuserapi.CShfeFtdcQryWarnConfigField_WarnType_get, _riskuserapi.CShfeFtdcQryWarnConfigField_WarnType_set)
    UniqSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcQryWarnConfigField_UniqSequenceNo_get, _riskuserapi.CShfeFtdcQryWarnConfigField_UniqSequenceNo_set)

    def __eq__(self, ct: "CShfeFtdcQryWarnConfigField") -> "bool":
        return _riskuserapi.CShfeFtdcQryWarnConfigField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryWarnConfigField_swiginit(self, _riskuserapi.new_CShfeFtdcQryWarnConfigField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryWarnConfigField

# Register CShfeFtdcQryWarnConfigField in _riskuserapi:
_riskuserapi.CShfeFtdcQryWarnConfigField_swigregister(CShfeFtdcQryWarnConfigField)
class CShfeFtdcTradingCalendarField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Day: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcTradingCalendarField_Day_get, _riskuserapi.CShfeFtdcTradingCalendarField_Day_set)
    IsBusinessDay: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcTradingCalendarField_IsBusinessDay_get, _riskuserapi.CShfeFtdcTradingCalendarField_IsBusinessDay_set)

    def __eq__(self, ct: "CShfeFtdcTradingCalendarField") -> "bool":
        return _riskuserapi.CShfeFtdcTradingCalendarField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcTradingCalendarField_swiginit(self, _riskuserapi.new_CShfeFtdcTradingCalendarField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcTradingCalendarField

# Register CShfeFtdcTradingCalendarField in _riskuserapi:
_riskuserapi.CShfeFtdcTradingCalendarField_swigregister(CShfeFtdcTradingCalendarField)
class CShfeFtdcSoptAccountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSoptAccountField_BrokerID_get, _riskuserapi.CShfeFtdcSoptAccountField_BrokerID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcSoptAccountField_AccountID_get, _riskuserapi.CShfeFtdcSoptAccountField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcSoptAccountField_CurrencyID_get, _riskuserapi.CShfeFtdcSoptAccountField_CurrencyID_set)
    Available: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSoptAccountField_Available_get, _riskuserapi.CShfeFtdcSoptAccountField_Available_set)
    Balance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSoptAccountField_Balance_get, _riskuserapi.CShfeFtdcSoptAccountField_Balance_set)
    OptionValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSoptAccountField_OptionValue_get, _riskuserapi.CShfeFtdcSoptAccountField_OptionValue_set)
    CurrMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSoptAccountField_CurrMargin_get, _riskuserapi.CShfeFtdcSoptAccountField_CurrMargin_set)
    CurrMargin2: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSoptAccountField_CurrMargin2_get, _riskuserapi.CShfeFtdcSoptAccountField_CurrMargin2_set)
    CurrMargin3: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSoptAccountField_CurrMargin3_get, _riskuserapi.CShfeFtdcSoptAccountField_CurrMargin3_set)
    FrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSoptAccountField_FrozenMargin_get, _riskuserapi.CShfeFtdcSoptAccountField_FrozenMargin_set)
    DeliveryMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSoptAccountField_DeliveryMargin_get, _riskuserapi.CShfeFtdcSoptAccountField_DeliveryMargin_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSoptAccountField_CashIn_get, _riskuserapi.CShfeFtdcSoptAccountField_CashIn_set)
    HedgeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSoptAccountField_HedgeMargin_get, _riskuserapi.CShfeFtdcSoptAccountField_HedgeMargin_set)
    Credit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSoptAccountField_Credit_get, _riskuserapi.CShfeFtdcSoptAccountField_Credit_set)
    ExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSoptAccountField_ExchangeMargin_get, _riskuserapi.CShfeFtdcSoptAccountField_ExchangeMargin_set)
    ExchangeMargin2: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSoptAccountField_ExchangeMargin2_get, _riskuserapi.CShfeFtdcSoptAccountField_ExchangeMargin2_set)
    ExchangeMargin3: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSoptAccountField_ExchangeMargin3_get, _riskuserapi.CShfeFtdcSoptAccountField_ExchangeMargin3_set)
    ExchangeDeliveryMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSoptAccountField_ExchangeDeliveryMargin_get, _riskuserapi.CShfeFtdcSoptAccountField_ExchangeDeliveryMargin_set)

    def __eq__(self, ct: "CShfeFtdcSoptAccountField") -> "bool":
        return _riskuserapi.CShfeFtdcSoptAccountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSoptAccountField_swiginit(self, _riskuserapi.new_CShfeFtdcSoptAccountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSoptAccountField

# Register CShfeFtdcSoptAccountField in _riskuserapi:
_riskuserapi.CShfeFtdcSoptAccountField_swigregister(CShfeFtdcSoptAccountField)
class CShfeFtdcSyncSoptAccountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_BrokerID_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_BrokerID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_AccountID_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_AccountID_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_CurrencyID_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_CurrencyID_set)
    Available: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_Available_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_Available_set)
    Balance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_Balance_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_Balance_set)
    OptionValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_OptionValue_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_OptionValue_set)
    CurrMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_CurrMargin_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_CurrMargin_set)
    CurrMargin2: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_CurrMargin2_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_CurrMargin2_set)
    CurrMargin3: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_CurrMargin3_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_CurrMargin3_set)
    FrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_FrozenMargin_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_FrozenMargin_set)
    DeliveryMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_DeliveryMargin_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_DeliveryMargin_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_CashIn_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_CashIn_set)
    HedgeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_HedgeMargin_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_HedgeMargin_set)
    Credit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_Credit_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_Credit_set)
    ExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_ExchangeMargin_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_ExchangeMargin_set)
    ExchangeMargin2: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_ExchangeMargin2_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_ExchangeMargin2_set)
    ExchangeMargin3: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_ExchangeMargin3_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_ExchangeMargin3_set)
    ExchangeDeliveryMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_ExchangeDeliveryMargin_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_ExchangeDeliveryMargin_set)
    RiskValue: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_RiskValue_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_RiskValue_set)
    ExchangeRiskValue: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_ExchangeRiskValue_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_ExchangeRiskValue_set)
    RiskValue2: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_RiskValue2_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_RiskValue2_set)
    RiskValue3: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_RiskValue3_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_RiskValue3_set)
    RiskValue4: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_RiskValue4_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_RiskValue4_set)
    RiskValue5: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_RiskValue5_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_RiskValue5_set)
    AccountType: "TShfeFtdcSoptAccountTypeType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_AccountType_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_AccountType_set)
    FutureAccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcSyncSoptAccountField_FutureAccountID_get, _riskuserapi.CShfeFtdcSyncSoptAccountField_FutureAccountID_set)

    def __eq__(self, ct: "CShfeFtdcSyncSoptAccountField") -> "bool":
        return _riskuserapi.CShfeFtdcSyncSoptAccountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSyncSoptAccountField_swiginit(self, _riskuserapi.new_CShfeFtdcSyncSoptAccountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSyncSoptAccountField

# Register CShfeFtdcSyncSoptAccountField in _riskuserapi:
_riskuserapi.CShfeFtdcSyncSoptAccountField_swigregister(CShfeFtdcSyncSoptAccountField)
class CShfeFtdcQryInvstRCAMSSettingField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryInvstRCAMSSettingField_ExchangeID_get, _riskuserapi.CShfeFtdcQryInvstRCAMSSettingField_ExchangeID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInvstRCAMSSettingField_BrokerID_get, _riskuserapi.CShfeFtdcQryInvstRCAMSSettingField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryInvstRCAMSSettingField_InvestorID_get, _riskuserapi.CShfeFtdcQryInvstRCAMSSettingField_InvestorID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcQryInvstRCAMSSettingField_HedgeFlag_get, _riskuserapi.CShfeFtdcQryInvstRCAMSSettingField_HedgeFlag_set)

    def __eq__(self, ct: "CShfeFtdcQryInvstRCAMSSettingField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInvstRCAMSSettingField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInvstRCAMSSettingField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInvstRCAMSSettingField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInvstRCAMSSettingField

# Register CShfeFtdcQryInvstRCAMSSettingField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInvstRCAMSSettingField_swigregister(CShfeFtdcQryInvstRCAMSSettingField)
class CShfeFtdcInvstRCAMSSettingField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcInvstRCAMSSettingField_ExchangeID_get, _riskuserapi.CShfeFtdcInvstRCAMSSettingField_ExchangeID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvstRCAMSSettingField_BrokerID_get, _riskuserapi.CShfeFtdcInvstRCAMSSettingField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvstRCAMSSettingField_InvestorID_get, _riskuserapi.CShfeFtdcInvstRCAMSSettingField_InvestorID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcInvstRCAMSSettingField_HedgeFlag_get, _riskuserapi.CShfeFtdcInvstRCAMSSettingField_HedgeFlag_set)
    IsRCAMS: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcInvstRCAMSSettingField_IsRCAMS_get, _riskuserapi.CShfeFtdcInvstRCAMSSettingField_IsRCAMS_set)

    def __eq__(self, ct: "CShfeFtdcInvstRCAMSSettingField") -> "bool":
        return _riskuserapi.CShfeFtdcInvstRCAMSSettingField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvstRCAMSSettingField_swiginit(self, _riskuserapi.new_CShfeFtdcInvstRCAMSSettingField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvstRCAMSSettingField

# Register CShfeFtdcInvstRCAMSSettingField in _riskuserapi:
_riskuserapi.CShfeFtdcInvstRCAMSSettingField_swigregister(CShfeFtdcInvstRCAMSSettingField)
class CShfeFtdcQryRCAMSCombProductInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "TShfeFtdcProductIDType" = property(_riskuserapi.CShfeFtdcQryRCAMSCombProductInfoField_ProductID_get, _riskuserapi.CShfeFtdcQryRCAMSCombProductInfoField_ProductID_set)
    CombProductID: "TShfeFtdcProductIDType" = property(_riskuserapi.CShfeFtdcQryRCAMSCombProductInfoField_CombProductID_get, _riskuserapi.CShfeFtdcQryRCAMSCombProductInfoField_CombProductID_set)
    ProductGroupID: "TShfeFtdcProductIDType" = property(_riskuserapi.CShfeFtdcQryRCAMSCombProductInfoField_ProductGroupID_get, _riskuserapi.CShfeFtdcQryRCAMSCombProductInfoField_ProductGroupID_set)

    def __eq__(self, ct: "CShfeFtdcQryRCAMSCombProductInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcQryRCAMSCombProductInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryRCAMSCombProductInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcQryRCAMSCombProductInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryRCAMSCombProductInfoField

# Register CShfeFtdcQryRCAMSCombProductInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcQryRCAMSCombProductInfoField_swigregister(CShfeFtdcQryRCAMSCombProductInfoField)
class CShfeFtdcRCAMSCombProductInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcRCAMSCombProductInfoField_TradingDay_get, _riskuserapi.CShfeFtdcRCAMSCombProductInfoField_TradingDay_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcRCAMSCombProductInfoField_ExchangeID_get, _riskuserapi.CShfeFtdcRCAMSCombProductInfoField_ExchangeID_set)
    ProductID: "TShfeFtdcProductIDType" = property(_riskuserapi.CShfeFtdcRCAMSCombProductInfoField_ProductID_get, _riskuserapi.CShfeFtdcRCAMSCombProductInfoField_ProductID_set)
    CombProductID: "TShfeFtdcProductIDType" = property(_riskuserapi.CShfeFtdcRCAMSCombProductInfoField_CombProductID_get, _riskuserapi.CShfeFtdcRCAMSCombProductInfoField_CombProductID_set)
    ProductGroupID: "TShfeFtdcProductIDType" = property(_riskuserapi.CShfeFtdcRCAMSCombProductInfoField_ProductGroupID_get, _riskuserapi.CShfeFtdcRCAMSCombProductInfoField_ProductGroupID_set)

    def __eq__(self, ct: "CShfeFtdcRCAMSCombProductInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcRCAMSCombProductInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRCAMSCombProductInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcRCAMSCombProductInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRCAMSCombProductInfoField

# Register CShfeFtdcRCAMSCombProductInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcRCAMSCombProductInfoField_swigregister(CShfeFtdcRCAMSCombProductInfoField)
class CShfeFtdcWarningExemptField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcWarningExemptField_ExchangeID_get, _riskuserapi.CShfeFtdcWarningExemptField_ExchangeID_set)
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcWarningExemptField_ProductID_get, _riskuserapi.CShfeFtdcWarningExemptField_ProductID_set)
    IsFAKFOKExempt: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcWarningExemptField_IsFAKFOKExempt_get, _riskuserapi.CShfeFtdcWarningExemptField_IsFAKFOKExempt_set)

    def __eq__(self, ct: "CShfeFtdcWarningExemptField") -> "bool":
        return _riskuserapi.CShfeFtdcWarningExemptField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcWarningExemptField_swiginit(self, _riskuserapi.new_CShfeFtdcWarningExemptField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcWarningExemptField

# Register CShfeFtdcWarningExemptField in _riskuserapi:
_riskuserapi.CShfeFtdcWarningExemptField_swigregister(CShfeFtdcWarningExemptField)
class CShfeFtdcQryWarningExemptField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryWarningExemptField_ExchangeID_get, _riskuserapi.CShfeFtdcQryWarningExemptField_ExchangeID_set)

    def __eq__(self, ct: "CShfeFtdcQryWarningExemptField") -> "bool":
        return _riskuserapi.CShfeFtdcQryWarningExemptField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryWarningExemptField_swiginit(self, _riskuserapi.new_CShfeFtdcQryWarningExemptField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryWarningExemptField

# Register CShfeFtdcQryWarningExemptField in _riskuserapi:
_riskuserapi.CShfeFtdcQryWarningExemptField_swigregister(CShfeFtdcQryWarningExemptField)
class CShfeFtdcWarningExemptActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ActionDirection: "TShfeFtdcActionDirectionType" = property(_riskuserapi.CShfeFtdcWarningExemptActionField_ActionDirection_get, _riskuserapi.CShfeFtdcWarningExemptActionField_ActionDirection_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcWarningExemptActionField_ExchangeID_get, _riskuserapi.CShfeFtdcWarningExemptActionField_ExchangeID_set)
    ProductID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcWarningExemptActionField_ProductID_get, _riskuserapi.CShfeFtdcWarningExemptActionField_ProductID_set)
    IsFAKFOKExempt: "TShfeFtdcBoolType" = property(_riskuserapi.CShfeFtdcWarningExemptActionField_IsFAKFOKExempt_get, _riskuserapi.CShfeFtdcWarningExemptActionField_IsFAKFOKExempt_set)

    def __eq__(self, ct: "CShfeFtdcWarningExemptActionField") -> "bool":
        return _riskuserapi.CShfeFtdcWarningExemptActionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcWarningExemptActionField_swiginit(self, _riskuserapi.new_CShfeFtdcWarningExemptActionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcWarningExemptActionField

# Register CShfeFtdcWarningExemptActionField in _riskuserapi:
_riskuserapi.CShfeFtdcWarningExemptActionField_swigregister(CShfeFtdcWarningExemptActionField)
class CShfeFtdcSetForbiddenRightField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcSetForbiddenRightField_BrokerID_get, _riskuserapi.CShfeFtdcSetForbiddenRightField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcSetForbiddenRightField_InvestorID_get, _riskuserapi.CShfeFtdcSetForbiddenRightField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcSetForbiddenRightField_InstrumentID_get, _riskuserapi.CShfeFtdcSetForbiddenRightField_InstrumentID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcSetForbiddenRightField_UserID_get, _riskuserapi.CShfeFtdcSetForbiddenRightField_UserID_set)
    Operation: "TShfeFtdcDBOperationType" = property(_riskuserapi.CShfeFtdcSetForbiddenRightField_Operation_get, _riskuserapi.CShfeFtdcSetForbiddenRightField_Operation_set)
    Memo: "TShfeFtdcMemoType" = property(_riskuserapi.CShfeFtdcSetForbiddenRightField_Memo_get, _riskuserapi.CShfeFtdcSetForbiddenRightField_Memo_set)

    def __eq__(self, ct: "CShfeFtdcSetForbiddenRightField") -> "bool":
        return _riskuserapi.CShfeFtdcSetForbiddenRightField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcSetForbiddenRightField_swiginit(self, _riskuserapi.new_CShfeFtdcSetForbiddenRightField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcSetForbiddenRightField

# Register CShfeFtdcSetForbiddenRightField in _riskuserapi:
_riskuserapi.CShfeFtdcSetForbiddenRightField_swigregister(CShfeFtdcSetForbiddenRightField)
class CShfeFtdcForbiddenRightInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcForbiddenRightInfoField_BrokerID_get, _riskuserapi.CShfeFtdcForbiddenRightInfoField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcForbiddenRightInfoField_InvestorID_get, _riskuserapi.CShfeFtdcForbiddenRightInfoField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcForbiddenRightInfoField_InstrumentID_get, _riskuserapi.CShfeFtdcForbiddenRightInfoField_InstrumentID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcForbiddenRightInfoField_UserID_get, _riskuserapi.CShfeFtdcForbiddenRightInfoField_UserID_set)
    Operation: "TShfeFtdcDBOperationType" = property(_riskuserapi.CShfeFtdcForbiddenRightInfoField_Operation_get, _riskuserapi.CShfeFtdcForbiddenRightInfoField_Operation_set)
    Memo: "TShfeFtdcMemoType" = property(_riskuserapi.CShfeFtdcForbiddenRightInfoField_Memo_get, _riskuserapi.CShfeFtdcForbiddenRightInfoField_Memo_set)
    ActionTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcForbiddenRightInfoField_ActionTime_get, _riskuserapi.CShfeFtdcForbiddenRightInfoField_ActionTime_set)
    ActionDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcForbiddenRightInfoField_ActionDate_get, _riskuserapi.CShfeFtdcForbiddenRightInfoField_ActionDate_set)

    def __eq__(self, ct: "CShfeFtdcForbiddenRightInfoField") -> "bool":
        return _riskuserapi.CShfeFtdcForbiddenRightInfoField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcForbiddenRightInfoField_swiginit(self, _riskuserapi.new_CShfeFtdcForbiddenRightInfoField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcForbiddenRightInfoField

# Register CShfeFtdcForbiddenRightInfoField in _riskuserapi:
_riskuserapi.CShfeFtdcForbiddenRightInfoField_swigregister(CShfeFtdcForbiddenRightInfoField)
class CShfeFtdcForbidRightPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_InstrumentID_get, _riskuserapi.CShfeFtdcForbidRightPositionField_InstrumentID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_BrokerID_get, _riskuserapi.CShfeFtdcForbidRightPositionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_InvestorID_get, _riskuserapi.CShfeFtdcForbidRightPositionField_InvestorID_set)
    PosiDirection: "TShfeFtdcPosiDirectionType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_PosiDirection_get, _riskuserapi.CShfeFtdcForbidRightPositionField_PosiDirection_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_HedgeFlag_get, _riskuserapi.CShfeFtdcForbidRightPositionField_HedgeFlag_set)
    PositionDate: "TShfeFtdcPositionDateType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_PositionDate_get, _riskuserapi.CShfeFtdcForbidRightPositionField_PositionDate_set)
    YdPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_YdPosition_get, _riskuserapi.CShfeFtdcForbidRightPositionField_YdPosition_set)
    Position: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_Position_get, _riskuserapi.CShfeFtdcForbidRightPositionField_Position_set)
    LongFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_LongFrozen_get, _riskuserapi.CShfeFtdcForbidRightPositionField_LongFrozen_set)
    ShortFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_ShortFrozen_get, _riskuserapi.CShfeFtdcForbidRightPositionField_ShortFrozen_set)
    LongFrozenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_LongFrozenAmount_get, _riskuserapi.CShfeFtdcForbidRightPositionField_LongFrozenAmount_set)
    ShortFrozenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_ShortFrozenAmount_get, _riskuserapi.CShfeFtdcForbidRightPositionField_ShortFrozenAmount_set)
    OpenVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_OpenVolume_get, _riskuserapi.CShfeFtdcForbidRightPositionField_OpenVolume_set)
    CloseVolume: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_CloseVolume_get, _riskuserapi.CShfeFtdcForbidRightPositionField_CloseVolume_set)
    OpenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_OpenAmount_get, _riskuserapi.CShfeFtdcForbidRightPositionField_OpenAmount_set)
    CloseAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_CloseAmount_get, _riskuserapi.CShfeFtdcForbidRightPositionField_CloseAmount_set)
    PositionCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_PositionCost_get, _riskuserapi.CShfeFtdcForbidRightPositionField_PositionCost_set)
    PreMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_PreMargin_get, _riskuserapi.CShfeFtdcForbidRightPositionField_PreMargin_set)
    UseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_UseMargin_get, _riskuserapi.CShfeFtdcForbidRightPositionField_UseMargin_set)
    FrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_FrozenMargin_get, _riskuserapi.CShfeFtdcForbidRightPositionField_FrozenMargin_set)
    FrozenCash: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_FrozenCash_get, _riskuserapi.CShfeFtdcForbidRightPositionField_FrozenCash_set)
    FrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_FrozenCommission_get, _riskuserapi.CShfeFtdcForbidRightPositionField_FrozenCommission_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_CashIn_get, _riskuserapi.CShfeFtdcForbidRightPositionField_CashIn_set)
    Commission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_Commission_get, _riskuserapi.CShfeFtdcForbidRightPositionField_Commission_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_CloseProfit_get, _riskuserapi.CShfeFtdcForbidRightPositionField_CloseProfit_set)
    PositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_PositionProfit_get, _riskuserapi.CShfeFtdcForbidRightPositionField_PositionProfit_set)
    PreSettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_PreSettlementPrice_get, _riskuserapi.CShfeFtdcForbidRightPositionField_PreSettlementPrice_set)
    SettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_SettlementPrice_get, _riskuserapi.CShfeFtdcForbidRightPositionField_SettlementPrice_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_TradingDay_get, _riskuserapi.CShfeFtdcForbidRightPositionField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_SettlementID_get, _riskuserapi.CShfeFtdcForbidRightPositionField_SettlementID_set)
    OpenCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_OpenCost_get, _riskuserapi.CShfeFtdcForbidRightPositionField_OpenCost_set)
    ExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_ExchangeMargin_get, _riskuserapi.CShfeFtdcForbidRightPositionField_ExchangeMargin_set)
    CombPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_CombPosition_get, _riskuserapi.CShfeFtdcForbidRightPositionField_CombPosition_set)
    CombLongFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_CombLongFrozen_get, _riskuserapi.CShfeFtdcForbidRightPositionField_CombLongFrozen_set)
    CombShortFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_CombShortFrozen_get, _riskuserapi.CShfeFtdcForbidRightPositionField_CombShortFrozen_set)
    CloseProfitByDate: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_CloseProfitByDate_get, _riskuserapi.CShfeFtdcForbidRightPositionField_CloseProfitByDate_set)
    CloseProfitByTrade: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_CloseProfitByTrade_get, _riskuserapi.CShfeFtdcForbidRightPositionField_CloseProfitByTrade_set)
    TodayPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_TodayPosition_get, _riskuserapi.CShfeFtdcForbidRightPositionField_TodayPosition_set)
    MarginRateByMoney: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_MarginRateByMoney_get, _riskuserapi.CShfeFtdcForbidRightPositionField_MarginRateByMoney_set)
    MarginRateByVolume: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_MarginRateByVolume_get, _riskuserapi.CShfeFtdcForbidRightPositionField_MarginRateByVolume_set)
    StrikeFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_StrikeFrozen_get, _riskuserapi.CShfeFtdcForbidRightPositionField_StrikeFrozen_set)
    StrikeFrozenAmount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_StrikeFrozenAmount_get, _riskuserapi.CShfeFtdcForbidRightPositionField_StrikeFrozenAmount_set)
    AbandonFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_AbandonFrozen_get, _riskuserapi.CShfeFtdcForbidRightPositionField_AbandonFrozen_set)
    OptionValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_OptionValue_get, _riskuserapi.CShfeFtdcForbidRightPositionField_OptionValue_set)
    MaintUseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_MaintUseMargin_get, _riskuserapi.CShfeFtdcForbidRightPositionField_MaintUseMargin_set)
    MaintExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_MaintExchangeMargin_get, _riskuserapi.CShfeFtdcForbidRightPositionField_MaintExchangeMargin_set)
    IndexSettlementPrice: "TShfeFtdcPriceType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_IndexSettlementPrice_get, _riskuserapi.CShfeFtdcForbidRightPositionField_IndexSettlementPrice_set)
    FixedMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_FixedMargin_get, _riskuserapi.CShfeFtdcForbidRightPositionField_FixedMargin_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_ExchangeID_get, _riskuserapi.CShfeFtdcForbidRightPositionField_ExchangeID_set)
    YdStrikeFrozen: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_YdStrikeFrozen_get, _riskuserapi.CShfeFtdcForbidRightPositionField_YdStrikeFrozen_set)
    InvestUnitID: "TShfeFtdcInvestUnitIDType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_InvestUnitID_get, _riskuserapi.CShfeFtdcForbidRightPositionField_InvestUnitID_set)
    PositionCostOffset: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_PositionCostOffset_get, _riskuserapi.CShfeFtdcForbidRightPositionField_PositionCostOffset_set)
    TasPosition: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_TasPosition_get, _riskuserapi.CShfeFtdcForbidRightPositionField_TasPosition_set)
    TasPositionCost: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_TasPositionCost_get, _riskuserapi.CShfeFtdcForbidRightPositionField_TasPositionCost_set)
    ActionTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_ActionTime_get, _riskuserapi.CShfeFtdcForbidRightPositionField_ActionTime_set)
    ActionDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcForbidRightPositionField_ActionDate_get, _riskuserapi.CShfeFtdcForbidRightPositionField_ActionDate_set)

    def __eq__(self, ct: "CShfeFtdcForbidRightPositionField") -> "bool":
        return _riskuserapi.CShfeFtdcForbidRightPositionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcForbidRightPositionField_swiginit(self, _riskuserapi.new_CShfeFtdcForbidRightPositionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcForbidRightPositionField

# Register CShfeFtdcForbidRightPositionField in _riskuserapi:
_riskuserapi.CShfeFtdcForbidRightPositionField_swigregister(CShfeFtdcForbidRightPositionField)
class CShfeFtdcForbidRightAccountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_BrokerID_get, _riskuserapi.CShfeFtdcForbidRightAccountField_BrokerID_set)
    AccountID: "TShfeFtdcAccountIDType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_AccountID_get, _riskuserapi.CShfeFtdcForbidRightAccountField_AccountID_set)
    PreMortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_PreMortgage_get, _riskuserapi.CShfeFtdcForbidRightAccountField_PreMortgage_set)
    PreCredit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_PreCredit_get, _riskuserapi.CShfeFtdcForbidRightAccountField_PreCredit_set)
    PreDeposit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_PreDeposit_get, _riskuserapi.CShfeFtdcForbidRightAccountField_PreDeposit_set)
    PreBalance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_PreBalance_get, _riskuserapi.CShfeFtdcForbidRightAccountField_PreBalance_set)
    PreMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_PreMargin_get, _riskuserapi.CShfeFtdcForbidRightAccountField_PreMargin_set)
    InterestBase: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_InterestBase_get, _riskuserapi.CShfeFtdcForbidRightAccountField_InterestBase_set)
    Interest: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_Interest_get, _riskuserapi.CShfeFtdcForbidRightAccountField_Interest_set)
    Deposit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_Deposit_get, _riskuserapi.CShfeFtdcForbidRightAccountField_Deposit_set)
    Withdraw: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_Withdraw_get, _riskuserapi.CShfeFtdcForbidRightAccountField_Withdraw_set)
    FrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_FrozenMargin_get, _riskuserapi.CShfeFtdcForbidRightAccountField_FrozenMargin_set)
    FrozenCash: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_FrozenCash_get, _riskuserapi.CShfeFtdcForbidRightAccountField_FrozenCash_set)
    FrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_FrozenCommission_get, _riskuserapi.CShfeFtdcForbidRightAccountField_FrozenCommission_set)
    CurrMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_CurrMargin_get, _riskuserapi.CShfeFtdcForbidRightAccountField_CurrMargin_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_CashIn_get, _riskuserapi.CShfeFtdcForbidRightAccountField_CashIn_set)
    Commission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_Commission_get, _riskuserapi.CShfeFtdcForbidRightAccountField_Commission_set)
    CloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_CloseProfit_get, _riskuserapi.CShfeFtdcForbidRightAccountField_CloseProfit_set)
    PositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_PositionProfit_get, _riskuserapi.CShfeFtdcForbidRightAccountField_PositionProfit_set)
    Balance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_Balance_get, _riskuserapi.CShfeFtdcForbidRightAccountField_Balance_set)
    Available: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_Available_get, _riskuserapi.CShfeFtdcForbidRightAccountField_Available_set)
    WithdrawQuota: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_WithdrawQuota_get, _riskuserapi.CShfeFtdcForbidRightAccountField_WithdrawQuota_set)
    Reserve: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_Reserve_get, _riskuserapi.CShfeFtdcForbidRightAccountField_Reserve_set)
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_TradingDay_get, _riskuserapi.CShfeFtdcForbidRightAccountField_TradingDay_set)
    SettlementID: "TShfeFtdcSettlementIDType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_SettlementID_get, _riskuserapi.CShfeFtdcForbidRightAccountField_SettlementID_set)
    Credit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_Credit_get, _riskuserapi.CShfeFtdcForbidRightAccountField_Credit_set)
    Mortgage: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_Mortgage_get, _riskuserapi.CShfeFtdcForbidRightAccountField_Mortgage_set)
    ExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_ExchangeMargin_get, _riskuserapi.CShfeFtdcForbidRightAccountField_ExchangeMargin_set)
    DeliveryMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_DeliveryMargin_get, _riskuserapi.CShfeFtdcForbidRightAccountField_DeliveryMargin_set)
    ExchangeDeliveryMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_ExchangeDeliveryMargin_get, _riskuserapi.CShfeFtdcForbidRightAccountField_ExchangeDeliveryMargin_set)
    ReserveBalance: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_ReserveBalance_get, _riskuserapi.CShfeFtdcForbidRightAccountField_ReserveBalance_set)
    CurrencyID: "TShfeFtdcCurrencyIDType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_CurrencyID_get, _riskuserapi.CShfeFtdcForbidRightAccountField_CurrencyID_set)
    PreFundMortgageIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_PreFundMortgageIn_get, _riskuserapi.CShfeFtdcForbidRightAccountField_PreFundMortgageIn_set)
    PreFundMortgageOut: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_PreFundMortgageOut_get, _riskuserapi.CShfeFtdcForbidRightAccountField_PreFundMortgageOut_set)
    FundMortgageIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_FundMortgageIn_get, _riskuserapi.CShfeFtdcForbidRightAccountField_FundMortgageIn_set)
    FundMortgageOut: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_FundMortgageOut_get, _riskuserapi.CShfeFtdcForbidRightAccountField_FundMortgageOut_set)
    FundMortgageAvailable: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_FundMortgageAvailable_get, _riskuserapi.CShfeFtdcForbidRightAccountField_FundMortgageAvailable_set)
    MortgageableFund: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_MortgageableFund_get, _riskuserapi.CShfeFtdcForbidRightAccountField_MortgageableFund_set)
    SpecProductMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_SpecProductMargin_get, _riskuserapi.CShfeFtdcForbidRightAccountField_SpecProductMargin_set)
    SpecProductFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_SpecProductFrozenMargin_get, _riskuserapi.CShfeFtdcForbidRightAccountField_SpecProductFrozenMargin_set)
    SpecProductCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_SpecProductCommission_get, _riskuserapi.CShfeFtdcForbidRightAccountField_SpecProductCommission_set)
    SpecProductFrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_SpecProductFrozenCommission_get, _riskuserapi.CShfeFtdcForbidRightAccountField_SpecProductFrozenCommission_set)
    SpecProductPositionProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_SpecProductPositionProfit_get, _riskuserapi.CShfeFtdcForbidRightAccountField_SpecProductPositionProfit_set)
    SpecProductCloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_SpecProductCloseProfit_get, _riskuserapi.CShfeFtdcForbidRightAccountField_SpecProductCloseProfit_set)
    SpecProductPositionProfitByAlg: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_SpecProductPositionProfitByAlg_get, _riskuserapi.CShfeFtdcForbidRightAccountField_SpecProductPositionProfitByAlg_set)
    SpecProductExchangeMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_SpecProductExchangeMargin_get, _riskuserapi.CShfeFtdcForbidRightAccountField_SpecProductExchangeMargin_set)
    FrozenSwap: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_FrozenSwap_get, _riskuserapi.CShfeFtdcForbidRightAccountField_FrozenSwap_set)
    RemainSwap: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_RemainSwap_get, _riskuserapi.CShfeFtdcForbidRightAccountField_RemainSwap_set)
    OptionCloseProfit: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_OptionCloseProfit_get, _riskuserapi.CShfeFtdcForbidRightAccountField_OptionCloseProfit_set)
    OptionValue: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_OptionValue_get, _riskuserapi.CShfeFtdcForbidRightAccountField_OptionValue_set)
    NCombMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_NCombMargin_get, _riskuserapi.CShfeFtdcForbidRightAccountField_NCombMargin_set)
    ActionTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_ActionTime_get, _riskuserapi.CShfeFtdcForbidRightAccountField_ActionTime_set)
    ActionDate: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcForbidRightAccountField_ActionDate_get, _riskuserapi.CShfeFtdcForbidRightAccountField_ActionDate_set)

    def __eq__(self, ct: "CShfeFtdcForbidRightAccountField") -> "bool":
        return _riskuserapi.CShfeFtdcForbidRightAccountField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcForbidRightAccountField_swiginit(self, _riskuserapi.new_CShfeFtdcForbidRightAccountField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcForbidRightAccountField

# Register CShfeFtdcForbidRightAccountField in _riskuserapi:
_riskuserapi.CShfeFtdcForbidRightAccountField_swigregister(CShfeFtdcForbidRightAccountField)
class CShfeFtdcInfoCommCountDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInfoCommCountDetailField_BrokerID_get, _riskuserapi.CShfeFtdcInfoCommCountDetailField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInfoCommCountDetailField_InvestorID_get, _riskuserapi.CShfeFtdcInfoCommCountDetailField_InvestorID_set)
    InvestorGroup: "TShfeFtdcInvestorGroupType" = property(_riskuserapi.CShfeFtdcInfoCommCountDetailField_InvestorGroup_get, _riskuserapi.CShfeFtdcInfoCommCountDetailField_InvestorGroup_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInfoCommCountDetailField_InstrumentID_get, _riskuserapi.CShfeFtdcInfoCommCountDetailField_InstrumentID_set)
    InsType: "TShfeFtdcInsTypeType" = property(_riskuserapi.CShfeFtdcInfoCommCountDetailField_InsType_get, _riskuserapi.CShfeFtdcInfoCommCountDetailField_InsType_set)
    CurrentWarnLevel: "TShfeFtdcWarnLevelType" = property(_riskuserapi.CShfeFtdcInfoCommCountDetailField_CurrentWarnLevel_get, _riskuserapi.CShfeFtdcInfoCommCountDetailField_CurrentWarnLevel_set)
    Count: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcInfoCommCountDetailField_Count_get, _riskuserapi.CShfeFtdcInfoCommCountDetailField_Count_set)

    def __eq__(self, ct: "CShfeFtdcInfoCommCountDetailField") -> "bool":
        return _riskuserapi.CShfeFtdcInfoCommCountDetailField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInfoCommCountDetailField_swiginit(self, _riskuserapi.new_CShfeFtdcInfoCommCountDetailField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInfoCommCountDetailField

# Register CShfeFtdcInfoCommCountDetailField in _riskuserapi:
_riskuserapi.CShfeFtdcInfoCommCountDetailField_swigregister(CShfeFtdcInfoCommCountDetailField)
class CShfeFtdcQryInvestorCommodityGroupSPMMMarginField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInvestorCommodityGroupSPMMMarginField_BrokerID_get, _riskuserapi.CShfeFtdcQryInvestorCommodityGroupSPMMMarginField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryInvestorCommodityGroupSPMMMarginField_InvestorID_get, _riskuserapi.CShfeFtdcQryInvestorCommodityGroupSPMMMarginField_InvestorID_set)
    CommodityGroupID: "TShfeFtdcSPMMProductIDType" = property(_riskuserapi.CShfeFtdcQryInvestorCommodityGroupSPMMMarginField_CommodityGroupID_get, _riskuserapi.CShfeFtdcQryInvestorCommodityGroupSPMMMarginField_CommodityGroupID_set)

    def __eq__(self, ct: "CShfeFtdcQryInvestorCommodityGroupSPMMMarginField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInvestorCommodityGroupSPMMMarginField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInvestorCommodityGroupSPMMMarginField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInvestorCommodityGroupSPMMMarginField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInvestorCommodityGroupSPMMMarginField

# Register CShfeFtdcQryInvestorCommodityGroupSPMMMarginField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInvestorCommodityGroupSPMMMarginField_swigregister(CShfeFtdcQryInvestorCommodityGroupSPMMMarginField)
class CShfeFtdcInvestorCommodityGroupSPMMMarginField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_ExchangeID_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_ExchangeID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_InvestorID_set)
    CommodityGroupID: "TShfeFtdcSPMMProductIDType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_CommodityGroupID_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_CommodityGroupID_set)
    MarginBeforeDiscount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_MarginBeforeDiscount_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_MarginBeforeDiscount_set)
    MarginNoDiscount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_MarginNoDiscount_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_MarginNoDiscount_set)
    LongRisk: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_LongRisk_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_LongRisk_set)
    ShortRisk: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_ShortRisk_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_ShortRisk_set)
    CloseFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_CloseFrozenMargin_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_CloseFrozenMargin_set)
    InterCommodityRate: "TShfeFtdcSPMMDiscountRatioType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_InterCommodityRate_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_InterCommodityRate_set)
    MiniMarginRatio: "TShfeFtdcSPMMDiscountRatioType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_MiniMarginRatio_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_MiniMarginRatio_set)
    AdjustRatio: "TShfeFtdcRatioType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_AdjustRatio_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_AdjustRatio_set)
    IntraCommodityDiscount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_IntraCommodityDiscount_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_IntraCommodityDiscount_set)
    InterCommodityDiscount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_InterCommodityDiscount_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_InterCommodityDiscount_set)
    ExchMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_ExchMargin_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_ExchMargin_set)
    InvestorMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_InvestorMargin_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_InvestorMargin_set)
    FrozenCommission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_FrozenCommission_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_FrozenCommission_set)
    Commission: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_Commission_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_Commission_set)
    FrozenCash: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_FrozenCash_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_FrozenCash_set)
    CashIn: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_CashIn_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_CashIn_set)
    StrikeFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_StrikeFrozenMargin_get, _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_StrikeFrozenMargin_set)

    def __eq__(self, ct: "CShfeFtdcInvestorCommodityGroupSPMMMarginField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorCommodityGroupSPMMMarginField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorCommodityGroupSPMMMarginField

# Register CShfeFtdcInvestorCommodityGroupSPMMMarginField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorCommodityGroupSPMMMarginField_swigregister(CShfeFtdcInvestorCommodityGroupSPMMMarginField)
class CShfeFtdcQryInvestorProdSPBMDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryInvestorProdSPBMDetailField_ExchangeID_get, _riskuserapi.CShfeFtdcQryInvestorProdSPBMDetailField_ExchangeID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInvestorProdSPBMDetailField_BrokerID_get, _riskuserapi.CShfeFtdcQryInvestorProdSPBMDetailField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryInvestorProdSPBMDetailField_InvestorID_get, _riskuserapi.CShfeFtdcQryInvestorProdSPBMDetailField_InvestorID_set)
    ProdFamilyCode: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryInvestorProdSPBMDetailField_ProdFamilyCode_get, _riskuserapi.CShfeFtdcQryInvestorProdSPBMDetailField_ProdFamilyCode_set)

    def __eq__(self, ct: "CShfeFtdcQryInvestorProdSPBMDetailField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInvestorProdSPBMDetailField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInvestorProdSPBMDetailField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInvestorProdSPBMDetailField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInvestorProdSPBMDetailField

# Register CShfeFtdcQryInvestorProdSPBMDetailField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInvestorProdSPBMDetailField_swigregister(CShfeFtdcQryInvestorProdSPBMDetailField)
class CShfeFtdcInvestorProdSPBMDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_ExchangeID_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_ExchangeID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_InvestorID_set)
    ProdFamilyCode: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_ProdFamilyCode_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_ProdFamilyCode_set)
    IntraInstrMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_IntraInstrMargin_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_IntraInstrMargin_set)
    BCollectingMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_BCollectingMargin_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_BCollectingMargin_set)
    SCollectingMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_SCollectingMargin_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_SCollectingMargin_set)
    IntraProdMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_IntraProdMargin_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_IntraProdMargin_set)
    NetMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_NetMargin_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_NetMargin_set)
    InterProdMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_InterProdMargin_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_InterProdMargin_set)
    SingleMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_SingleMargin_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_SingleMargin_set)
    AddOnMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_AddOnMargin_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_AddOnMargin_set)
    DeliveryMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_DeliveryMargin_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_DeliveryMargin_set)
    CallOptionMinRisk: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_CallOptionMinRisk_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_CallOptionMinRisk_set)
    PutOptionMinRisk: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_PutOptionMinRisk_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_PutOptionMinRisk_set)
    OptionMinRisk: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_OptionMinRisk_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_OptionMinRisk_set)
    OptionValueOffset: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_OptionValueOffset_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_OptionValueOffset_set)
    OptionRoyalty: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_OptionRoyalty_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_OptionRoyalty_set)
    RealOptionValueOffset: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_RealOptionValueOffset_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_RealOptionValueOffset_set)
    Margin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_Margin_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_Margin_set)
    ExchMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_ExchMargin_get, _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_ExchMargin_set)

    def __eq__(self, ct: "CShfeFtdcInvestorProdSPBMDetailField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorProdSPBMDetailField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorProdSPBMDetailField

# Register CShfeFtdcInvestorProdSPBMDetailField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorProdSPBMDetailField_swigregister(CShfeFtdcInvestorProdSPBMDetailField)
class CShfeFtdcQryInvestorProdRULEMarginField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcQryInvestorProdRULEMarginField_ExchangeID_get, _riskuserapi.CShfeFtdcQryInvestorProdRULEMarginField_ExchangeID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInvestorProdRULEMarginField_BrokerID_get, _riskuserapi.CShfeFtdcQryInvestorProdRULEMarginField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryInvestorProdRULEMarginField_InvestorID_get, _riskuserapi.CShfeFtdcQryInvestorProdRULEMarginField_InvestorID_set)
    ProdFamilyCode: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryInvestorProdRULEMarginField_ProdFamilyCode_get, _riskuserapi.CShfeFtdcQryInvestorProdRULEMarginField_ProdFamilyCode_set)
    CommodityGroupID: "TShfeFtdcCommodityGroupIDType" = property(_riskuserapi.CShfeFtdcQryInvestorProdRULEMarginField_CommodityGroupID_get, _riskuserapi.CShfeFtdcQryInvestorProdRULEMarginField_CommodityGroupID_set)

    def __eq__(self, ct: "CShfeFtdcQryInvestorProdRULEMarginField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInvestorProdRULEMarginField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInvestorProdRULEMarginField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInvestorProdRULEMarginField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInvestorProdRULEMarginField

# Register CShfeFtdcQryInvestorProdRULEMarginField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInvestorProdRULEMarginField_swigregister(CShfeFtdcQryInvestorProdRULEMarginField)
class CShfeFtdcInvestorProdRULEMarginField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_ExchangeID_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_ExchangeID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_InvestorID_set)
    ProdFamilyCode: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_ProdFamilyCode_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_ProdFamilyCode_set)
    InstrumentClass: "TShfeFtdcInstrumentClassType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_InstrumentClass_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_InstrumentClass_set)
    CommodityGroupID: "TShfeFtdcCommodityGroupIDType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_CommodityGroupID_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_CommodityGroupID_set)
    BStdPosition: "TShfeFtdcStdPositionType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_BStdPosition_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_BStdPosition_set)
    SStdPosition: "TShfeFtdcStdPositionType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_SStdPosition_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_SStdPosition_set)
    BStdOpenFrozen: "TShfeFtdcStdPositionType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_BStdOpenFrozen_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_BStdOpenFrozen_set)
    SStdOpenFrozen: "TShfeFtdcStdPositionType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_SStdOpenFrozen_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_SStdOpenFrozen_set)
    BStdCloseFrozen: "TShfeFtdcStdPositionType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_BStdCloseFrozen_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_BStdCloseFrozen_set)
    SStdCloseFrozen: "TShfeFtdcStdPositionType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_SStdCloseFrozen_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_SStdCloseFrozen_set)
    IntraProdStdPosition: "TShfeFtdcStdPositionType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_IntraProdStdPosition_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_IntraProdStdPosition_set)
    NetStdPosition: "TShfeFtdcStdPositionType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_NetStdPosition_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_NetStdPosition_set)
    InterProdStdPosition: "TShfeFtdcStdPositionType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_InterProdStdPosition_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_InterProdStdPosition_set)
    SingleStdPosition: "TShfeFtdcStdPositionType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_SingleStdPosition_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_SingleStdPosition_set)
    IntraProdMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_IntraProdMargin_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_IntraProdMargin_set)
    InterProdMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_InterProdMargin_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_InterProdMargin_set)
    SingleMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_SingleMargin_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_SingleMargin_set)
    NonCombMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_NonCombMargin_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_NonCombMargin_set)
    AddOnMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_AddOnMargin_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_AddOnMargin_set)
    ExchMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_ExchMargin_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_ExchMargin_set)
    AddOnFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_AddOnFrozenMargin_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_AddOnFrozenMargin_set)
    OpenFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_OpenFrozenMargin_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_OpenFrozenMargin_set)
    CloseFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_CloseFrozenMargin_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_CloseFrozenMargin_set)
    Margin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_Margin_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_Margin_set)
    FrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_FrozenMargin_get, _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_FrozenMargin_set)

    def __eq__(self, ct: "CShfeFtdcInvestorProdRULEMarginField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorProdRULEMarginField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorProdRULEMarginField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorProdRULEMarginField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorProdRULEMarginField

# Register CShfeFtdcInvestorProdRULEMarginField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorProdRULEMarginField_swigregister(CShfeFtdcInvestorProdRULEMarginField)
class CShfeFtdcQryInvestorProdRCAMSMarginField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryInvestorProdRCAMSMarginField_BrokerID_get, _riskuserapi.CShfeFtdcQryInvestorProdRCAMSMarginField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryInvestorProdRCAMSMarginField_InvestorID_get, _riskuserapi.CShfeFtdcQryInvestorProdRCAMSMarginField_InvestorID_set)
    CombProductID: "TShfeFtdcProductIDType" = property(_riskuserapi.CShfeFtdcQryInvestorProdRCAMSMarginField_CombProductID_get, _riskuserapi.CShfeFtdcQryInvestorProdRCAMSMarginField_CombProductID_set)
    ProductGroupID: "TShfeFtdcProductIDType" = property(_riskuserapi.CShfeFtdcQryInvestorProdRCAMSMarginField_ProductGroupID_get, _riskuserapi.CShfeFtdcQryInvestorProdRCAMSMarginField_ProductGroupID_set)

    def __eq__(self, ct: "CShfeFtdcQryInvestorProdRCAMSMarginField") -> "bool":
        return _riskuserapi.CShfeFtdcQryInvestorProdRCAMSMarginField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryInvestorProdRCAMSMarginField_swiginit(self, _riskuserapi.new_CShfeFtdcQryInvestorProdRCAMSMarginField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryInvestorProdRCAMSMarginField

# Register CShfeFtdcQryInvestorProdRCAMSMarginField in _riskuserapi:
_riskuserapi.CShfeFtdcQryInvestorProdRCAMSMarginField_swigregister(CShfeFtdcQryInvestorProdRCAMSMarginField)
class CShfeFtdcInvestorProdRCAMSMarginField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_ExchangeID_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_ExchangeID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_BrokerID_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_InvestorID_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_InvestorID_set)
    CombProductID: "TShfeFtdcProductIDType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_CombProductID_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_CombProductID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_HedgeFlag_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_HedgeFlag_set)
    ProductGroupID: "TShfeFtdcProductIDType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_ProductGroupID_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_ProductGroupID_set)
    RiskBeforeDiscount: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_RiskBeforeDiscount_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_RiskBeforeDiscount_set)
    IntraInstrRisk: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_IntraInstrRisk_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_IntraInstrRisk_set)
    BPosRisk: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_BPosRisk_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_BPosRisk_set)
    SPosRisk: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_SPosRisk_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_SPosRisk_set)
    IntraProdRisk: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_IntraProdRisk_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_IntraProdRisk_set)
    NetRisk: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_NetRisk_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_NetRisk_set)
    InterProdRisk: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_InterProdRisk_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_InterProdRisk_set)
    ShortOptRiskAdj: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_ShortOptRiskAdj_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_ShortOptRiskAdj_set)
    OptionRoyalty: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_OptionRoyalty_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_OptionRoyalty_set)
    MMSACloseFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_MMSACloseFrozenMargin_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_MMSACloseFrozenMargin_set)
    CloseCombFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_CloseCombFrozenMargin_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_CloseCombFrozenMargin_set)
    CloseFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_CloseFrozenMargin_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_CloseFrozenMargin_set)
    MMSAOpenFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_MMSAOpenFrozenMargin_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_MMSAOpenFrozenMargin_set)
    DeliveryOpenFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_DeliveryOpenFrozenMargin_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_DeliveryOpenFrozenMargin_set)
    OpenFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_OpenFrozenMargin_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_OpenFrozenMargin_set)
    UseFrozenMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_UseFrozenMargin_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_UseFrozenMargin_set)
    MMSAExchMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_MMSAExchMargin_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_MMSAExchMargin_set)
    DeliveryExchMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_DeliveryExchMargin_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_DeliveryExchMargin_set)
    CombExchMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_CombExchMargin_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_CombExchMargin_set)
    ExchMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_ExchMargin_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_ExchMargin_set)
    UseMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_UseMargin_get, _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_UseMargin_set)

    def __eq__(self, ct: "CShfeFtdcInvestorProdRCAMSMarginField") -> "bool":
        return _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_swiginit(self, _riskuserapi.new_CShfeFtdcInvestorProdRCAMSMarginField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcInvestorProdRCAMSMarginField

# Register CShfeFtdcInvestorProdRCAMSMarginField in _riskuserapi:
_riskuserapi.CShfeFtdcInvestorProdRCAMSMarginField_swigregister(CShfeFtdcInvestorProdRCAMSMarginField)
class CShfeFtdcQryRCAMSInvestorCombPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcQryRCAMSInvestorCombPositionField_BrokerID_get, _riskuserapi.CShfeFtdcQryRCAMSInvestorCombPositionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcQryRCAMSInvestorCombPositionField_InvestorID_get, _riskuserapi.CShfeFtdcQryRCAMSInvestorCombPositionField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryRCAMSInvestorCombPositionField_InstrumentID_get, _riskuserapi.CShfeFtdcQryRCAMSInvestorCombPositionField_InstrumentID_set)
    CombInstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcQryRCAMSInvestorCombPositionField_CombInstrumentID_get, _riskuserapi.CShfeFtdcQryRCAMSInvestorCombPositionField_CombInstrumentID_set)

    def __eq__(self, ct: "CShfeFtdcQryRCAMSInvestorCombPositionField") -> "bool":
        return _riskuserapi.CShfeFtdcQryRCAMSInvestorCombPositionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryRCAMSInvestorCombPositionField_swiginit(self, _riskuserapi.new_CShfeFtdcQryRCAMSInvestorCombPositionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryRCAMSInvestorCombPositionField

# Register CShfeFtdcQryRCAMSInvestorCombPositionField in _riskuserapi:
_riskuserapi.CShfeFtdcQryRCAMSInvestorCombPositionField_swigregister(CShfeFtdcQryRCAMSInvestorCombPositionField)
class CShfeFtdcRCAMSInvestorCombPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_ExchangeID_get, _riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_ExchangeID_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_BrokerID_get, _riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_BrokerID_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_InvestorID_get, _riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_InvestorID_set)
    InstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_InstrumentID_get, _riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_InstrumentID_set)
    HedgeFlag: "TShfeFtdcHedgeFlagType" = property(_riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_HedgeFlag_get, _riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_HedgeFlag_set)
    PosiDirection: "TShfeFtdcPosiDirectionType" = property(_riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_PosiDirection_get, _riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_PosiDirection_set)
    CombInstrumentID: "TShfeFtdcInstrumentIDType" = property(_riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_CombInstrumentID_get, _riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_CombInstrumentID_set)
    LegID: "TShfeFtdcLegIDType" = property(_riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_LegID_get, _riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_LegID_set)
    ExchangeInstID: "TShfeFtdcExchangeInstIDType" = property(_riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_ExchangeInstID_get, _riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_ExchangeInstID_set)
    TotalAmt: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_TotalAmt_get, _riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_TotalAmt_set)
    ExchMargin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_ExchMargin_get, _riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_ExchMargin_set)
    Margin: "TShfeFtdcMoneyType" = property(_riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_Margin_get, _riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_Margin_set)

    def __eq__(self, ct: "CShfeFtdcRCAMSInvestorCombPositionField") -> "bool":
        return _riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_swiginit(self, _riskuserapi.new_CShfeFtdcRCAMSInvestorCombPositionField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRCAMSInvestorCombPositionField

# Register CShfeFtdcRCAMSInvestorCombPositionField in _riskuserapi:
_riskuserapi.CShfeFtdcRCAMSInvestorCombPositionField_swigregister(CShfeFtdcRCAMSInvestorCombPositionField)
class CShfeFtdcMannualNoticeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "TShfeFtdcDateType" = property(_riskuserapi.CShfeFtdcMannualNoticeField_TradingDay_get, _riskuserapi.CShfeFtdcMannualNoticeField_TradingDay_set)
    SequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcMannualNoticeField_SequenceNo_get, _riskuserapi.CShfeFtdcMannualNoticeField_SequenceNo_set)
    Method: "TShfeFtdcRiskNotifyMethodType" = property(_riskuserapi.CShfeFtdcMannualNoticeField_Method_get, _riskuserapi.CShfeFtdcMannualNoticeField_Method_set)
    EventTime: "TShfeFtdcTimeType" = property(_riskuserapi.CShfeFtdcMannualNoticeField_EventTime_get, _riskuserapi.CShfeFtdcMannualNoticeField_EventTime_set)
    BrokerID: "TShfeFtdcBrokerIDType" = property(_riskuserapi.CShfeFtdcMannualNoticeField_BrokerID_get, _riskuserapi.CShfeFtdcMannualNoticeField_BrokerID_set)
    UserID: "TShfeFtdcUserIDType" = property(_riskuserapi.CShfeFtdcMannualNoticeField_UserID_get, _riskuserapi.CShfeFtdcMannualNoticeField_UserID_set)
    BizType: "TShfeFtdcParamNameType" = property(_riskuserapi.CShfeFtdcMannualNoticeField_BizType_get, _riskuserapi.CShfeFtdcMannualNoticeField_BizType_set)

    def __eq__(self, ct: "CShfeFtdcMannualNoticeField") -> "bool":
        return _riskuserapi.CShfeFtdcMannualNoticeField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcMannualNoticeField_swiginit(self, _riskuserapi.new_CShfeFtdcMannualNoticeField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcMannualNoticeField

# Register CShfeFtdcMannualNoticeField in _riskuserapi:
_riskuserapi.CShfeFtdcMannualNoticeField_swigregister(CShfeFtdcMannualNoticeField)
class CShfeFtdcQryWarnEventValueField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    WarnType: "TShfeFtdcWarnTypeType" = property(_riskuserapi.CShfeFtdcQryWarnEventValueField_WarnType_get, _riskuserapi.CShfeFtdcQryWarnEventValueField_WarnType_set)
    SeqStart: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcQryWarnEventValueField_SeqStart_get, _riskuserapi.CShfeFtdcQryWarnEventValueField_SeqStart_set)
    SeqEnd: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcQryWarnEventValueField_SeqEnd_get, _riskuserapi.CShfeFtdcQryWarnEventValueField_SeqEnd_set)

    def __eq__(self, ct: "CShfeFtdcQryWarnEventValueField") -> "bool":
        return _riskuserapi.CShfeFtdcQryWarnEventValueField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcQryWarnEventValueField_swiginit(self, _riskuserapi.new_CShfeFtdcQryWarnEventValueField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcQryWarnEventValueField

# Register CShfeFtdcQryWarnEventValueField in _riskuserapi:
_riskuserapi.CShfeFtdcQryWarnEventValueField_swigregister(CShfeFtdcQryWarnEventValueField)
class CShfeFtdcWarnEventValueField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    WarnType: "TShfeFtdcWarnTypeType" = property(_riskuserapi.CShfeFtdcWarnEventValueField_WarnType_get, _riskuserapi.CShfeFtdcWarnEventValueField_WarnType_set)
    UniqSequenceNo: "TShfeFtdcSequenceNoType" = property(_riskuserapi.CShfeFtdcWarnEventValueField_UniqSequenceNo_get, _riskuserapi.CShfeFtdcWarnEventValueField_UniqSequenceNo_set)
    InvestorID: "TShfeFtdcInvestorIDType" = property(_riskuserapi.CShfeFtdcWarnEventValueField_InvestorID_get, _riskuserapi.CShfeFtdcWarnEventValueField_InvestorID_set)
    ExchangeID: "TShfeFtdcExchangeIDType" = property(_riskuserapi.CShfeFtdcWarnEventValueField_ExchangeID_get, _riskuserapi.CShfeFtdcWarnEventValueField_ExchangeID_set)
    Value: "TShfeFtdcVolumeType" = property(_riskuserapi.CShfeFtdcWarnEventValueField_Value_get, _riskuserapi.CShfeFtdcWarnEventValueField_Value_set)

    def __eq__(self, ct: "CShfeFtdcWarnEventValueField") -> "bool":
        return _riskuserapi.CShfeFtdcWarnEventValueField___eq__(self, ct)

    def __init__(self):
        _riskuserapi.CShfeFtdcWarnEventValueField_swiginit(self, _riskuserapi.new_CShfeFtdcWarnEventValueField())
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcWarnEventValueField

# Register CShfeFtdcWarnEventValueField in _riskuserapi:
_riskuserapi.CShfeFtdcWarnEventValueField_swigregister(CShfeFtdcWarnEventValueField)
class CShfeFtdcRiskUserSpi(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def OnFrontConnected(self) -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnFrontConnected(self)

    def OnFrontDisconnected(self, nReason: "int") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnFrontDisconnected(self, nReason)

    def OnHeartBeatWarning(self, nTimeLapse: "int") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnHeartBeatWarning(self, nTimeLapse)

    def OnRspError(self, pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspError(self, pRspInfo, nRequestID, bIsLast)

    def OnRtnBrokerDeposit(self, pBrokerDeposit: "CShfeFtdcBrokerDepositField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnBrokerDeposit(self, pBrokerDeposit)

    def OnRtnInvestorSumInfo(self, pInvestorSumInfo: "CShfeFtdcInvestorSumInfoField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnInvestorSumInfo(self, pInvestorSumInfo)

    def OnRtnClientSGDataSyncStart(self, pSettlementSession: "CShfeFtdcSettlementSessionField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnClientSGDataSyncStart(self, pSettlementSession)

    def OnRtnClientSGDataSyncEnd(self, pSettlementSession: "CShfeFtdcSettlementSessionField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnClientSGDataSyncEnd(self, pSettlementSession)

    def OnRspRiskUserLogin(self, pRspRiskUserLogin: "CShfeFtdcRspRiskUserLoginField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspRiskUserLogin(self, pRspRiskUserLogin, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInvestorMarginRate(self, pInvestorMarginRate: "CShfeFtdcInvestorMarginRateField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryInvestorMarginRate(self, pInvestorMarginRate, pRspInfo, nRequestID, bIsLast)

    def OnRtnProduct(self, pProduct: "CShfeFtdcProductField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnProduct(self, pProduct)

    def OnRtnInstrument(self, pInstrument: "CShfeFtdcInstrumentField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnInstrument(self, pInstrument)

    def OnRspQryOrderStat(self, pOrderStat: "CShfeFtdcOrderStatField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryOrderStat(self, pOrderStat, pRspInfo, nRequestID, bIsLast)

    def OnRtnExchange(self, pExchange: "CShfeFtdcExchangeField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnExchange(self, pExchange)

    def OnRspInvestorPositionStatic(self, pInvestorPositionStatic: "CShfeFtdcInvestorPositionStaticField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspInvestorPositionStatic(self, pInvestorPositionStatic, pRspInfo, nRequestID, bIsLast)

    def OnRspInvestorTradeStatic(self, pInvestorTradeStatic: "CShfeFtdcInvestorTradeStaticField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspInvestorTradeStatic(self, pInvestorTradeStatic, pRspInfo, nRequestID, bIsLast)

    def OnRtnRiskDepthMarketData(self, pDepthMarketData: "CShfeFtdcDepthMarketDataField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnRiskDepthMarketData(self, pDepthMarketData)

    def OnRtnTimeSync(self, pCurrentTime: "CShfeFtdcCurrentTimeField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnTimeSync(self, pCurrentTime)

    def OnRspInstPositionRate(self, pRspInstPositionRate: "CShfeFtdcRspInstPositionRateField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspInstPositionRate(self, pRspInstPositionRate, pRspInfo, nRequestID, bIsLast)

    def OnRspProductPositionRate(self, pRspProductPositionRate: "CShfeFtdcRspProductPositionRateField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspProductPositionRate(self, pRspProductPositionRate, pRspInfo, nRequestID, bIsLast)

    def OnRspQryTradingCodeHash(self, pInvestorHash: "CShfeFtdcInvestorHashField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryTradingCodeHash(self, pInvestorHash, pRspInfo, nRequestID, bIsLast)

    def OnRspQryTradingCode(self, pTradingCode: "CShfeFtdcTradingCodeField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryTradingCode(self, pTradingCode, pRspInfo, nRequestID, bIsLast)

    def OnRtnTradingCode(self, pTradingCode: "CShfeFtdcTradingCodeField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnTradingCode(self, pTradingCode)

    def OnRtnDelTradingCode(self, pTradingCode: "CShfeFtdcTradingCodeField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnDelTradingCode(self, pTradingCode)

    def OnRtnSequencialBrokerUserEvent(self, pSequencialBrokerUserEvent: "CShfeFtdcSequencialBrokerUserEventField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnSequencialBrokerUserEvent(self, pSequencialBrokerUserEvent)

    def OnRtnSequencialTrade(self, pSequencialTrade: "CShfeFtdcSequencialTradeField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnSequencialTrade(self, pSequencialTrade)

    def OnRtnSequencialOrder(self, pSequencialOrder: "CShfeFtdcSequencialOrderField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnSequencialOrder(self, pSequencialOrder)

    def OnRspRiskOrderInsert(self, pInputOrder: "CShfeFtdcInputOrderField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspRiskOrderInsert(self, pInputOrder, pRspInfo, nRequestID, bIsLast)

    def OnRspRiskOrderAction(self, pInputOrderAction: "CShfeFtdcInputOrderActionField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspRiskOrderAction(self, pInputOrderAction, pRspInfo, nRequestID, bIsLast)

    def OnRtnSequencialPosition(self, pSequencialPosition: "CShfeFtdcSequencialPositionField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnSequencialPosition(self, pSequencialPosition)

    def OnRspRiskNotifyCommand(self, pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspRiskNotifyCommand(self, pRspInfo, nRequestID, bIsLast)

    def OnRspBatchForceCloseCalc(self, pRspForceClosePosition: "CShfeFtdcRspForceClosePositionField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspBatchForceCloseCalc(self, pRspForceClosePosition, pRspInfo, nRequestID, bIsLast)

    def OnRspForceCloseCalc(self, pRspForceClosePosition: "CShfeFtdcRspForceClosePositionField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspForceCloseCalc(self, pRspForceClosePosition, pRspInfo, nRequestID, bIsLast)

    def OnRspSetIndexNPPParam(self, pIndexNPPParam: "CShfeFtdcIndexNPPParamField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspSetIndexNPPParam(self, pIndexNPPParam, pRspInfo, nRequestID, bIsLast)

    def OnRtnIndexNPP(self, pIndexNPP: "CShfeFtdcIndexNPPField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnIndexNPP(self, pIndexNPP)

    def OnRspRemIndexNPPParam(self, pIndexNPPParam: "CShfeFtdcIndexNPPParamField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspRemIndexNPPParam(self, pIndexNPPParam, pRspInfo, nRequestID, bIsLast)

    def OnRspForceCloseAccount(self, pInvestorRiskAccount: "CShfeFtdcInvestorRiskAccountField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspForceCloseAccount(self, pInvestorRiskAccount, pRspInfo, nRequestID, bIsLast)

    def OnRspQryLogin(self, pNormalRiskQuery: "CShfeFtdcNormalRiskQueryField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryLogin(self, pNormalRiskQuery, pRspInfo, nRequestID, bIsLast)

    def OnRspQrySafePriceRange(self, pSafePriceRange: "CShfeFtdcSafePriceRangeField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQrySafePriceRange(self, pSafePriceRange, pRspInfo, nRequestID, bIsLast)

    def OnRspQrySafePriceRangeAccount(self, pInvestorRiskAccount: "CShfeFtdcInvestorRiskAccountField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQrySafePriceRangeAccount(self, pInvestorRiskAccount, pRspInfo, nRequestID, bIsLast)

    def OnRspQryPriceVaryEffect(self, pPriceVaryParam: "CShfeFtdcPriceVaryParamField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryPriceVaryEffect(self, pPriceVaryParam, pRspInfo, nRequestID, bIsLast)

    def OnRtnDepartment(self, pDepartment: "CShfeFtdcDepartmentField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnDepartment(self, pDepartment)

    def OnRtnInvestorDepartment(self, pInvestorDepartmentFlat: "CShfeFtdcInvestorDepartmentFlatField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnInvestorDepartment(self, pInvestorDepartmentFlat)

    def OnRspIndexNPP(self, pIndexNPP: "CShfeFtdcIndexNPPField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspIndexNPP(self, pIndexNPP, pRspInfo, nRequestID, bIsLast)

    def OnRtnTradeParam(self, pTradeParam: "CShfeFtdcTradeParamField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnTradeParam(self, pTradeParam)

    def OnRspRiskParkedOrderInsert(self, pRiskParkedOrder: "CShfeFtdcRiskParkedOrderField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspRiskParkedOrderInsert(self, pRiskParkedOrder, pRspInfo, nRequestID, bIsLast)

    def OnRspRemoveRiskParkedOrder(self, pRemoveRiskParkedOrder: "CShfeFtdcRemoveRiskParkedOrderField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspRemoveRiskParkedOrder(self, pRemoveRiskParkedOrder, pRspInfo, nRequestID, bIsLast)

    def OnRtnSeqRiskParkedOrder(self, pSeqRiskParkedOrder: "CShfeFtdcSeqRiskParkedOrderField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnSeqRiskParkedOrder(self, pSeqRiskParkedOrder)

    def OnRspRiskUserPasswordUpd(self, pUserPasswordUpdate: "CShfeFtdcUserPasswordUpdateField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspRiskUserPasswordUpd(self, pUserPasswordUpdate, pRspInfo, nRequestID, bIsLast)

    def OnRtnSeqDeposit(self, pSeqDeposit: "CShfeFtdcSeqDepositField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnSeqDeposit(self, pSeqDeposit)

    def OnRspAddRiskUserEvent(self, pRiskUserEvent: "CShfeFtdcRiskUserEventField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspAddRiskUserEvent(self, pRiskUserEvent, pRspInfo, nRequestID, bIsLast)

    def OnRspQryPredictRiskAccount(self, pPredictRiskAccount: "CShfeFtdcPredictRiskAccountField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryPredictRiskAccount(self, pPredictRiskAccount, pRspInfo, nRequestID, bIsLast)

    def OnRspQryPredictRiskPosition(self, pPredictRiskPosition: "CShfeFtdcPredictRiskPositionField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryPredictRiskPosition(self, pPredictRiskPosition, pRspInfo, nRequestID, bIsLast)

    def OnRtnRiskInvestor(self, pRiskSyncInvestor: "CShfeFtdcRiskSyncInvestorField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnRiskInvestor(self, pRiskSyncInvestor)

    def OnRspQryInvestorLinkMan(self, pInvestorLinkMan: "CShfeFtdcInvestorLinkManField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryInvestorLinkMan(self, pInvestorLinkMan, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInvestorDepartment(self, pInvestorDepartmentFlat: "CShfeFtdcInvestorDepartmentFlatField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryInvestorDepartment(self, pInvestorDepartmentFlat, pRspInfo, nRequestID, bIsLast)

    def OnRtnDelIndexNPP(self, pIndexNPP: "CShfeFtdcIndexNPPField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnDelIndexNPP(self, pIndexNPP)

    def OnRtnRiskUserFunction(self, pRiskUserFunction: "CShfeFtdcRiskUserFunctionField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnRiskUserFunction(self, pRiskUserFunction)

    def OnRtnDelRiskUserFunction(self, pRiskUserFunction: "CShfeFtdcRiskUserFunctionField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnDelRiskUserFunction(self, pRiskUserFunction)

    def OnRtnRiskSyncAccount(self, pRiskSyncAccount: "CShfeFtdcRiskSyncAccountField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnRiskSyncAccount(self, pRiskSyncAccount)

    def OnRtnSeqPreRiskAccount(self, pSeqPreRiskAccount: "CShfeFtdcSeqPreRiskAccountField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnSeqPreRiskAccount(self, pSeqPreRiskAccount)

    def OnRtnNoticeToken(self, pNoticeToken: "CShfeFtdcNoticeTokenField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnNoticeToken(self, pNoticeToken)

    def OnRtnNoticePattern(self, pNoticePattern: "CShfeFtdcNoticePatternField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnNoticePattern(self, pNoticePattern)

    def OnRspModNoticePattern(self, pNoticePattern: "CShfeFtdcNoticePatternField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspModNoticePattern(self, pNoticePattern, pRspInfo, nRequestID, bIsLast)

    def OnRtnVaryMarketData(self, pVaryMarketData: "CShfeFtdcVaryMarketDataField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnVaryMarketData(self, pVaryMarketData)

    def OnRspAddRiskNotifyA(self, pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspAddRiskNotifyA(self, pRspInfo, nRequestID, bIsLast)

    def OnRspAddBizNotice(self, pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspAddBizNotice(self, pRspInfo, nRequestID, bIsLast)

    def OnRtnSeqBizNotice(self, pSeqBizNotice: "CShfeFtdcSeqBizNoticeField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnSeqBizNotice(self, pSeqBizNotice)

    def OnRspRiskQryBrokerDeposit(self, pQueryBrokerDeposit: "CShfeFtdcQueryBrokerDepositField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspRiskQryBrokerDeposit(self, pQueryBrokerDeposit, pRspInfo, nRequestID, bIsLast)

    def OnRtnRiskParamInfo(self, pRiskParamInfo: "CShfeFtdcRiskParamInfoField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnRiskParamInfo(self, pRiskParamInfo)

    def OnRspModRiskInvestorParam(self, pRiskInvestorParam: "CShfeFtdcRiskInvestorParamField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspModRiskInvestorParam(self, pRiskInvestorParam, pRspInfo, nRequestID, bIsLast)

    def OnRspRemRiskInvestorParam(self, pRiskInvestorParam: "CShfeFtdcRiskInvestorParamField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspRemRiskInvestorParam(self, pRiskInvestorParam, pRspInfo, nRequestID, bIsLast)

    def OnRtnRiskInvestorParam(self, pRiskInvestorParam: "CShfeFtdcRiskInvestorParamField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnRiskInvestorParam(self, pRiskInvestorParam)

    def OnRtnDelRiskInvestorParam(self, pRiskInvestorParam: "CShfeFtdcRiskInvestorParamField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnDelRiskInvestorParam(self, pRiskInvestorParam)

    def OnRspForceRiskUserLogout(self, pRiskLoginInfo: "CShfeFtdcRiskLoginInfoField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspForceRiskUserLogout(self, pRiskLoginInfo, pRspInfo, nRequestID, bIsLast)

    def OnRtnForceRiskUserLogout(self, pRiskLoginInfo: "CShfeFtdcRiskLoginInfoField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnForceRiskUserLogout(self, pRiskLoginInfo)

    def OnRspAddRiskPattern(self, pRiskPattern: "CShfeFtdcRiskPatternField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspAddRiskPattern(self, pRiskPattern, pRspInfo, nRequestID, bIsLast)

    def OnRspModRiskPattern(self, pRiskPattern: "CShfeFtdcRiskPatternField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspModRiskPattern(self, pRiskPattern, pRspInfo, nRequestID, bIsLast)

    def OnRspRemRiskPattern(self, pRiskPattern: "CShfeFtdcRiskPatternField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspRemRiskPattern(self, pRiskPattern, pRspInfo, nRequestID, bIsLast)

    def OnRtnRiskPattern(self, pRiskPattern: "CShfeFtdcRiskPatternField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnRiskPattern(self, pRiskPattern)

    def OnRtnDelRiskPattern(self, pRiskPattern: "CShfeFtdcRiskPatternField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnDelRiskPattern(self, pRiskPattern)

    def OnRspAddInvestorPattern(self, pInvestorPattern: "CShfeFtdcInvestorPatternField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspAddInvestorPattern(self, pInvestorPattern, pRspInfo, nRequestID, bIsLast)

    def OnRspModInvestorPattern(self, pInvestorPattern: "CShfeFtdcInvestorPatternField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspModInvestorPattern(self, pInvestorPattern, pRspInfo, nRequestID, bIsLast)

    def OnRspRemInvestorPattern(self, pInvestorPattern: "CShfeFtdcInvestorPatternField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspRemInvestorPattern(self, pInvestorPattern, pRspInfo, nRequestID, bIsLast)

    def OnRtnInvestorPattern(self, pInvestorPattern: "CShfeFtdcInvestorPatternField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnInvestorPattern(self, pInvestorPattern)

    def OnRtnDelInvestorPattern(self, pInvestorPattern: "CShfeFtdcInvestorPatternField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnDelInvestorPattern(self, pInvestorPattern)

    def OnRtnRiskNotifyToken(self, pRiskNotifyToken: "CShfeFtdcRiskNotifyTokenField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnRiskNotifyToken(self, pRiskNotifyToken)

    def OnRtnSeqRiskNotifyB(self, pSeqRiskNotifyB: "CShfeFtdcSeqRiskNotifyBField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnSeqRiskNotifyB(self, pSeqRiskNotifyB)

    def OnRspQryPositionStat(self, pPositionStat: "CShfeFtdcPositionStatField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryPositionStat(self, pPositionStat, pRspInfo, nRequestID, bIsLast)

    def OnRspQryTradeStat(self, pTradeStat: "CShfeFtdcTradeStatField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryTradeStat(self, pTradeStat, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInvestorLinkManHash(self, pInvestorHash: "CShfeFtdcInvestorHashField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryInvestorLinkManHash(self, pInvestorHash, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInvestorDepartmentHash(self, pInvestorHash: "CShfeFtdcInvestorHashField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryInvestorDepartmentHash(self, pInvestorHash, pRspInfo, nRequestID, bIsLast)

    def OnRspQryStressTest(self, pInvestorRiskAccount: "CShfeFtdcInvestorRiskAccountField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryStressTest(self, pInvestorRiskAccount, pRspInfo, nRequestID, bIsLast)

    def OnRspQryLowMarginInvestorHash(self, pInvestorHash: "CShfeFtdcInvestorHashField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryLowMarginInvestorHash(self, pInvestorHash, pRspInfo, nRequestID, bIsLast)

    def OnRspQryLowMarginInvestor(self, pLowMarginInvestor: "CShfeFtdcLowMarginInvestorField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryLowMarginInvestor(self, pLowMarginInvestor, pRspInfo, nRequestID, bIsLast)

    def OnRtnLowMarginInvestor(self, pLowMarginInvestor: "CShfeFtdcLowMarginInvestorField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnLowMarginInvestor(self, pLowMarginInvestor)

    def OnRtnDelLowMarginInvestor(self, pLowMarginInvestor: "CShfeFtdcLowMarginInvestorField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnDelLowMarginInvestor(self, pLowMarginInvestor)

    def OnRtnSeqSmsCustomNotify(self, pSeqSmsCustomNotify: "CShfeFtdcSeqSmsCustomNotifyField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnSeqSmsCustomNotify(self, pSeqSmsCustomNotify)

    def OnRspSetSmsStatus(self, pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspSetSmsStatus(self, pRspInfo, nRequestID, bIsLast)

    def OnRspQryExchMarginRate(self, pExchMarginRate: "CShfeFtdcExchMarginRateField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryExchMarginRate(self, pExchMarginRate, pRspInfo, nRequestID, bIsLast)

    def OnRspReqQryCommissionRate(self, pInstrumentCommissionRate: "CShfeFtdcInstrumentCommissionRateField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspReqQryCommissionRate(self, pInstrumentCommissionRate, pRspInfo, nRequestID, bIsLast)

    def OnRtnSeqIPGroupMargin(self, pSeqIPGroupMargin: "CShfeFtdcSeqIPGroupMarginField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnSeqIPGroupMargin(self, pSeqIPGroupMargin)

    def OnRspQrySecAgentInvestorHash(self, pInvestorHash: "CShfeFtdcInvestorHashField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQrySecAgentInvestorHash(self, pInvestorHash, pRspInfo, nRequestID, bIsLast)

    def OnRspQrySecAgentInvestor(self, pSecAgentInvestor: "CShfeFtdcSecAgentInvestorField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQrySecAgentInvestor(self, pSecAgentInvestor, pRspInfo, nRequestID, bIsLast)

    def OnRtnSecAgentInvestor(self, pSecAgentInvestor: "CShfeFtdcSecAgentInvestorField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnSecAgentInvestor(self, pSecAgentInvestor)

    def OnRtnDelSecAgentInvestor(self, pSecAgentInvestor: "CShfeFtdcSecAgentInvestorField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnDelSecAgentInvestor(self, pSecAgentInvestor)

    def OnRtnProductExchangeRate(self, pProductExchRate: "CShfeFtdcProductExchRateField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnProductExchangeRate(self, pProductExchRate)

    def OnRspQryOptionInstrCommRate(self, pOptionInstrCommRate: "CShfeFtdcOptionInstrCommRateField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryOptionInstrCommRate(self, pOptionInstrCommRate, pRspInfo, nRequestID, bIsLast)

    def OnRspQryMMOptionInstrCommRate(self, pMMOptionInstrCommRate: "CShfeFtdcMMOptionInstrCommRateField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryMMOptionInstrCommRate(self, pMMOptionInstrCommRate, pRspInfo, nRequestID, bIsLast)

    def OnRspQryExecOrder(self, pRiskExecOrder: "CShfeFtdcRiskExecOrderField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryExecOrder(self, pRiskExecOrder, pRspInfo, nRequestID, bIsLast)

    def OnRspQryLogUserLoginStat(self, pRiskLogUserLoginStat: "CShfeFtdcRiskLogUserLoginStatField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryLogUserLoginStat(self, pRiskLogUserLoginStat, pRspInfo, nRequestID, bIsLast)

    def OnRspQryLogUserLoginInfo(self, pRiskLogUserLoginInfo: "CShfeFtdcRiskLogUserLoginInfoField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryLogUserLoginInfo(self, pRiskLogUserLoginInfo, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInstrumentGreeks(self, pRiskInstrumentGreeks: "CShfeFtdcRiskInstrumentGreeksField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryInstrumentGreeks(self, pRiskInstrumentGreeks, pRspInfo, nRequestID, bIsLast)

    def OnRspQryExeciseTest(self, pInvestorTestResult: "CShfeFtdcInvestorTestResultField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryExeciseTest(self, pInvestorTestResult, pRspInfo, nRequestID, bIsLast)

    def OnRspQryUserRightsAssign(self, pUserRightsAssign: "CShfeFtdcUserRightsAssignField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryUserRightsAssign(self, pUserRightsAssign, pRspInfo, nRequestID, bIsLast)

    def OnRspQryCurrDRIdentity(self, pCurrDRIdentity: "CShfeFtdcCurrDRIdentityField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryCurrDRIdentity(self, pCurrDRIdentity, pRspInfo, nRequestID, bIsLast)

    def OnRspQrySecAgentTradingAccount(self, pInvestorRiskAccount: "CShfeFtdcInvestorRiskAccountField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQrySecAgentTradingAccount(self, pInvestorRiskAccount, pRspInfo, nRequestID, bIsLast)

    def OnRspQrySyncDelaySwap(self, pSyncDelaySwap: "CShfeFtdcSyncDelaySwapField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQrySyncDelaySwap(self, pSyncDelaySwap, pRspInfo, nRequestID, bIsLast)

    def OnRspQrySecAgentCheckMode(self, pSecAgentCheckMode: "CShfeFtdcSecAgentCheckModeField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQrySecAgentCheckMode(self, pSecAgentCheckMode, pRspInfo, nRequestID, bIsLast)

    def OnRtnSecAgentCheckMode(self, pSecAgentCheckMode: "CShfeFtdcSecAgentCheckModeField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnSecAgentCheckMode(self, pSecAgentCheckMode)

    def OnRspQrySecAgentTradeInfo(self, pSecAgentTradeInfo: "CShfeFtdcSecAgentTradeInfoField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQrySecAgentTradeInfo(self, pSecAgentTradeInfo, pRspInfo, nRequestID, bIsLast)

    def OnRspAddPersistPositionCombine(self, pDcePersistPositionCombine: "CShfeFtdcDcePersistPositionCombineField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspAddPersistPositionCombine(self, pDcePersistPositionCombine, pRspInfo, nRequestID, bIsLast)

    def OnRtnPersistPositionCombine(self, pDcePersistPositionCombine: "CShfeFtdcDcePersistPositionCombineField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnPersistPositionCombine(self, pDcePersistPositionCombine)

    def OnRspDelPersistPositionCombine(self, pDcePersistPositionCombine: "CShfeFtdcDcePersistPositionCombineField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspDelPersistPositionCombine(self, pDcePersistPositionCombine, pRspInfo, nRequestID, bIsLast)

    def OnRtnDelPersistPositionCombine(self, pDcePersistPositionCombine: "CShfeFtdcDcePersistPositionCombineField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnDelPersistPositionCombine(self, pDcePersistPositionCombine)

    def OnRspQryDepthMarketData(self, pDepthMarketData: "CShfeFtdcDepthMarketDataField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryDepthMarketData(self, pDepthMarketData, pRspInfo, nRequestID, bIsLast)

    def OnRspOptionTradePosi(self, pOptionTradeInvestorTestResult: "CShfeFtdcOptionTradeInvestorTestResultField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspOptionTradePosi(self, pOptionTradeInvestorTestResult, pRspInfo, nRequestID, bIsLast)

    def OnRspOptionTradeAccount(self, pOptionTradeInvestorAccountTestResult: "CShfeFtdcOptionTradeInvestorAccountTestResultField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspOptionTradeAccount(self, pOptionTradeInvestorAccountTestResult, pRspInfo, nRequestID, bIsLast)

    def OnRspBatchExecOrderInsert(self, pInputExecOrder: "CShfeFtdcInputExecOrderField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspBatchExecOrderInsert(self, pInputExecOrder, pRspInfo, nRequestID, bIsLast)

    def OnRtnBatchOutExecOrder(self, pExecOrder: "CShfeFtdcExecOrderField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnBatchOutExecOrder(self, pExecOrder)

    def OnRspExecFrozen(self, pExecDepositFrozen: "CShfeFtdcExecDepositFrozenField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspExecFrozen(self, pExecDepositFrozen, pRspInfo, nRequestID, bIsLast)

    def OnRspBrokerDepositTest(self, pRspDeposit: "CShfeFtdcRspDepositField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspBrokerDepositTest(self, pRspDeposit, pRspInfo, nRequestID, bIsLast)

    def OnRspSetExchangeRiskFreeRate(self, pExchangeRiskFreeRate: "CShfeFtdcExchangeRiskFreeRateField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspSetExchangeRiskFreeRate(self, pExchangeRiskFreeRate, pRspInfo, nRequestID, bIsLast)

    def OnRspSetProductDividendRate(self, pProductDividendRate: "CShfeFtdcProductDividendRateField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspSetProductDividendRate(self, pProductDividendRate, pRspInfo, nRequestID, bIsLast)

    def OnRspSetUnderlyingIndexPrice(self, pUnderlyingIndexPrice: "CShfeFtdcUnderlyingIndexPriceField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspSetUnderlyingIndexPrice(self, pUnderlyingIndexPrice, pRspInfo, nRequestID, bIsLast)

    def OnRspQryCalendarReminder(self, pCalendarReminder: "CShfeFtdcCalendarReminderField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryCalendarReminder(self, pCalendarReminder, pRspInfo, nRequestID, bIsLast)

    def OnRspSetCZCEOptionSelfClose(self, pSetCZCEOptionSelfClose: "CShfeFtdcSetCZCEOptionSelfCloseField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspSetCZCEOptionSelfClose(self, pSetCZCEOptionSelfClose, pRspInfo, nRequestID, bIsLast)

    def OnRspQryOptionSelfClose(self, pOptionSelfClose: "CShfeFtdcOptionSelfCloseField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryOptionSelfClose(self, pOptionSelfClose, pRspInfo, nRequestID, bIsLast)

    def OnRspQryForceCloseSnapshot(self, pForceCloseSnapshot: "CShfeFtdcForceCloseSnapshotField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryForceCloseSnapshot(self, pForceCloseSnapshot, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInfoCommStageProduct(self, pInfoCommStageProduct: "CShfeFtdcInfoCommStageProductField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryInfoCommStageProduct(self, pInfoCommStageProduct, pRspInfo, nRequestID, bIsLast)

    def OnRtnRiskWarnEvent(self, pRiskWarnEvent: "CShfeFtdcRiskWarnEventField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnRiskWarnEvent(self, pRiskWarnEvent)

    def OnRspRiskNotifyAck(self, pRiskNotifyAck: "CShfeFtdcRiskNotifyAckField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspRiskNotifyAck(self, pRiskNotifyAck, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInvestorInfoComm(self, pInvestorInfoComm: "CShfeFtdcInvestorInfoCommField", pRspInfo: "CShfeFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRspQryInvestorInfoComm(self, pInvestorInfoComm, pRspInfo, nRequestID, bIsLast)

    def OnRtnForceCloseOrder(self, pSequencialOrder: "CShfeFtdcSequencialOrderField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnForceCloseOrder(self, pSequencialOrder)

    def OnRtnForbiddenRight(self, pForbiddenRightInfo: "CShfeFtdcForbiddenRightInfoField") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserSpi_OnRtnForbiddenRight(self, pForbiddenRightInfo)

    def __init__(self):
        if self.__class__ == CShfeFtdcRiskUserSpi:
            _self = None
        else:
            _self = self
        _riskuserapi.CShfeFtdcRiskUserSpi_swiginit(self, _riskuserapi.new_CShfeFtdcRiskUserSpi(_self, ))
    __swig_destroy__ = _riskuserapi.delete_CShfeFtdcRiskUserSpi
    def __disown__(self):
        self.this.disown()
        _riskuserapi.disown_CShfeFtdcRiskUserSpi(self)
        return weakref.proxy(self)

# Register CShfeFtdcRiskUserSpi in _riskuserapi:
_riskuserapi.CShfeFtdcRiskUserSpi_swigregister(CShfeFtdcRiskUserSpi)
class CShfeFtdcRiskUserApi(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    @staticmethod
    def CreateFtdcRiskUserApi(*args) -> "CShfeFtdcRiskUserApi *":
        return _riskuserapi.CShfeFtdcRiskUserApi_CreateFtdcRiskUserApi(*args)

    @staticmethod
    def GetApiVersion() -> "char const *":
        return _riskuserapi.CShfeFtdcRiskUserApi_GetApiVersion()

    def Release(self) -> "void":
        return _riskuserapi.CShfeFtdcRiskUserApi_Release(self)

    def Init(self) -> "void":
        return _riskuserapi.CShfeFtdcRiskUserApi_Init(self)

    def Join(self) -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_Join(self)

    def GetTradingDay(self) -> "char const *":
        return _riskuserapi.CShfeFtdcRiskUserApi_GetTradingDay(self)

    def RegisterFront(self, pszFrontAddress: "char *") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserApi_RegisterFront(self, pszFrontAddress)

    def RegisterSpi(self, pSpi: "CShfeFtdcRiskUserSpi") -> "void":
        return _riskuserapi.CShfeFtdcRiskUserApi_RegisterSpi(self, pSpi)

    def ReqRiskUserLogin(self, pReqRiskUserLogin: "CShfeFtdcReqRiskUserLoginField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqRiskUserLogin(self, pReqRiskUserLogin, nRequestID)

    def ReqQryInvestorMarginRate(self, pQryInvestorMarginRate: "CShfeFtdcQryInvestorMarginRateField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryInvestorMarginRate(self, pQryInvestorMarginRate, nRequestID)

    def ReqQryOrderStat(self, pQryStat: "CShfeFtdcQryStatField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryOrderStat(self, pQryStat, nRequestID)

    def ReqSubRiskMarketData(self, pSubMarketData: "CShfeFtdcSubMarketDataField", SubMarketDataCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSubRiskMarketData(self, pSubMarketData, SubMarketDataCnt, nRequestID)

    def ReqUnSubRiskMarketData(self, pSubMarketData: "CShfeFtdcSubMarketDataField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqUnSubRiskMarketData(self, pSubMarketData, nRequestID)

    def ReqQryInstPositionRate(self, pQryInstPositionRate: "CShfeFtdcQryInstPositionRateField", QryInstPositionRateCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryInstPositionRate(self, pQryInstPositionRate, QryInstPositionRateCnt, nRequestID)

    def ReqQryProductPositionRate(self, pQryProductPositionRate: "CShfeFtdcQryProductPositionRateField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryProductPositionRate(self, pQryProductPositionRate, nRequestID)

    def ReqQryTradingCodeHash(self, pInvestorIDRange: "CShfeFtdcInvestorIDRangeField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryTradingCodeHash(self, pInvestorIDRange, nRequestID)

    def ReqQryTradingCode(self, pInvestorIDRange: "CShfeFtdcInvestorIDRangeField", InvestorIDRangeCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryTradingCode(self, pInvestorIDRange, InvestorIDRangeCnt, nRequestID)

    def ReqSubscribeTrade(self, pNotifySequence: "CShfeFtdcNotifySequenceField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSubscribeTrade(self, pNotifySequence, nRequestID)

    def ReqSubscribeOrder(self, pNotifySequence: "CShfeFtdcNotifySequenceField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSubscribeOrder(self, pNotifySequence, nRequestID)

    def ReqSubBrokerUserEvent(self, pNotifySequence: "CShfeFtdcNotifySequenceField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSubBrokerUserEvent(self, pNotifySequence, nRequestID)

    def ReqRiskOrderInsert(self, pRiskForceCloseOrder: "CShfeFtdcRiskForceCloseOrderField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqRiskOrderInsert(self, pRiskForceCloseOrder, nRequestID)

    def ReqRiskOrderAction(self, pInputOrderAction: "CShfeFtdcInputOrderActionField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqRiskOrderAction(self, pInputOrderAction, nRequestID)

    def ReqSubscribePosition(self, pNotifySequence: "CShfeFtdcNotifySequenceField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSubscribePosition(self, pNotifySequence, nRequestID)

    def ReqRiskNotifyCommand(self, pRiskNotifyCommand: "CShfeFtdcRiskNotifyCommandField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqRiskNotifyCommand(self, pRiskNotifyCommand, nRequestID)

    def ReqBatchForceCloseCalc(self, pForceCloseStandard: "CShfeFtdcForceCloseStandardField", pForceClosePositionRule: "CShfeFtdcForceClosePositionRuleField", ForceClosePositionRuleCnt: "int", pForceCloseList: "CShfeFtdcForceCloseListField", ForceCloseListCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqBatchForceCloseCalc(self, pForceCloseStandard, pForceClosePositionRule, ForceClosePositionRuleCnt, pForceCloseList, ForceCloseListCnt, nRequestID)

    def ReqForceCloseCalc(self, pForceCloseStandard: "CShfeFtdcForceCloseStandardField", pForceClosePosition: "CShfeFtdcForceClosePositionField", ForceClosePositionCnt: "int", pForceCloseList: "CShfeFtdcForceCloseListField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqForceCloseCalc(self, pForceCloseStandard, pForceClosePosition, ForceClosePositionCnt, pForceCloseList, nRequestID)

    def ReqSetIndexNPPParam(self, pIndexNPPParam: "CShfeFtdcIndexNPPParamField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSetIndexNPPParam(self, pIndexNPPParam, nRequestID)

    def ReqRemIndexNPPParam(self, pIndexNPPParam: "CShfeFtdcIndexNPPParamField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqRemIndexNPPParam(self, pIndexNPPParam, nRequestID)

    def ReqQryLogin(self, pNormalRiskQuery: "CShfeFtdcNormalRiskQueryField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryLogin(self, pNormalRiskQuery, nRequestID)

    def ReqQryPriceVaryEffect(self, pQryPriceVaryEffect: "CShfeFtdcQryPriceVaryEffectField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryPriceVaryEffect(self, pQryPriceVaryEffect, nRequestID)

    def ReqQrySafePriceRange(self, pQrySafePriceRange: "CShfeFtdcQrySafePriceRangeField", pPriceVaryParam: "CShfeFtdcPriceVaryParamField", PriceVaryParamCnt: "int", pBrokerInvestorCurrency: "CShfeFtdcBrokerInvestorCurrencyField", BrokerInvestorCurrencyCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQrySafePriceRange(self, pQrySafePriceRange, pPriceVaryParam, PriceVaryParamCnt, pBrokerInvestorCurrency, BrokerInvestorCurrencyCnt, nRequestID)

    def ReqRiskParkedOrderInsert(self, pRiskParkedOrder: "CShfeFtdcRiskParkedOrderField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqRiskParkedOrderInsert(self, pRiskParkedOrder, nRequestID)

    def ReqRemoveRiskParkedOrder(self, pRemoveRiskParkedOrder: "CShfeFtdcRemoveRiskParkedOrderField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqRemoveRiskParkedOrder(self, pRemoveRiskParkedOrder, nRequestID)

    def ReqSubRiskParkedOrder(self, pNotifySequence: "CShfeFtdcNotifySequenceField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSubRiskParkedOrder(self, pNotifySequence, nRequestID)

    def ReqRiskUserPasswordUpd(self, pUserPasswordUpdate: "CShfeFtdcUserPasswordUpdateField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqRiskUserPasswordUpd(self, pUserPasswordUpdate, nRequestID)

    def ReqSubSeqDeposit(self, pRiskNtfSequence: "CShfeFtdcRiskNtfSequenceField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSubSeqDeposit(self, pRiskNtfSequence, nRequestID)

    def ReqAddRiskUserEvent(self, pRiskUserEvent: "CShfeFtdcRiskUserEventField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqAddRiskUserEvent(self, pRiskUserEvent, nRequestID)

    def ReqQryPredictRisk(self, pPredictRiskParam: "CShfeFtdcPredictRiskParamField", pBrokerInvestor: "CShfeFtdcBrokerInvestorField", BrokerInvestorCnt: "int", pProductLimits: "CShfeFtdcProductLimitsField", ProductLimitsCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryPredictRisk(self, pPredictRiskParam, pBrokerInvestor, BrokerInvestorCnt, pProductLimits, ProductLimitsCnt, nRequestID)

    def ReqQryInvestorLinkMan(self, pInvestorIDRange: "CShfeFtdcInvestorIDRangeField", InvestorIDRangeCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryInvestorLinkMan(self, pInvestorIDRange, InvestorIDRangeCnt, nRequestID)

    def ReqQryInvestorDepartment(self, pInvestorIDRange: "CShfeFtdcInvestorIDRangeField", InvestorIDRangeCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryInvestorDepartment(self, pInvestorIDRange, InvestorIDRangeCnt, nRequestID)

    def ReqSubPreRiskAccount(self, pRiskNtfSequence: "CShfeFtdcRiskNtfSequenceField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSubPreRiskAccount(self, pRiskNtfSequence, nRequestID)

    def ReqModNoticePattern(self, pNoticePattern: "CShfeFtdcNoticePatternField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqModNoticePattern(self, pNoticePattern, nRequestID)

    def ReqSubVaryMarketData(self, pPriceRange: "CShfeFtdcPriceRangeField", PriceRangeCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSubVaryMarketData(self, pPriceRange, PriceRangeCnt, nRequestID)

    def ReqUnSubVaryMarketData(self, pSubMarketData: "CShfeFtdcSubMarketDataField", SubMarketDataCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqUnSubVaryMarketData(self, pSubMarketData, SubMarketDataCnt, nRequestID)

    def ReqAddRiskNotifyA(self, pRiskNotifyA: "CShfeFtdcRiskNotifyAField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqAddRiskNotifyA(self, pRiskNotifyA, nRequestID)

    def ReqAddBizNotice(self, pBizNotice: "CShfeFtdcBizNoticeField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqAddBizNotice(self, pBizNotice, nRequestID)

    def ReqSubSeqData(self, pRiskNtfSequence: "CShfeFtdcRiskNtfSequenceField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSubSeqData(self, pRiskNtfSequence, nRequestID)

    def ReqRiskQryBrokerDeposit(self, pQueryBrokerDeposit: "CShfeFtdcQueryBrokerDepositField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqRiskQryBrokerDeposit(self, pQueryBrokerDeposit, nRequestID)

    def ReqModRiskInvestorParam(self, pRiskInvestorParam: "CShfeFtdcRiskInvestorParamField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqModRiskInvestorParam(self, pRiskInvestorParam, nRequestID)

    def ReqRemRiskInvestorParam(self, pRiskInvestorParam: "CShfeFtdcRiskInvestorParamField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqRemRiskInvestorParam(self, pRiskInvestorParam, nRequestID)

    def ReqForceRiskUserLogout(self, pRiskLoginInfo: "CShfeFtdcRiskLoginInfoField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqForceRiskUserLogout(self, pRiskLoginInfo, nRequestID)

    def ReqAddRiskPattern(self, pRiskPattern: "CShfeFtdcRiskPatternField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqAddRiskPattern(self, pRiskPattern, nRequestID)

    def ReqModRiskPattern(self, pRiskPattern: "CShfeFtdcRiskPatternField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqModRiskPattern(self, pRiskPattern, nRequestID)

    def ReqRemRiskPattern(self, pRiskPattern: "CShfeFtdcRiskPatternField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqRemRiskPattern(self, pRiskPattern, nRequestID)

    def ReqAddInvestorPattern(self, pInvestorPattern: "CShfeFtdcInvestorPatternField", InvestorPatternCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqAddInvestorPattern(self, pInvestorPattern, InvestorPatternCnt, nRequestID)

    def ReqModInvestorPattern(self, pInvestorPattern: "CShfeFtdcInvestorPatternField", InvestorPatternCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqModInvestorPattern(self, pInvestorPattern, InvestorPatternCnt, nRequestID)

    def ReqRemInvestorPattern(self, pInvestorPattern: "CShfeFtdcInvestorPatternField", InvestorPatternCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqRemInvestorPattern(self, pInvestorPattern, InvestorPatternCnt, nRequestID)

    def ReqSubSeqRiskNotifyB(self, pRiskNtfSequence: "CShfeFtdcRiskNtfSequenceField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSubSeqRiskNotifyB(self, pRiskNtfSequence, nRequestID)

    def ReqQryPositionStat(self, pQryStat: "CShfeFtdcQryStatField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryPositionStat(self, pQryStat, nRequestID)

    def ReqQryTradeStat(self, pQryStat: "CShfeFtdcQryStatField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryTradeStat(self, pQryStat, nRequestID)

    def ReqQryInvestorLinkManHash(self, pInvestorIDRange: "CShfeFtdcInvestorIDRangeField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryInvestorLinkManHash(self, pInvestorIDRange, nRequestID)

    def ReqQryInvestorDepartmentHash(self, pInvestorIDRange: "CShfeFtdcInvestorIDRangeField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryInvestorDepartmentHash(self, pInvestorIDRange, nRequestID)

    def ReqQryStressTest(self, pSTPrice: "CShfeFtdcSTPriceField", STPriceCnt: "int", pSTMarginRate: "CShfeFtdcSTMarginRateField", STMarginRateCnt: "int", pSTExchMarginRate: "CShfeFtdcSTExchMarginRateField", STExchMarginRateCnt: "int", pSTStandard: "CShfeFtdcSTStandardField", pSTDCECombMarginParam: "CShfeFtdcSTDCECombMarginParamField", STDCECombMarginParamCnt: "int", pSTDCESPInsGroupParam: "CShfeFtdcSTDCESPInsGroupParamField", STDCESPInsGroupParamCnt: "int", pSTTradingDate: "CShfeFtdcSTTradingDateField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryStressTest(self, pSTPrice, STPriceCnt, pSTMarginRate, STMarginRateCnt, pSTExchMarginRate, STExchMarginRateCnt, pSTStandard, pSTDCECombMarginParam, STDCECombMarginParamCnt, pSTDCESPInsGroupParam, STDCESPInsGroupParamCnt, pSTTradingDate, nRequestID)

    def ReqQryLowMarginInvestorHash(self, pInvestorIDRange: "CShfeFtdcInvestorIDRangeField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryLowMarginInvestorHash(self, pInvestorIDRange, nRequestID)

    def ReqQryLowMarginInvestor(self, pInvestorIDRange: "CShfeFtdcInvestorIDRangeField", InvestorIDRangeCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryLowMarginInvestor(self, pInvestorIDRange, InvestorIDRangeCnt, nRequestID)

    def ReqSetSmsStatus(self, pSetSmsStatus: "CShfeFtdcSetSmsStatusField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSetSmsStatus(self, pSetSmsStatus, nRequestID)

    def ReqQryExchMarginRate(self, pQryExchMarginRate: "CShfeFtdcQryExchMarginRateField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryExchMarginRate(self, pQryExchMarginRate, nRequestID)

    def ReqQryCommissionRate(self, pQryInstrumentCommissionRate: "CShfeFtdcQryInstrumentCommissionRateField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryCommissionRate(self, pQryInstrumentCommissionRate, nRequestID)

    def ReqQrySecAgentInvestorHash(self, pInvestorIDRange: "CShfeFtdcInvestorIDRangeField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQrySecAgentInvestorHash(self, pInvestorIDRange, nRequestID)

    def ReqQrySecAgentInvestor(self, pInvestorIDRange: "CShfeFtdcInvestorIDRangeField", InvestorIDRangeCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQrySecAgentInvestor(self, pInvestorIDRange, InvestorIDRangeCnt, nRequestID)

    def ReqQryOptionInstrCommRate(self, pQryOptionInstrCommRate: "CShfeFtdcQryOptionInstrCommRateField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryOptionInstrCommRate(self, pQryOptionInstrCommRate, nRequestID)

    def ReqQryMMOptionInstrCommRate(self, pQryMMOptionInstrCommRate: "CShfeFtdcQryMMOptionInstrCommRateField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryMMOptionInstrCommRate(self, pQryMMOptionInstrCommRate, nRequestID)

    def ReqQryExecOrder(self, pRiskQryExecOrder: "CShfeFtdcRiskQryExecOrderField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryExecOrder(self, pRiskQryExecOrder, nRequestID)

    def ReqQryLogUserLoginStat(self, pRiskQryLogUserLoginStat: "CShfeFtdcRiskQryLogUserLoginStatField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryLogUserLoginStat(self, pRiskQryLogUserLoginStat, nRequestID)

    def ReqQryLogUserLoginInfo(self, pRiskQryLogUserLoginInfo: "CShfeFtdcRiskQryLogUserLoginInfoField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryLogUserLoginInfo(self, pRiskQryLogUserLoginInfo, nRequestID)

    def ReqQryInstrumentGreeks(self, pRiskQryInstrumentGreeks: "CShfeFtdcRiskQryInstrumentGreeksField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryInstrumentGreeks(self, pRiskQryInstrumentGreeks, nRequestID)

    def ReqQryExeciseTest(self, pETPrice: "CShfeFtdcETPriceField", ETPriceCnt: "int", pETStrikePosition: "CShfeFtdcETStrikePositionField", ETStrikePositionCnt: "int", pETDCECombMarginParam: "CShfeFtdcETDCECombMarginParamField", ETDCECombMarginParamCnt: "int", pETDCESPInsGroupParam: "CShfeFtdcETDCESPInsGroupParamField", ETDCESPInsGroupParamCnt: "int", pExeAlg: "CShfeFtdcExeAlgField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryExeciseTest(self, pETPrice, ETPriceCnt, pETStrikePosition, ETStrikePositionCnt, pETDCECombMarginParam, ETDCECombMarginParamCnt, pETDCESPInsGroupParam, ETDCESPInsGroupParamCnt, pExeAlg, nRequestID)

    def ReqQryUserRightsAssign(self, pInvestorIDRange: "CShfeFtdcInvestorIDRangeField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryUserRightsAssign(self, pInvestorIDRange, nRequestID)

    def ReqQryCurrDRIdentity(self, pInvestorIDRange: "CShfeFtdcInvestorIDRangeField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryCurrDRIdentity(self, pInvestorIDRange, nRequestID)

    def ReqQrySecAgentTradingAccount(self, pQryTradingAccount: "CShfeFtdcQryTradingAccountField", QryTradingAccountCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQrySecAgentTradingAccount(self, pQryTradingAccount, QryTradingAccountCnt, nRequestID)

    def ReqQrySyncDelaySwap(self, pQrySyncDelaySwap: "CShfeFtdcQrySyncDelaySwapField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQrySyncDelaySwap(self, pQrySyncDelaySwap, nRequestID)

    def ReqQrySecAgentCheckMode(self, pQrySecAgentCheckMode: "CShfeFtdcQrySecAgentCheckModeField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQrySecAgentCheckMode(self, pQrySecAgentCheckMode, nRequestID)

    def ReqQrySecAgentTradeInfo(self, pQrySecAgentTradeInfo: "CShfeFtdcQrySecAgentTradeInfoField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQrySecAgentTradeInfo(self, pQrySecAgentTradeInfo, nRequestID)

    def ReqAddPersistPositionCombine(self, pDcePersistPositionCombine: "CShfeFtdcDcePersistPositionCombineField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqAddPersistPositionCombine(self, pDcePersistPositionCombine, nRequestID)

    def ReqDelPersistPositionCombine(self, pDcePersistPositionCombine: "CShfeFtdcDcePersistPositionCombineField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqDelPersistPositionCombine(self, pDcePersistPositionCombine, nRequestID)

    def ReqQryDepthMarketData(self, pQryDepthMarketData: "CShfeFtdcQryDepthMarketDataField", QryDepthMarketDataCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryDepthMarketData(self, pQryDepthMarketData, QryDepthMarketDataCnt, nRequestID)

    def ReqOptionTrade(self, pOptionTradePrice: "CShfeFtdcOptionTradePriceField", OptionTradePriceCnt: "int", pOptionTradeInvestor: "CShfeFtdcOptionTradeInvestorField", OptionTradeInvestorCnt: "int", pOptionTradeInvestorPosition: "CShfeFtdcOptionTradeInvestorPositionField", OptionTradeInvestorPositionCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqOptionTrade(self, pOptionTradePrice, OptionTradePriceCnt, pOptionTradeInvestor, OptionTradeInvestorCnt, pOptionTradeInvestorPosition, OptionTradeInvestorPositionCnt, nRequestID)

    def ReqBatchExecOrderInsert(self, pPosiExecOrder: "CShfeFtdcPosiExecOrderField", PosiExecOrderCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqBatchExecOrderInsert(self, pPosiExecOrder, PosiExecOrderCnt, nRequestID)

    def ReqExecFrozen(self, pExecDepositFrozen: "CShfeFtdcExecDepositFrozenField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqExecFrozen(self, pExecDepositFrozen, nRequestID)

    def ReqBrokerDepositTest(self, pReqDeposit: "CShfeFtdcReqDepositField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqBrokerDepositTest(self, pReqDeposit, nRequestID)

    def ReqSetExchangeRiskFreeRate(self, pExchangeRiskFreeRate: "CShfeFtdcExchangeRiskFreeRateField", ExchangeRiskFreeRateCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSetExchangeRiskFreeRate(self, pExchangeRiskFreeRate, ExchangeRiskFreeRateCnt, nRequestID)

    def ReqSetProductDividendRate(self, pProductDividendRate: "CShfeFtdcProductDividendRateField", ProductDividendRateCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSetProductDividendRate(self, pProductDividendRate, ProductDividendRateCnt, nRequestID)

    def ReqSetUnderlyingIndexPrice(self, pUnderlyingIndexPrice: "CShfeFtdcUnderlyingIndexPriceField", UnderlyingIndexPriceCnt: "int", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSetUnderlyingIndexPrice(self, pUnderlyingIndexPrice, UnderlyingIndexPriceCnt, nRequestID)

    def ReqQryCalendarReminder(self, pQryCalendarReminder: "CShfeFtdcQryCalendarReminderField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryCalendarReminder(self, pQryCalendarReminder, nRequestID)

    def ReqSetCZCEOptionSelfClose(self, pSetCZCEOptionSelfClose: "CShfeFtdcSetCZCEOptionSelfCloseField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSetCZCEOptionSelfClose(self, pSetCZCEOptionSelfClose, nRequestID)

    def ReqQryOptionSelfClose(self, pQryOptionSelfClose: "CShfeFtdcQryOptionSelfCloseField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryOptionSelfClose(self, pQryOptionSelfClose, nRequestID)

    def ReqQryForceCloseSnapshot(self, pQryForceCloseSnapshot: "CShfeFtdcQryForceCloseSnapshotField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryForceCloseSnapshot(self, pQryForceCloseSnapshot, nRequestID)

    def ReqQryInfoCommStageProduct(self, pQryInfoCommStageProduct: "CShfeFtdcQryInfoCommStageProductField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryInfoCommStageProduct(self, pQryInfoCommStageProduct, nRequestID)

    def ReqSubWarnEvent(self, pSubWarnEvent: "CShfeFtdcSubWarnEventField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSubWarnEvent(self, pSubWarnEvent, nRequestID)

    def ReqUnSubWarnEvent(self, pUnSubWarnEvent: "CShfeFtdcUnSubWarnEventField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqUnSubWarnEvent(self, pUnSubWarnEvent, nRequestID)

    def ReqRiskNotifyAck(self, pRiskNotifyAck: "CShfeFtdcRiskNotifyAckField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqRiskNotifyAck(self, pRiskNotifyAck, nRequestID)

    def ReqQryInvestorInfoComm(self, pQryInvestorInfoComm: "CShfeFtdcQryInvestorInfoCommField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqQryInvestorInfoComm(self, pQryInvestorInfoComm, nRequestID)

    def ReqSubForceCloseOrder(self, pNotifySequence: "CShfeFtdcNotifySequenceField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSubForceCloseOrder(self, pNotifySequence, nRequestID)

    def ReqSubForbiddenRight(self, pNotifySequence: "CShfeFtdcNotifySequenceField", nRequestID: "int") -> "int":
        return _riskuserapi.CShfeFtdcRiskUserApi_ReqSubForbiddenRight(self, pNotifySequence, nRequestID)

# Register CShfeFtdcRiskUserApi in _riskuserapi:
_riskuserapi.CShfeFtdcRiskUserApi_swigregister(CShfeFtdcRiskUserApi)

